Search.setIndex({"docnames": ["_autosummary/eta", "_autosummary/eta.config", "_autosummary/eta.config.sophie_offline", "_autosummary/eta.config.sophie_offline.config", "_autosummary/eta.constants", "_autosummary/eta.constants.ANSWER", "_autosummary/eta.constants.ARTICULATE_TO", "_autosummary/eta.constants.ASK", "_autosummary/eta.constants.CERTAINTY_THRESHOLD", "_autosummary/eta.constants.CLOG_FILES", "_autosummary/eta.constants.COREFERENCE_MODE", "_autosummary/eta.constants.DEFAULT_IMPORTANCE", "_autosummary/eta.constants.DEFAULT_IMPORTANCE_THRESHOLD", "_autosummary/eta.constants.DEFAULT_START", "_autosummary/eta.constants.EMBEDDING_DEFAULT_API", "_autosummary/eta.constants.EMBEDDING_DEFAULT_MODEL", "_autosummary/eta.constants.EMOTIONS_LIST", "_autosummary/eta.constants.EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT", "_autosummary/eta.constants.FORGET_FROM_STM", "_autosummary/eta.constants.GPT_DEBUG_FILE", "_autosummary/eta.constants.HERE", "_autosummary/eta.constants.IO_CLOG_DIR", "_autosummary/eta.constants.IO_IN_DIR", "_autosummary/eta.constants.IO_OUT_DIR", "_autosummary/eta.constants.IO_PATH", "_autosummary/eta.constants.KEY_PATH", "_autosummary/eta.constants.LOG_PATH", "_autosummary/eta.constants.ME", "_autosummary/eta.constants.NOOP", "_autosummary/eta.constants.NOOP_GEN", "_autosummary/eta.constants.NOOP_YOU", "_autosummary/eta.constants.NOW", "_autosummary/eta.constants.PARAPHRASE_TO", "_autosummary/eta.constants.REACT_TO", "_autosummary/eta.constants.REASONING_DEPTH_LIMIT", "_autosummary/eta.constants.RECENCY_CUTOFF", "_autosummary/eta.constants.REPLY_TO", "_autosummary/eta.constants.RESPOND_TO", "_autosummary/eta.constants.SAY_BYE", "_autosummary/eta.constants.SAY_TO", "_autosummary/eta.constants.SLEEPTIME", "_autosummary/eta.constants.SPEECH_ACTS", "_autosummary/eta.constants.STORE_IN_STM", "_autosummary/eta.constants.SYMTAB_PATH", "_autosummary/eta.constants.TELIC_VERBS", "_autosummary/eta.constants.YOU", "_autosummary/eta.core", "_autosummary/eta.core.eta", "_autosummary/eta.core.eta.DialogueState", "_autosummary/eta.core.eta.ProcessManager", "_autosummary/eta.core.eta.eta", "_autosummary/eta.core.eta.main", "_autosummary/eta.core.execution", "_autosummary/eta.core.execution.execute_forget_from_STM", "_autosummary/eta.core.execution.execute_say_bye", "_autosummary/eta.core.execution.execute_say_to", "_autosummary/eta.core.execution.execute_store_in_STM", "_autosummary/eta.core.execution.execution_loop", "_autosummary/eta.core.execution.fail_curr_step", "_autosummary/eta.core.execution.forget_from_stm_step", "_autosummary/eta.core.execution.get_action", "_autosummary/eta.core.execution.inquire_truth_of_curr_step", "_autosummary/eta.core.execution.me_pred", "_autosummary/eta.core.execution.process_condition_step", "_autosummary/eta.core.execution.process_expected_step", "_autosummary/eta.core.execution.process_intended_step", "_autosummary/eta.core.execution.process_repetition_step", "_autosummary/eta.core.execution.say_bye_step", "_autosummary/eta.core.execution.say_to_step", "_autosummary/eta.core.execution.store_in_stm_step", "_autosummary/eta.core.execution.you_pred", "_autosummary/eta.core.perception", "_autosummary/eta.core.perception.observe", "_autosummary/eta.core.perception.perception_loop", "_autosummary/eta.core.perception.process_observations", "_autosummary/eta.core.perception.process_utterances", "_autosummary/eta.core.planning", "_autosummary/eta.core.planning.add_possible_actions_to_plan", "_autosummary/eta.core.planning.answer_step", "_autosummary/eta.core.planning.ask_step", "_autosummary/eta.core.planning.equivalent_speech_acts", "_autosummary/eta.core.planning.expand_condition_step", "_autosummary/eta.core.planning.expand_plan_steps", "_autosummary/eta.core.planning.expand_primitive_step", "_autosummary/eta.core.planning.expand_repetition_step", "_autosummary/eta.core.planning.merge_plan_steps", "_autosummary/eta.core.planning.paraphrase_step", "_autosummary/eta.core.planning.plan_answer", "_autosummary/eta.core.planning.plan_ask", "_autosummary/eta.core.planning.plan_paraphrase", "_autosummary/eta.core.planning.plan_react", "_autosummary/eta.core.planning.plan_respond", "_autosummary/eta.core.planning.planning_loop", "_autosummary/eta.core.planning.react_step", "_autosummary/eta.core.planning.relative_speech_act_step", "_autosummary/eta.core.planning.reorder_plan_steps", "_autosummary/eta.core.planning.reply_step", "_autosummary/eta.core.planning.respond_step", "_autosummary/eta.core.planning.say_to_step_from_utt", "_autosummary/eta.core.planning.say_to_step_from_utts", "_autosummary/eta.core.planning.schema_step", "_autosummary/eta.core.planning.split_schema_step", "_autosummary/eta.core.reasoning", "_autosummary/eta.core.reasoning.infer_bottom_up", "_autosummary/eta.core.reasoning.infer_top_down", "_autosummary/eta.core.reasoning.reasoning_loop", "_autosummary/eta.core.reasoning.suggest_possible_actions", "_autosummary/eta.discourse", "_autosummary/eta.discourse.DialogueTurn", "_autosummary/eta.discourse.Utterance", "_autosummary/eta.discourse.compress", "_autosummary/eta.discourse.decompress", "_autosummary/eta.discourse.get_prior_turn", "_autosummary/eta.discourse.get_prior_words", "_autosummary/eta.discourse.parse_utt_str", "_autosummary/eta.discourse.presubst", "_autosummary/eta.discourse.swap_duals", "_autosummary/eta.embedding", "_autosummary/eta.embedding.DummyEmbedder", "_autosummary/eta.embedding.Embedder", "_autosummary/eta.embedding.HFEmbedder", "_autosummary/eta.embedding.STEmbedder", "_autosummary/eta.embedding.sim", "_autosummary/eta.lf", "_autosummary/eta.lf.Condition", "_autosummary/eta.lf.Domain", "_autosummary/eta.lf.ELF", "_autosummary/eta.lf.Eventuality", "_autosummary/eta.lf.Individual", "_autosummary/eta.lf.KEYWORDS", "_autosummary/eta.lf.KEYWORDS_R", "_autosummary/eta.lf.LF", "_autosummary/eta.lf.Repetition", "_autosummary/eta.lf.ULF", "_autosummary/eta.lf.Var", "_autosummary/eta.lf.and_prop_p", "_autosummary/eta.lf.characterizes_prop_p", "_autosummary/eta.lf.equal_prop_p", "_autosummary/eta.lf.expectation_p", "_autosummary/eta.lf.extract_set", "_autosummary/eta.lf.from_lisp_dirs", "_autosummary/eta.lf.from_lisp_file", "_autosummary/eta.lf.is_set", "_autosummary/eta.lf.make_set", "_autosummary/eta.lf.not_prop_p", "_autosummary/eta.lf.or_prop_p", "_autosummary/eta.lf.parse_condition", "_autosummary/eta.lf.parse_eventuality", "_autosummary/eta.lf.parse_eventuality_list", "_autosummary/eta.lf.parse_repetition", "_autosummary/eta.lf.remove_type", "_autosummary/eta.lf.set_union", "_autosummary/eta.memory", "_autosummary/eta.memory.Memory", "_autosummary/eta.memory.MemoryStorage", "_autosummary/eta.plan", "_autosummary/eta.plan.PlanNode", "_autosummary/eta.plan.PlanStep", "_autosummary/eta.plan.expand_plan_node", "_autosummary/eta.plan.get_first_plan_node", "_autosummary/eta.plan.get_last_plan_node", "_autosummary/eta.plan.init_plan_from_eventualities", "_autosummary/eta.plan.insert_before_plan_node", "_autosummary/eta.plan.merge_plan_nodes", "_autosummary/eta.plan.visualize_plan", "_autosummary/eta.schema", "_autosummary/eta.schema.DialSchema", "_autosummary/eta.schema.EpiSchema", "_autosummary/eta.schema.ObjSchema", "_autosummary/eta.schema.Schema", "_autosummary/eta.schema.SchemaLibrary", "_autosummary/eta.transducers", "_autosummary/eta.transducers.base", "_autosummary/eta.transducers.base.AffectTransducer", "_autosummary/eta.transducers.base.AnswerTransducer", "_autosummary/eta.transducers.base.AskTransducer", "_autosummary/eta.transducers.base.GistTransducer", "_autosummary/eta.transducers.base.ParaphraseTransducer", "_autosummary/eta.transducers.base.PragmaticTransducer", "_autosummary/eta.transducers.base.ReactionTransducer", "_autosummary/eta.transducers.base.ReasonBottomUpTransducer", "_autosummary/eta.transducers.base.ReasonTopDownTransducer", "_autosummary/eta.transducers.base.ResponseTransducer", "_autosummary/eta.transducers.base.SemanticTransducer", "_autosummary/eta.transducers.base.SubplanTransducer", "_autosummary/eta.transducers.base.Transducer", "_autosummary/eta.transducers.tt", "_autosummary/eta.transducers.tt.TTAffectTransducer", "_autosummary/eta.transducers.tt.TTAnswerTransducer", "_autosummary/eta.transducers.tt.TTAskTransducer", "_autosummary/eta.transducers.tt.TTGistTransducer", "_autosummary/eta.transducers.tt.TTParaphraseTransducer", "_autosummary/eta.transducers.tt.TTPragmaticTransducer", "_autosummary/eta.transducers.tt.TTReactionTransducer", "_autosummary/eta.transducers.tt.TTReasonBottomUpTransducer", "_autosummary/eta.transducers.tt.TTReasonTopDownTransducer", "_autosummary/eta.transducers.tt.TTResponseTransducer", "_autosummary/eta.transducers.tt.TTSemanticTransducer", "_autosummary/eta.transducers.tt.TTSubplanTransducer", "_autosummary/eta.transducers.tt.TTTransducer", "_autosummary/eta.util", "_autosummary/eta.util.buffer", "_autosummary/eta.util.buffer.clear", "_autosummary/eta.util.buffer.enqueue", "_autosummary/eta.util.buffer.enqueue_ordered", "_autosummary/eta.util.buffer.get_item", "_autosummary/eta.util.buffer.is_empty", "_autosummary/eta.util.buffer.iterate", "_autosummary/eta.util.buffer.max_importance", "_autosummary/eta.util.buffer.pop_all", "_autosummary/eta.util.buffer.pop_item", "_autosummary/eta.util.file", "_autosummary/eta.util.file.append_file", "_autosummary/eta.util.file.clear", "_autosummary/eta.util.file.ensure_dir_exists", "_autosummary/eta.util.file.ensure_file_exists", "_autosummary/eta.util.file.exists", "_autosummary/eta.util.file.get_path", "_autosummary/eta.util.file.load_json", "_autosummary/eta.util.file.read_file", "_autosummary/eta.util.file.read_lines", "_autosummary/eta.util.file.remove", "_autosummary/eta.util.file.write_file", "_autosummary/eta.util.file.write_json", "_autosummary/eta.util.general", "_autosummary/eta.util.general.append", "_autosummary/eta.util.general.argmax", "_autosummary/eta.util.general.atom", "_autosummary/eta.util.general.certainty_to_period", "_autosummary/eta.util.general.clear_symtab", "_autosummary/eta.util.general.cons", "_autosummary/eta.util.general.cons_dict", "_autosummary/eta.util.general.dict_get", "_autosummary/eta.util.general.dict_rem", "_autosummary/eta.util.general.dict_rem_val", "_autosummary/eta.util.general.dict_substall_keys", "_autosummary/eta.util.general.dual_var", "_autosummary/eta.util.general.duplicate_var", "_autosummary/eta.util.general.episode_name", "_autosummary/eta.util.general.episode_var", "_autosummary/eta.util.general.escaped_symbol_p", "_autosummary/eta.util.general.extract_category", "_autosummary/eta.util.general.flatten", "_autosummary/eta.util.general.gentemp", "_autosummary/eta.util.general.get_keyword_contents", "_autosummary/eta.util.general.has_elapsed_certainty_period", "_autosummary/eta.util.general.indent", "_autosummary/eta.util.general.isquote", "_autosummary/eta.util.general.linsum", "_autosummary/eta.util.general.listp", "_autosummary/eta.util.general.normalize", "_autosummary/eta.util.general.push", "_autosummary/eta.util.general.random_element", "_autosummary/eta.util.general.rec_find", "_autosummary/eta.util.general.rec_find_if", "_autosummary/eta.util.general.rec_remove", "_autosummary/eta.util.general.rec_replace", "_autosummary/eta.util.general.remove_duplicates", "_autosummary/eta.util.general.remove_nil", "_autosummary/eta.util.general.replaceall", "_autosummary/eta.util.general.split_by_cond", "_autosummary/eta.util.general.squash", "_autosummary/eta.util.general.standardize", "_autosummary/eta.util.general.subst", "_autosummary/eta.util.general.substall", "_autosummary/eta.util.general.symbolp", "_autosummary/eta.util.general.to_key", "_autosummary/eta.util.general.variablep", "_autosummary/eta.util.sexpr", "_autosummary/eta.util.sexpr.balanced_substr", "_autosummary/eta.util.sexpr.clean_lisp", "_autosummary/eta.util.sexpr.clean_s_expr", "_autosummary/eta.util.sexpr.compress_quotes", "_autosummary/eta.util.sexpr.convert_quotes", "_autosummary/eta.util.sexpr.list_to_s_expr", "_autosummary/eta.util.sexpr.list_to_str", "_autosummary/eta.util.sexpr.parse_s_expr", "_autosummary/eta.util.sexpr.read_lisp", "_autosummary/eta.util.sexpr.standardize_symbols", "_autosummary/eta.util.sexpr.write_lisp", "_autosummary/eta.util.time", "_autosummary/eta.util.time.TimePoint", "_autosummary/eta.util.time.get_elapsed", "_autosummary/eta.util.time.now", "_autosummary/eta.util.time.record_from_time_pair", "_autosummary/eta.util.time.time_pair_from_record", "_autosummary/eta.util.time.time_pair_from_tuple", "_autosummary/eta.util.time.time_pair_p", "_autosummary/eta.util.time.time_record_p", "_autosummary/eta.util.time.time_tuple_p", "_autosummary/eta.util.time.tuple_from_time_pair", "_autosummary/eta.util.tt", "_autosummary/eta.util.tt.choice", "_autosummary/eta.util.tt.choice.choose_result_for", "_autosummary/eta.util.tt.choice.is_tree_root", "_autosummary/eta.util.tt.choice.is_tree_root_clause", "_autosummary/eta.util.tt.choice.is_tree_root_list", "_autosummary/eta.util.tt.parse", "_autosummary/eta.util.tt.parse.attachfeat", "_autosummary/eta.util.tt.parse.from_lisp_dirs", "_autosummary/eta.util.tt.parse.from_lisp_file", "_autosummary/eta.util.tt.parse.init_node", "_autosummary/eta.util.tt.parse.merge_feats", "_autosummary/eta.util.tt.parse.merge_preds", "_autosummary/eta.util.tt.parse.merge_trees", "_autosummary/eta.util.tt.parse.read_preds_file", "_autosummary/eta.util.tt.parse.readrules", "_autosummary/eta.util.tt.preds", "_autosummary/eta.util.tt.preds.affirm_adv", "_autosummary/eta.util.tt.preds.comma", "_autosummary/eta.util.tt.preds.lex_ulf", "_autosummary/eta.util.tt.preds.modal", "_autosummary/eta.util.tt.preds.non_neg", "_autosummary/eta.util.tt.preds.non_neg_mod", "_autosummary/eta.util.tt.preds.prefix_each", "_autosummary/eta.util.tt.preds.quote_to_list", "_autosummary/eta.util.tt.preds.split_sentences", "_autosummary/eta.util.tt.preds.zero", "_autosummary/eta.util.ulf", "_autosummary/eta.util.ulf.lex", "_autosummary/eta.util.ulf.lex.stem_superlative", "_autosummary/eta.util.ulf.lex.to_ulf", "api", "index"], "filenames": ["_autosummary/eta.rst", "_autosummary/eta.config.rst", "_autosummary/eta.config.sophie_offline.rst", "_autosummary/eta.config.sophie_offline.config.rst", "_autosummary/eta.constants.rst", "_autosummary/eta.constants.ANSWER.rst", "_autosummary/eta.constants.ARTICULATE_TO.rst", "_autosummary/eta.constants.ASK.rst", "_autosummary/eta.constants.CERTAINTY_THRESHOLD.rst", "_autosummary/eta.constants.CLOG_FILES.rst", "_autosummary/eta.constants.COREFERENCE_MODE.rst", "_autosummary/eta.constants.DEFAULT_IMPORTANCE.rst", "_autosummary/eta.constants.DEFAULT_IMPORTANCE_THRESHOLD.rst", "_autosummary/eta.constants.DEFAULT_START.rst", "_autosummary/eta.constants.EMBEDDING_DEFAULT_API.rst", "_autosummary/eta.constants.EMBEDDING_DEFAULT_MODEL.rst", "_autosummary/eta.constants.EMOTIONS_LIST.rst", "_autosummary/eta.constants.EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT.rst", "_autosummary/eta.constants.FORGET_FROM_STM.rst", "_autosummary/eta.constants.GPT_DEBUG_FILE.rst", "_autosummary/eta.constants.HERE.rst", "_autosummary/eta.constants.IO_CLOG_DIR.rst", "_autosummary/eta.constants.IO_IN_DIR.rst", "_autosummary/eta.constants.IO_OUT_DIR.rst", "_autosummary/eta.constants.IO_PATH.rst", "_autosummary/eta.constants.KEY_PATH.rst", "_autosummary/eta.constants.LOG_PATH.rst", "_autosummary/eta.constants.ME.rst", "_autosummary/eta.constants.NOOP.rst", "_autosummary/eta.constants.NOOP_GEN.rst", "_autosummary/eta.constants.NOOP_YOU.rst", "_autosummary/eta.constants.NOW.rst", "_autosummary/eta.constants.PARAPHRASE_TO.rst", "_autosummary/eta.constants.REACT_TO.rst", "_autosummary/eta.constants.REASONING_DEPTH_LIMIT.rst", "_autosummary/eta.constants.RECENCY_CUTOFF.rst", "_autosummary/eta.constants.REPLY_TO.rst", "_autosummary/eta.constants.RESPOND_TO.rst", "_autosummary/eta.constants.SAY_BYE.rst", "_autosummary/eta.constants.SAY_TO.rst", "_autosummary/eta.constants.SLEEPTIME.rst", "_autosummary/eta.constants.SPEECH_ACTS.rst", "_autosummary/eta.constants.STORE_IN_STM.rst", "_autosummary/eta.constants.SYMTAB_PATH.rst", "_autosummary/eta.constants.TELIC_VERBS.rst", "_autosummary/eta.constants.YOU.rst", "_autosummary/eta.core.rst", "_autosummary/eta.core.eta.rst", "_autosummary/eta.core.eta.DialogueState.rst", "_autosummary/eta.core.eta.ProcessManager.rst", "_autosummary/eta.core.eta.eta.rst", "_autosummary/eta.core.eta.main.rst", "_autosummary/eta.core.execution.rst", "_autosummary/eta.core.execution.execute_forget_from_STM.rst", "_autosummary/eta.core.execution.execute_say_bye.rst", "_autosummary/eta.core.execution.execute_say_to.rst", "_autosummary/eta.core.execution.execute_store_in_STM.rst", "_autosummary/eta.core.execution.execution_loop.rst", "_autosummary/eta.core.execution.fail_curr_step.rst", "_autosummary/eta.core.execution.forget_from_stm_step.rst", "_autosummary/eta.core.execution.get_action.rst", "_autosummary/eta.core.execution.inquire_truth_of_curr_step.rst", "_autosummary/eta.core.execution.me_pred.rst", "_autosummary/eta.core.execution.process_condition_step.rst", "_autosummary/eta.core.execution.process_expected_step.rst", "_autosummary/eta.core.execution.process_intended_step.rst", "_autosummary/eta.core.execution.process_repetition_step.rst", "_autosummary/eta.core.execution.say_bye_step.rst", "_autosummary/eta.core.execution.say_to_step.rst", "_autosummary/eta.core.execution.store_in_stm_step.rst", "_autosummary/eta.core.execution.you_pred.rst", "_autosummary/eta.core.perception.rst", "_autosummary/eta.core.perception.observe.rst", "_autosummary/eta.core.perception.perception_loop.rst", "_autosummary/eta.core.perception.process_observations.rst", "_autosummary/eta.core.perception.process_utterances.rst", "_autosummary/eta.core.planning.rst", "_autosummary/eta.core.planning.add_possible_actions_to_plan.rst", "_autosummary/eta.core.planning.answer_step.rst", "_autosummary/eta.core.planning.ask_step.rst", "_autosummary/eta.core.planning.equivalent_speech_acts.rst", "_autosummary/eta.core.planning.expand_condition_step.rst", "_autosummary/eta.core.planning.expand_plan_steps.rst", "_autosummary/eta.core.planning.expand_primitive_step.rst", "_autosummary/eta.core.planning.expand_repetition_step.rst", "_autosummary/eta.core.planning.merge_plan_steps.rst", "_autosummary/eta.core.planning.paraphrase_step.rst", "_autosummary/eta.core.planning.plan_answer.rst", "_autosummary/eta.core.planning.plan_ask.rst", "_autosummary/eta.core.planning.plan_paraphrase.rst", "_autosummary/eta.core.planning.plan_react.rst", "_autosummary/eta.core.planning.plan_respond.rst", "_autosummary/eta.core.planning.planning_loop.rst", "_autosummary/eta.core.planning.react_step.rst", "_autosummary/eta.core.planning.relative_speech_act_step.rst", "_autosummary/eta.core.planning.reorder_plan_steps.rst", "_autosummary/eta.core.planning.reply_step.rst", "_autosummary/eta.core.planning.respond_step.rst", "_autosummary/eta.core.planning.say_to_step_from_utt.rst", "_autosummary/eta.core.planning.say_to_step_from_utts.rst", "_autosummary/eta.core.planning.schema_step.rst", "_autosummary/eta.core.planning.split_schema_step.rst", "_autosummary/eta.core.reasoning.rst", "_autosummary/eta.core.reasoning.infer_bottom_up.rst", "_autosummary/eta.core.reasoning.infer_top_down.rst", "_autosummary/eta.core.reasoning.reasoning_loop.rst", "_autosummary/eta.core.reasoning.suggest_possible_actions.rst", "_autosummary/eta.discourse.rst", "_autosummary/eta.discourse.DialogueTurn.rst", "_autosummary/eta.discourse.Utterance.rst", "_autosummary/eta.discourse.compress.rst", "_autosummary/eta.discourse.decompress.rst", "_autosummary/eta.discourse.get_prior_turn.rst", "_autosummary/eta.discourse.get_prior_words.rst", "_autosummary/eta.discourse.parse_utt_str.rst", "_autosummary/eta.discourse.presubst.rst", "_autosummary/eta.discourse.swap_duals.rst", "_autosummary/eta.embedding.rst", "_autosummary/eta.embedding.DummyEmbedder.rst", "_autosummary/eta.embedding.Embedder.rst", "_autosummary/eta.embedding.HFEmbedder.rst", "_autosummary/eta.embedding.STEmbedder.rst", "_autosummary/eta.embedding.sim.rst", "_autosummary/eta.lf.rst", "_autosummary/eta.lf.Condition.rst", "_autosummary/eta.lf.Domain.rst", "_autosummary/eta.lf.ELF.rst", "_autosummary/eta.lf.Eventuality.rst", "_autosummary/eta.lf.Individual.rst", "_autosummary/eta.lf.KEYWORDS.rst", "_autosummary/eta.lf.KEYWORDS_R.rst", "_autosummary/eta.lf.LF.rst", "_autosummary/eta.lf.Repetition.rst", "_autosummary/eta.lf.ULF.rst", "_autosummary/eta.lf.Var.rst", "_autosummary/eta.lf.and_prop_p.rst", "_autosummary/eta.lf.characterizes_prop_p.rst", "_autosummary/eta.lf.equal_prop_p.rst", "_autosummary/eta.lf.expectation_p.rst", "_autosummary/eta.lf.extract_set.rst", "_autosummary/eta.lf.from_lisp_dirs.rst", "_autosummary/eta.lf.from_lisp_file.rst", "_autosummary/eta.lf.is_set.rst", "_autosummary/eta.lf.make_set.rst", "_autosummary/eta.lf.not_prop_p.rst", "_autosummary/eta.lf.or_prop_p.rst", "_autosummary/eta.lf.parse_condition.rst", "_autosummary/eta.lf.parse_eventuality.rst", "_autosummary/eta.lf.parse_eventuality_list.rst", "_autosummary/eta.lf.parse_repetition.rst", "_autosummary/eta.lf.remove_type.rst", "_autosummary/eta.lf.set_union.rst", "_autosummary/eta.memory.rst", "_autosummary/eta.memory.Memory.rst", "_autosummary/eta.memory.MemoryStorage.rst", "_autosummary/eta.plan.rst", "_autosummary/eta.plan.PlanNode.rst", "_autosummary/eta.plan.PlanStep.rst", "_autosummary/eta.plan.expand_plan_node.rst", "_autosummary/eta.plan.get_first_plan_node.rst", "_autosummary/eta.plan.get_last_plan_node.rst", "_autosummary/eta.plan.init_plan_from_eventualities.rst", "_autosummary/eta.plan.insert_before_plan_node.rst", "_autosummary/eta.plan.merge_plan_nodes.rst", "_autosummary/eta.plan.visualize_plan.rst", "_autosummary/eta.schema.rst", "_autosummary/eta.schema.DialSchema.rst", "_autosummary/eta.schema.EpiSchema.rst", "_autosummary/eta.schema.ObjSchema.rst", "_autosummary/eta.schema.Schema.rst", "_autosummary/eta.schema.SchemaLibrary.rst", "_autosummary/eta.transducers.rst", "_autosummary/eta.transducers.base.rst", "_autosummary/eta.transducers.base.AffectTransducer.rst", "_autosummary/eta.transducers.base.AnswerTransducer.rst", "_autosummary/eta.transducers.base.AskTransducer.rst", "_autosummary/eta.transducers.base.GistTransducer.rst", "_autosummary/eta.transducers.base.ParaphraseTransducer.rst", "_autosummary/eta.transducers.base.PragmaticTransducer.rst", "_autosummary/eta.transducers.base.ReactionTransducer.rst", "_autosummary/eta.transducers.base.ReasonBottomUpTransducer.rst", "_autosummary/eta.transducers.base.ReasonTopDownTransducer.rst", "_autosummary/eta.transducers.base.ResponseTransducer.rst", "_autosummary/eta.transducers.base.SemanticTransducer.rst", "_autosummary/eta.transducers.base.SubplanTransducer.rst", "_autosummary/eta.transducers.base.Transducer.rst", "_autosummary/eta.transducers.tt.rst", "_autosummary/eta.transducers.tt.TTAffectTransducer.rst", "_autosummary/eta.transducers.tt.TTAnswerTransducer.rst", "_autosummary/eta.transducers.tt.TTAskTransducer.rst", "_autosummary/eta.transducers.tt.TTGistTransducer.rst", "_autosummary/eta.transducers.tt.TTParaphraseTransducer.rst", "_autosummary/eta.transducers.tt.TTPragmaticTransducer.rst", "_autosummary/eta.transducers.tt.TTReactionTransducer.rst", "_autosummary/eta.transducers.tt.TTReasonBottomUpTransducer.rst", "_autosummary/eta.transducers.tt.TTReasonTopDownTransducer.rst", "_autosummary/eta.transducers.tt.TTResponseTransducer.rst", "_autosummary/eta.transducers.tt.TTSemanticTransducer.rst", "_autosummary/eta.transducers.tt.TTSubplanTransducer.rst", "_autosummary/eta.transducers.tt.TTTransducer.rst", "_autosummary/eta.util.rst", "_autosummary/eta.util.buffer.rst", "_autosummary/eta.util.buffer.clear.rst", "_autosummary/eta.util.buffer.enqueue.rst", "_autosummary/eta.util.buffer.enqueue_ordered.rst", "_autosummary/eta.util.buffer.get_item.rst", "_autosummary/eta.util.buffer.is_empty.rst", "_autosummary/eta.util.buffer.iterate.rst", "_autosummary/eta.util.buffer.max_importance.rst", "_autosummary/eta.util.buffer.pop_all.rst", "_autosummary/eta.util.buffer.pop_item.rst", "_autosummary/eta.util.file.rst", "_autosummary/eta.util.file.append_file.rst", "_autosummary/eta.util.file.clear.rst", "_autosummary/eta.util.file.ensure_dir_exists.rst", "_autosummary/eta.util.file.ensure_file_exists.rst", "_autosummary/eta.util.file.exists.rst", "_autosummary/eta.util.file.get_path.rst", "_autosummary/eta.util.file.load_json.rst", "_autosummary/eta.util.file.read_file.rst", "_autosummary/eta.util.file.read_lines.rst", "_autosummary/eta.util.file.remove.rst", "_autosummary/eta.util.file.write_file.rst", "_autosummary/eta.util.file.write_json.rst", "_autosummary/eta.util.general.rst", "_autosummary/eta.util.general.append.rst", "_autosummary/eta.util.general.argmax.rst", "_autosummary/eta.util.general.atom.rst", "_autosummary/eta.util.general.certainty_to_period.rst", "_autosummary/eta.util.general.clear_symtab.rst", "_autosummary/eta.util.general.cons.rst", "_autosummary/eta.util.general.cons_dict.rst", "_autosummary/eta.util.general.dict_get.rst", "_autosummary/eta.util.general.dict_rem.rst", "_autosummary/eta.util.general.dict_rem_val.rst", "_autosummary/eta.util.general.dict_substall_keys.rst", "_autosummary/eta.util.general.dual_var.rst", "_autosummary/eta.util.general.duplicate_var.rst", "_autosummary/eta.util.general.episode_name.rst", "_autosummary/eta.util.general.episode_var.rst", "_autosummary/eta.util.general.escaped_symbol_p.rst", "_autosummary/eta.util.general.extract_category.rst", "_autosummary/eta.util.general.flatten.rst", "_autosummary/eta.util.general.gentemp.rst", "_autosummary/eta.util.general.get_keyword_contents.rst", "_autosummary/eta.util.general.has_elapsed_certainty_period.rst", "_autosummary/eta.util.general.indent.rst", "_autosummary/eta.util.general.isquote.rst", "_autosummary/eta.util.general.linsum.rst", "_autosummary/eta.util.general.listp.rst", "_autosummary/eta.util.general.normalize.rst", "_autosummary/eta.util.general.push.rst", "_autosummary/eta.util.general.random_element.rst", "_autosummary/eta.util.general.rec_find.rst", "_autosummary/eta.util.general.rec_find_if.rst", "_autosummary/eta.util.general.rec_remove.rst", "_autosummary/eta.util.general.rec_replace.rst", "_autosummary/eta.util.general.remove_duplicates.rst", "_autosummary/eta.util.general.remove_nil.rst", "_autosummary/eta.util.general.replaceall.rst", "_autosummary/eta.util.general.split_by_cond.rst", "_autosummary/eta.util.general.squash.rst", "_autosummary/eta.util.general.standardize.rst", "_autosummary/eta.util.general.subst.rst", "_autosummary/eta.util.general.substall.rst", "_autosummary/eta.util.general.symbolp.rst", "_autosummary/eta.util.general.to_key.rst", "_autosummary/eta.util.general.variablep.rst", "_autosummary/eta.util.sexpr.rst", "_autosummary/eta.util.sexpr.balanced_substr.rst", "_autosummary/eta.util.sexpr.clean_lisp.rst", "_autosummary/eta.util.sexpr.clean_s_expr.rst", "_autosummary/eta.util.sexpr.compress_quotes.rst", "_autosummary/eta.util.sexpr.convert_quotes.rst", "_autosummary/eta.util.sexpr.list_to_s_expr.rst", "_autosummary/eta.util.sexpr.list_to_str.rst", "_autosummary/eta.util.sexpr.parse_s_expr.rst", "_autosummary/eta.util.sexpr.read_lisp.rst", "_autosummary/eta.util.sexpr.standardize_symbols.rst", "_autosummary/eta.util.sexpr.write_lisp.rst", "_autosummary/eta.util.time.rst", "_autosummary/eta.util.time.TimePoint.rst", "_autosummary/eta.util.time.get_elapsed.rst", "_autosummary/eta.util.time.now.rst", "_autosummary/eta.util.time.record_from_time_pair.rst", "_autosummary/eta.util.time.time_pair_from_record.rst", "_autosummary/eta.util.time.time_pair_from_tuple.rst", "_autosummary/eta.util.time.time_pair_p.rst", "_autosummary/eta.util.time.time_record_p.rst", "_autosummary/eta.util.time.time_tuple_p.rst", "_autosummary/eta.util.time.tuple_from_time_pair.rst", "_autosummary/eta.util.tt.rst", "_autosummary/eta.util.tt.choice.rst", "_autosummary/eta.util.tt.choice.choose_result_for.rst", "_autosummary/eta.util.tt.choice.is_tree_root.rst", "_autosummary/eta.util.tt.choice.is_tree_root_clause.rst", "_autosummary/eta.util.tt.choice.is_tree_root_list.rst", "_autosummary/eta.util.tt.parse.rst", "_autosummary/eta.util.tt.parse.attachfeat.rst", "_autosummary/eta.util.tt.parse.from_lisp_dirs.rst", "_autosummary/eta.util.tt.parse.from_lisp_file.rst", "_autosummary/eta.util.tt.parse.init_node.rst", "_autosummary/eta.util.tt.parse.merge_feats.rst", "_autosummary/eta.util.tt.parse.merge_preds.rst", "_autosummary/eta.util.tt.parse.merge_trees.rst", "_autosummary/eta.util.tt.parse.read_preds_file.rst", "_autosummary/eta.util.tt.parse.readrules.rst", "_autosummary/eta.util.tt.preds.rst", "_autosummary/eta.util.tt.preds.affirm_adv.rst", "_autosummary/eta.util.tt.preds.comma.rst", "_autosummary/eta.util.tt.preds.lex_ulf.rst", "_autosummary/eta.util.tt.preds.modal.rst", "_autosummary/eta.util.tt.preds.non_neg.rst", "_autosummary/eta.util.tt.preds.non_neg_mod.rst", "_autosummary/eta.util.tt.preds.prefix_each.rst", "_autosummary/eta.util.tt.preds.quote_to_list.rst", "_autosummary/eta.util.tt.preds.split_sentences.rst", "_autosummary/eta.util.tt.preds.zero.rst", "_autosummary/eta.util.ulf.rst", "_autosummary/eta.util.ulf.lex.rst", "_autosummary/eta.util.ulf.lex.stem_superlative.rst", "_autosummary/eta.util.ulf.lex.to_ulf.rst", "api.rst", "index.rst"], "titles": ["eta", "eta.config", "eta.config.sophie_offline", "eta.config.sophie_offline.config", "eta.constants", "eta.constants.ANSWER", "eta.constants.ARTICULATE_TO", "eta.constants.ASK", "eta.constants.CERTAINTY_THRESHOLD", "eta.constants.CLOG_FILES", "eta.constants.COREFERENCE_MODE", "eta.constants.DEFAULT_IMPORTANCE", "eta.constants.DEFAULT_IMPORTANCE_THRESHOLD", "eta.constants.DEFAULT_START", "eta.constants.EMBEDDING_DEFAULT_API", "eta.constants.EMBEDDING_DEFAULT_MODEL", "eta.constants.EMOTIONS_LIST", "eta.constants.EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT", "eta.constants.FORGET_FROM_STM", "eta.constants.GPT_DEBUG_FILE", "eta.constants.HERE", "eta.constants.IO_CLOG_DIR", "eta.constants.IO_IN_DIR", "eta.constants.IO_OUT_DIR", "eta.constants.IO_PATH", "eta.constants.KEY_PATH", "eta.constants.LOG_PATH", "eta.constants.ME", "eta.constants.NOOP", "eta.constants.NOOP_GEN", "eta.constants.NOOP_YOU", "eta.constants.NOW", "eta.constants.PARAPHRASE_TO", "eta.constants.REACT_TO", "eta.constants.REASONING_DEPTH_LIMIT", "eta.constants.RECENCY_CUTOFF", "eta.constants.REPLY_TO", "eta.constants.RESPOND_TO", "eta.constants.SAY_BYE", "eta.constants.SAY_TO", "eta.constants.SLEEPTIME", "eta.constants.SPEECH_ACTS", "eta.constants.STORE_IN_STM", "eta.constants.SYMTAB_PATH", "eta.constants.TELIC_VERBS", "eta.constants.YOU", "eta.core", "eta.core.eta", "eta.core.eta.DialogueState", "eta.core.eta.ProcessManager", "eta.core.eta.eta", "eta.core.eta.main", "eta.core.execution", "eta.core.execution.execute_forget_from_STM", "eta.core.execution.execute_say_bye", "eta.core.execution.execute_say_to", "eta.core.execution.execute_store_in_STM", "eta.core.execution.execution_loop", "eta.core.execution.fail_curr_step", "eta.core.execution.forget_from_stm_step", "eta.core.execution.get_action", "eta.core.execution.inquire_truth_of_curr_step", "eta.core.execution.me_pred", "eta.core.execution.process_condition_step", "eta.core.execution.process_expected_step", "eta.core.execution.process_intended_step", "eta.core.execution.process_repetition_step", "eta.core.execution.say_bye_step", "eta.core.execution.say_to_step", "eta.core.execution.store_in_stm_step", "eta.core.execution.you_pred", "eta.core.perception", "eta.core.perception.observe", "eta.core.perception.perception_loop", "eta.core.perception.process_observations", "eta.core.perception.process_utterances", "eta.core.planning", "eta.core.planning.add_possible_actions_to_plan", "eta.core.planning.answer_step", "eta.core.planning.ask_step", "eta.core.planning.equivalent_speech_acts", "eta.core.planning.expand_condition_step", "eta.core.planning.expand_plan_steps", "eta.core.planning.expand_primitive_step", "eta.core.planning.expand_repetition_step", "eta.core.planning.merge_plan_steps", "eta.core.planning.paraphrase_step", "eta.core.planning.plan_answer", "eta.core.planning.plan_ask", "eta.core.planning.plan_paraphrase", "eta.core.planning.plan_react", "eta.core.planning.plan_respond", "eta.core.planning.planning_loop", "eta.core.planning.react_step", "eta.core.planning.relative_speech_act_step", "eta.core.planning.reorder_plan_steps", "eta.core.planning.reply_step", "eta.core.planning.respond_step", "eta.core.planning.say_to_step_from_utt", "eta.core.planning.say_to_step_from_utts", "eta.core.planning.schema_step", "eta.core.planning.split_schema_step", "eta.core.reasoning", "eta.core.reasoning.infer_bottom_up", "eta.core.reasoning.infer_top_down", "eta.core.reasoning.reasoning_loop", "eta.core.reasoning.suggest_possible_actions", "eta.discourse", "eta.discourse.DialogueTurn", "eta.discourse.Utterance", "eta.discourse.compress", "eta.discourse.decompress", "eta.discourse.get_prior_turn", "eta.discourse.get_prior_words", "eta.discourse.parse_utt_str", "eta.discourse.presubst", "eta.discourse.swap_duals", "eta.embedding", "eta.embedding.DummyEmbedder", "eta.embedding.Embedder", "eta.embedding.HFEmbedder", "eta.embedding.STEmbedder", "eta.embedding.sim", "eta.lf", "eta.lf.Condition", "eta.lf.Domain", "eta.lf.ELF", "eta.lf.Eventuality", "eta.lf.Individual", "eta.lf.KEYWORDS", "eta.lf.KEYWORDS_R", "eta.lf.LF", "eta.lf.Repetition", "eta.lf.ULF", "eta.lf.Var", "eta.lf.and_prop_p", "eta.lf.characterizes_prop_p", "eta.lf.equal_prop_p", "eta.lf.expectation_p", "eta.lf.extract_set", "eta.lf.from_lisp_dirs", "eta.lf.from_lisp_file", "eta.lf.is_set", "eta.lf.make_set", "eta.lf.not_prop_p", "eta.lf.or_prop_p", "eta.lf.parse_condition", "eta.lf.parse_eventuality", "eta.lf.parse_eventuality_list", "eta.lf.parse_repetition", "eta.lf.remove_type", "eta.lf.set_union", "eta.memory", "eta.memory.Memory", "eta.memory.MemoryStorage", "eta.plan", "eta.plan.PlanNode", "eta.plan.PlanStep", "eta.plan.expand_plan_node", "eta.plan.get_first_plan_node", "eta.plan.get_last_plan_node", "eta.plan.init_plan_from_eventualities", "eta.plan.insert_before_plan_node", "eta.plan.merge_plan_nodes", "eta.plan.visualize_plan", "eta.schema", "eta.schema.DialSchema", "eta.schema.EpiSchema", "eta.schema.ObjSchema", "eta.schema.Schema", "eta.schema.SchemaLibrary", "eta.transducers", "eta.transducers.base", "eta.transducers.base.AffectTransducer", "eta.transducers.base.AnswerTransducer", "eta.transducers.base.AskTransducer", "eta.transducers.base.GistTransducer", "eta.transducers.base.ParaphraseTransducer", "eta.transducers.base.PragmaticTransducer", "eta.transducers.base.ReactionTransducer", "eta.transducers.base.ReasonBottomUpTransducer", "eta.transducers.base.ReasonTopDownTransducer", "eta.transducers.base.ResponseTransducer", "eta.transducers.base.SemanticTransducer", "eta.transducers.base.SubplanTransducer", "eta.transducers.base.Transducer", "eta.transducers.tt", "eta.transducers.tt.TTAffectTransducer", "eta.transducers.tt.TTAnswerTransducer", "eta.transducers.tt.TTAskTransducer", "eta.transducers.tt.TTGistTransducer", "eta.transducers.tt.TTParaphraseTransducer", "eta.transducers.tt.TTPragmaticTransducer", "eta.transducers.tt.TTReactionTransducer", "eta.transducers.tt.TTReasonBottomUpTransducer", "eta.transducers.tt.TTReasonTopDownTransducer", "eta.transducers.tt.TTResponseTransducer", "eta.transducers.tt.TTSemanticTransducer", "eta.transducers.tt.TTSubplanTransducer", "eta.transducers.tt.TTTransducer", "eta.util", "eta.util.buffer", "eta.util.buffer.clear", "eta.util.buffer.enqueue", "eta.util.buffer.enqueue_ordered", "eta.util.buffer.get_item", "eta.util.buffer.is_empty", "eta.util.buffer.iterate", "eta.util.buffer.max_importance", "eta.util.buffer.pop_all", "eta.util.buffer.pop_item", "eta.util.file", "eta.util.file.append_file", "eta.util.file.clear", "eta.util.file.ensure_dir_exists", "eta.util.file.ensure_file_exists", "eta.util.file.exists", "eta.util.file.get_path", "eta.util.file.load_json", "eta.util.file.read_file", "eta.util.file.read_lines", "eta.util.file.remove", "eta.util.file.write_file", "eta.util.file.write_json", "eta.util.general", "eta.util.general.append", "eta.util.general.argmax", "eta.util.general.atom", "eta.util.general.certainty_to_period", "eta.util.general.clear_symtab", "eta.util.general.cons", "eta.util.general.cons_dict", "eta.util.general.dict_get", "eta.util.general.dict_rem", "eta.util.general.dict_rem_val", "eta.util.general.dict_substall_keys", "eta.util.general.dual_var", "eta.util.general.duplicate_var", "eta.util.general.episode_name", "eta.util.general.episode_var", "eta.util.general.escaped_symbol_p", "eta.util.general.extract_category", "eta.util.general.flatten", "eta.util.general.gentemp", "eta.util.general.get_keyword_contents", "eta.util.general.has_elapsed_certainty_period", "eta.util.general.indent", "eta.util.general.isquote", "eta.util.general.linsum", "eta.util.general.listp", "eta.util.general.normalize", "eta.util.general.push", "eta.util.general.random_element", "eta.util.general.rec_find", "eta.util.general.rec_find_if", "eta.util.general.rec_remove", "eta.util.general.rec_replace", "eta.util.general.remove_duplicates", "eta.util.general.remove_nil", "eta.util.general.replaceall", "eta.util.general.split_by_cond", "eta.util.general.squash", "eta.util.general.standardize", "eta.util.general.subst", "eta.util.general.substall", "eta.util.general.symbolp", "eta.util.general.to_key", "eta.util.general.variablep", "eta.util.sexpr", "eta.util.sexpr.balanced_substr", "eta.util.sexpr.clean_lisp", "eta.util.sexpr.clean_s_expr", "eta.util.sexpr.compress_quotes", "eta.util.sexpr.convert_quotes", "eta.util.sexpr.list_to_s_expr", "eta.util.sexpr.list_to_str", "eta.util.sexpr.parse_s_expr", "eta.util.sexpr.read_lisp", "eta.util.sexpr.standardize_symbols", "eta.util.sexpr.write_lisp", "eta.util.time", "eta.util.time.TimePoint", "eta.util.time.get_elapsed", "eta.util.time.now", "eta.util.time.record_from_time_pair", "eta.util.time.time_pair_from_record", "eta.util.time.time_pair_from_tuple", "eta.util.time.time_pair_p", "eta.util.time.time_record_p", "eta.util.time.time_tuple_p", "eta.util.time.tuple_from_time_pair", "eta.util.tt", "eta.util.tt.choice", "eta.util.tt.choice.choose_result_for", "eta.util.tt.choice.is_tree_root", "eta.util.tt.choice.is_tree_root_clause", "eta.util.tt.choice.is_tree_root_list", "eta.util.tt.parse", "eta.util.tt.parse.attachfeat", "eta.util.tt.parse.from_lisp_dirs", "eta.util.tt.parse.from_lisp_file", "eta.util.tt.parse.init_node", "eta.util.tt.parse.merge_feats", "eta.util.tt.parse.merge_preds", "eta.util.tt.parse.merge_trees", "eta.util.tt.parse.read_preds_file", "eta.util.tt.parse.readrules", "eta.util.tt.preds", "eta.util.tt.preds.affirm_adv", "eta.util.tt.preds.comma", "eta.util.tt.preds.lex_ulf", "eta.util.tt.preds.modal", "eta.util.tt.preds.non_neg", "eta.util.tt.preds.non_neg_mod", "eta.util.tt.preds.prefix_each", "eta.util.tt.preds.quote_to_list", "eta.util.tt.preds.split_sentences", "eta.util.tt.preds.zero", "eta.util.ulf", "eta.util.ulf.lex", "eta.util.ulf.lex.stem_superlative", "eta.util.ulf.lex.to_ulf", "&lt;no title&gt;", "Eta Dialogue Manager Documentation"], "terms": {"The": [0, 4, 9, 10, 11, 12, 13, 17, 21, 22, 23, 24, 26, 35, 40, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 71, 72, 73, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 102, 107, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 123, 126, 127, 128, 131, 132, 133, 134, 141, 147, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 224, 228, 241, 245, 260, 268, 277, 279, 280, 281, 292, 293, 297, 299, 300, 305, 306, 319, 320, 321, 323], "top": [0, 76, 77, 92, 102, 104, 105, 123, 127, 152, 154, 201, 205, 210, 224, 226, 297, 306, 319, 321], "level": [0, 4, 10, 76, 92, 123, 124, 127, 132, 152, 154, 224, 246, 297, 306, 323], "packag": [0, 186, 291], "dialogu": [0, 46, 47, 48, 50, 52, 54, 55, 57, 61, 64, 65, 71, 73, 75, 76, 92, 100, 102, 105, 107, 108, 112, 113, 123, 127, 155, 157, 165, 166, 170], "manag": [0, 46, 47, 49], "configur": 1, "support": [1, 4, 9, 10, 16, 41, 47, 48, 76, 82, 83, 107, 109, 172, 179, 280, 281, 292, 293], "agent": [1, 2, 4, 13, 47, 48, 50, 51, 107, 108, 109, 112, 113, 172, 179, 323], "offlin": 2, "version": [2, 152, 154, 155, 157, 224, 232, 233, 234, 319, 321], "sophi": 2, "test": [2, 224, 253], "purpos": [2, 165, 168, 323], "i": [2, 4, 6, 10, 13, 14, 15, 16, 17, 32, 44, 47, 48, 52, 53, 55, 56, 57, 61, 64, 66, 71, 73, 76, 77, 82, 83, 85, 92, 95, 102, 105, 107, 113, 115, 116, 123, 124, 127, 132, 134, 135, 136, 137, 138, 142, 144, 145, 147, 148, 152, 153, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 209, 210, 211, 217, 224, 227, 228, 232, 240, 241, 243, 247, 249, 257, 259, 262, 265, 267, 268, 273, 276, 280, 281, 292, 293, 297, 298, 306, 319, 320, 321, 323], "e": [2, 4, 6, 10, 32, 44, 47, 48, 52, 53, 56, 64, 76, 83, 85, 102, 106, 107, 111, 114, 123, 124, 127, 129, 130, 134, 138, 147, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 171, 172, 174, 175, 177, 182, 184, 186, 224, 236, 241, 262, 265, 267, 268, 273, 274, 275, 276, 292, 293, 297, 298, 319, 321, 323], "simpli": [2, 4, 10, 76, 117, 118, 292, 293], "output": [2, 4, 23, 24, 47, 48, 52, 54, 55, 64, 107, 115, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 292, 293, 297, 306], "text": [2, 4, 9, 117, 118, 119, 120, 121], "instead": [2, 76, 85, 123, 147, 155, 157], "us": [2, 4, 8, 10, 14, 15, 17, 20, 21, 22, 23, 27, 29, 30, 31, 40, 43, 45, 47, 48, 52, 55, 58, 64, 76, 77, 82, 85, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 113, 117, 118, 119, 120, 121, 123, 147, 148, 152, 154, 155, 157, 158, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 224, 229, 241, 243, 253, 280, 281, 292, 293, 297, 306, 307, 319, 321, 323], "gpt": [2, 4, 19, 47, 171], "function": [2, 4, 17, 47, 48, 52, 71, 76, 85, 102, 107, 115, 117, 123, 131, 152, 154, 155, 164, 165, 166, 172, 201, 207, 211, 224, 241, 253, 260, 268, 280, 283, 292, 293, 297, 299, 305, 307, 319, 323], "sourc": [3, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321], "global": [4, 224, 228], "other": [4, 14, 15, 47, 48, 76, 82, 123, 124, 127, 132, 134, 152, 153, 154, 155, 157, 165, 166, 167, 168, 169, 292, 293, 297, 306], "modul": [4, 35, 47, 123, 172, 211, 217], "thi": [4, 8, 17, 35, 44, 47, 48, 49, 52, 53, 54, 55, 56, 57, 61, 64, 71, 73, 76, 77, 82, 84, 85, 92, 95, 99, 107, 108, 115, 123, 124, 126, 127, 128, 131, 132, 133, 134, 147, 148, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 211, 217, 224, 243, 267, 268, 280, 281, 291, 292, 293, 307, 319, 320, 321, 323], "contain": [4, 47, 48, 52, 57, 76, 81, 84, 107, 108, 109, 117, 119, 123, 131, 146, 147, 149, 152, 154, 155, 156, 157, 165, 166, 167, 168, 169, 172, 186, 199, 268, 275, 276, 280, 285, 286, 292, 293, 297, 299, 300, 305], "definit": [4, 297, 300, 305, 307], "varieti": 4, "ar": [4, 28, 44, 47, 48, 52, 55, 57, 63, 65, 71, 73, 76, 85, 92, 102, 105, 107, 115, 123, 129, 152, 154, 155, 157, 163, 165, 166, 167, 168, 169, 170, 172, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 224, 253, 259, 268, 280, 281, 292, 293, 297, 298, 307, 319, 321, 323], "gener": [4, 47, 48, 76, 85, 87, 88, 89, 90, 91, 98, 99, 102, 103, 107, 113, 123, 134, 147, 152, 154, 155, 157, 164, 165, 166, 167, 168, 169, 170, 172, 179, 201, 204, 319, 321, 323], "can": [4, 76, 77, 102, 105, 155, 157, 172, 179, 186, 224, 253, 292, 293, 323], "import": [4, 11, 12, 47, 48, 152, 153, 154, 201, 203, 204, 205, 208, 209, 210], "from": [4, 10, 12, 18, 24, 34, 47, 48, 52, 55, 57, 71, 72, 73, 74, 75, 76, 81, 84, 92, 98, 99, 102, 103, 105, 107, 108, 117, 118, 119, 120, 121, 123, 127, 131, 139, 141, 143, 150, 151, 152, 153, 154, 155, 156, 157, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 201, 205, 208, 209, 210, 211, 218, 224, 233, 234, 244, 252, 255, 258, 260, 268, 270, 277, 292, 293, 297, 299, 306, 307, 315, 323], "attribut": [4, 6, 32, 47, 49, 123, 124, 132], "sleeptim": 4, "0": [4, 8, 10, 11, 12, 17, 40, 47, 48, 123, 124, 127, 132, 152, 153, 154, 201, 204, 224, 228, 245, 261, 292, 293, 297, 306], "1": [4, 10, 17, 40, 47, 48, 123, 124, 127, 132, 152, 154, 165, 170, 224, 228, 245, 250, 261, 297, 306], "time": [4, 31, 40, 47, 48, 52, 57, 76, 152, 153, 154, 224, 245], "sleep": [4, 40], "between": [4, 40, 47, 117, 122, 152, 154, 155, 156, 157, 163, 165, 166, 167, 224, 228, 245, 268, 272, 280, 282, 323], "each": [4, 40, 43, 46, 47, 48, 50, 71, 72, 75, 102, 105, 117, 118, 119, 120, 121, 123, 148, 152, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 207, 224, 225, 226, 235, 244, 248, 261, 264, 268, 275, 280, 281, 292, 293, 297, 298, 307, 314, 316, 323], "iter": [4, 40, 155, 201], "": [4, 10, 28, 29, 30, 40, 47, 48, 52, 64, 71, 72, 74, 76, 77, 82, 87, 88, 89, 90, 91, 100, 102, 106, 107, 108, 112, 117, 120, 123, 126, 129, 130, 131, 133, 142, 146, 147, 148, 149, 152, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 224, 240, 241, 247, 265, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 292, 293, 307, 315, 319, 321], "core": [4, 40, 186, 199, 292, 307], "process": [4, 34, 40, 46, 47, 48, 49, 50, 52, 63, 64, 65, 66, 71, 74, 75, 76, 102, 107, 155, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 292, 293, 323], "type": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 138, 140, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 211, 216, 218, 219, 220, 224, 228, 230, 243, 245, 251, 259, 268, 274, 275, 276, 277, 280, 281, 292, 293, 297, 305, 306, 319, 320, 321, 323], "float": [4, 8, 11, 12, 40, 47, 48, 117, 118, 119, 120, 121, 123, 124, 127, 132, 152, 153, 154, 165, 169, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 224, 228, 245], "reasoning_depth_limit": 4, "3": [4, 10, 34, 47, 48, 155, 156, 164], "how": [4, 34, 152, 153, 292, 293, 297, 306], "mani": [4, 34, 35, 323], "infer": [4, 14, 34, 47, 48, 71, 73, 102, 103, 104, 105, 107, 108, 117, 120, 172, 180, 181], "step": [4, 9, 17, 34, 47, 48, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 100, 101, 102, 104, 105, 106, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 172, 181, 184, 195, 198], "direct": [4, 34, 102, 105, 155, 164, 186, 199, 292, 293, 297, 306], "observ": [4, 34, 52, 57, 71, 73, 74, 102, 105, 106, 123, 147, 172, 179, 193], "take": [4, 34, 102, 105, 106, 172, 179], "dure": [4, 34, 152, 153, 165, 166, 167, 268, 272], "reason": [4, 34, 47, 323], "int": [4, 10, 13, 17, 34, 35, 47, 48, 152, 154, 155, 156, 164, 165, 166, 167, 168, 169, 170], "embedding_default_api": 4, "http": [4, 14, 117, 120, 224, 243, 268, 291, 292, 293, 307], "api": [4, 14, 25, 117, 120, 323], "huggingfac": [4, 14, 117, 120], "co": [4, 14, 117, 120], "pipelin": [4, 14, 117, 120], "featur": [4, 14, 117, 120, 186, 199, 292, 293, 297, 298, 299, 300, 302], "extract": [4, 14, 117, 120, 123, 139, 224, 241], "default": [4, 11, 12, 13, 14, 15, 16, 47, 48, 107, 109, 112, 113, 117, 121, 123, 124, 127, 147, 152, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 201, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 280, 281, 319, 320], "embed": [4, 14, 15, 47, 48, 123, 124, 127, 132, 152, 154, 165, 169], "url": [4, 14, 117, 120], "specifi": [4, 14, 15, 107, 112, 201, 204, 292, 293, 297, 306], "an": [4, 5, 6, 7, 14, 15, 17, 29, 44, 47, 48, 52, 57, 61, 64, 65, 76, 84, 87, 88, 98, 107, 108, 109, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 179, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 211, 215, 224, 227, 228, 230, 232, 234, 236, 240, 243, 249, 251, 268, 271, 274, 275, 276, 278, 279, 292, 293, 297, 306, 319, 320, 323], "embedd": [4, 14, 15, 47, 48, 117, 118, 120, 121, 123, 124, 127, 132, 152, 154, 165, 166, 167, 168, 169, 170], "str": [4, 5, 6, 7, 9, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 71, 72, 74, 75, 76, 77, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 147, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 243, 259, 262, 268, 270, 274, 275, 276, 277, 279, 280, 281, 292, 293, 297, 298, 299, 300, 305, 306, 319, 320, 321], "embedding_default_model": 4, "sentenc": [4, 15, 117, 120, 121, 307, 316], "transform": [4, 15, 117, 120, 121, 224, 262], "all": [4, 9, 10, 15, 28, 41, 44, 47, 48, 52, 61, 71, 72, 74, 75, 76, 92, 102, 105, 117, 120, 121, 123, 131, 140, 152, 154, 155, 156, 165, 166, 167, 168, 169, 170, 201, 209, 224, 262, 268, 270, 292, 293, 297, 299, 300, 307, 323], "distilroberta": [4, 15, 117, 120, 121], "v1": [4, 15, 117, 120, 121], "model": [4, 15, 117, 120, 121, 172, 323], "key_path": 4, "_kei": [4, 25], "directori": [4, 21, 22, 23, 25, 47, 48, 123, 140, 155, 164, 165, 170, 186, 199, 211, 214, 297, 299], "check": [4, 25, 47, 48, 52, 57, 76, 100, 123, 135, 136, 137, 138, 142, 144, 145, 152, 153, 154, 165, 170, 201, 206, 211, 216, 224, 227, 240, 245, 247, 249, 265, 267, 319, 320], "kei": [4, 25, 47, 48, 152, 154, 224, 231, 232, 233, 234, 235, 244, 266, 292, 293, 297, 299, 300], "symtab_path": 4, "io": [4, 21, 22, 23, 24, 43, 47, 48, 155, 164], "symtab": [4, 43], "json": [4, 43, 47, 211, 218, 223], "path": [4, 21, 22, 23, 24, 26, 43, 47, 48, 211, 217], "creat": [4, 43, 44, 47, 48, 52, 55, 76, 92, 107, 108, 117, 118, 119, 120, 121, 123, 143, 147, 155, 157, 161, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 211, 214, 215, 224, 225, 229, 231, 242, 280, 284, 290, 297, 306, 307, 315, 323], "symbol": [4, 43, 47, 48, 51, 123, 124, 126, 127, 131, 132, 133, 134, 147, 148, 152, 154, 155, 156, 157, 165, 166, 167, 168, 169, 224, 229, 237, 240, 243, 253, 265, 267, 268, 270, 273, 275, 276, 278, 297, 306, 319, 320, 323], "tabl": [4, 43, 47, 51, 152, 154, 224, 229, 243, 307], "dict": [4, 43, 47, 48, 50, 52, 53, 54, 55, 56, 117, 120, 123, 124, 125, 127, 131, 132, 147, 148, 152, 154, 165, 166, 167, 168, 169, 170, 186, 199, 211, 218, 223, 224, 232, 233, 234, 235, 266, 292, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306], "structur": [4, 43, 47, 48, 155, 156, 157, 161, 164, 171, 268, 274, 275, 276, 280, 281, 284, 285, 297, 306], "maintain": [4, 43, 47, 155, 157], "indic": [4, 43, 52, 64, 123, 124, 132, 292, 293], "uniqu": [4, 43, 47, 48, 155, 157, 165, 169, 224, 243], "coreference_mod": 4, "corefer": [4, 10, 35], "valu": [4, 10, 11, 17, 47, 48, 76, 81, 84, 123, 124, 126, 127, 131, 132, 133, 134, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 172, 201, 203, 204, 207, 208, 224, 226, 228, 230, 245, 251, 256, 258, 259], "reconstruct": [4, 10], "origin": [4, 10, 165, 166, 167, 168, 169, 201, 204, 292, 307], "ulf": [4, 6, 8, 10, 123, 124, 127, 129, 131, 132, 135, 136, 137, 139, 144, 145, 146, 149, 150, 165, 172, 178, 183, 186, 280, 281, 284, 285, 292, 293, 307, 310], "same": [4, 10, 152, 154, 224, 253, 292, 293], "2": [4, 10, 35, 224, 243, 297, 306], "exclud": [4, 10, 224, 237, 267], "you": [4, 10, 28, 30, 47, 48, 107, 115, 116, 152, 154, 165, 166, 167, 168, 169, 224, 267, 292, 293], "refer": [4, 10, 35, 155, 157], "resolv": [4, 10], "substitut": [4, 10, 107, 115, 165, 166, 167, 168, 169, 224, 235, 263, 264, 323], "canon": [4, 10, 123, 125, 128], "name": [4, 10, 47, 48, 71, 72, 117, 120, 121, 123, 125, 128, 140, 152, 154, 155, 157, 165, 170, 186, 199, 224, 238, 292, 293, 297, 299, 300, 305, 307, 319, 321], "onli": [4, 10, 35, 47, 52, 57, 63, 64, 66, 76, 77, 82, 102, 105, 152, 153, 154, 155, 157, 165, 170, 224, 266, 292, 293, 319, 320], "anaphora": [4, 10], "index": [4, 10, 20, 27, 31, 45, 152, 153, 154, 224, 267], "np": [4, 10, 123, 129, 130, 224, 228], "g": [4, 10, 47, 48, 76, 85, 102, 106, 107, 111, 114, 123, 124, 134, 152, 154, 155, 157, 165, 166, 167, 168, 169, 171, 172, 224, 236, 268, 274, 275, 276, 292, 293, 319, 321, 323], "block": [4, 10], "recency_cutoff": 4, "look": [4, 35, 155, 157], "turn": [4, 35, 47, 48, 52, 55, 64, 71, 73, 75, 107, 108, 112, 113], "back": [4, 35, 102, 105], "discours": [4, 35], "histori": [4, 35, 47, 48, 172, 173, 174, 175, 176, 177, 182], "find": [4, 35, 107, 112, 113, 268, 269, 319, 320], "possibl": [4, 35, 47, 48, 52, 57, 76, 77, 82, 84, 102, 105, 106, 155, 157, 165, 166, 167, 168, 169, 323], "expected_step_failure_period_coeffici": [4, 224, 228], "30": [4, 17], "coeffici": [4, 17, 152, 154, 224, 248], "map": [4, 17, 47, 48, 52, 65, 76, 82, 85, 123, 125, 127, 131, 147, 148, 152, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 224, 228, 268, 278, 292, 293, 297, 298, 299, 300, 305, 323], "certainti": [4, 8, 17, 52, 57, 155, 157, 165, 166, 167, 168, 169, 224, 228, 245], "score": [4, 8, 17, 102, 106, 117, 118, 119, 120, 121, 152, 153, 154, 224, 226], "period": [4, 17, 52, 57, 64, 224, 228, 245], "expect": [4, 17, 29, 30, 47, 48, 52, 57, 58, 61, 64, 65, 102, 104, 123, 138, 147, 155, 157, 165, 166, 167, 172, 224, 228, 323], "failur": [4, 17, 47, 48, 52, 57, 58, 292, 293], "episod": [4, 17, 47, 48, 76, 84, 107, 108, 123, 124, 127, 132, 147, 148, 152, 153, 154, 155, 157, 161, 165, 166, 167, 168, 169, 170, 224, 236, 238, 239], "determin": [4, 17, 152, 154, 224, 228, 292, 293], "timer": [4, 17, 47, 48], "second": [4, 17, 76, 92, 102, 105, 107, 116, 123, 124, 126, 127, 131, 132, 133, 224, 228, 280, 281, 286, 290, 307], "must": [4, 8, 17, 52, 57, 107, 109, 123, 131, 307], "pass": [4, 17, 117, 118, 119, 120, 121, 186, 199], "consid": [4, 17, 28, 44, 102, 105, 106], "fail": [4, 17, 29, 30, 47, 48, 52, 58, 64, 65, 102, 106], "move": [4, 17, 44, 155, 164], "plan": [4, 17, 47, 48, 52, 57, 58, 63, 64, 65, 66, 102, 104, 105, 106, 165, 166, 167, 168, 169, 172, 181, 184, 323], "have": [4, 8, 13, 17, 47, 48, 76, 82, 102, 106, 117, 118, 119, 120, 121, 155, 157, 164, 319, 320], "infinit": [4, 17], "A": [4, 8, 16, 17, 19, 28, 29, 30, 41, 44, 47, 48, 50, 71, 72, 74, 75, 76, 77, 82, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 131, 132, 147, 148, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 207, 224, 228, 230, 241, 243, 245, 251, 253, 259, 260, 268, 274, 275, 276, 277, 280, 281, 292, 293, 297, 298, 299, 300, 305, 306], "make": [4, 17, 76, 85, 92, 102, 105, 123, 131, 165, 166, 167, 168, 169, 172, 180, 181, 224, 235, 259, 264], "632": [4, 17], "correspond": [4, 17, 47, 48, 52, 55, 76, 100, 107, 108, 152, 153, 155, 157, 165, 166, 167, 168, 169, 172, 181, 184, 224, 245, 248, 280, 283, 292, 293, 307], "certainty_threshold": 4, "7": [4, 8], "greater": [4, 8, 102, 105], "than": [4, 8, 102, 105, 106, 107, 115, 123, 147, 155, 157, 165, 166, 167, 168, 169, 172, 179, 292, 293, 307], "equal": [4, 8, 123, 137], "respons": [4, 8, 37, 47, 48, 52, 55, 71, 76, 91, 102, 172, 177, 182], "emotions_list": 4, "neutral": [4, 16, 107, 109], "sad": [4, 16, 107, 114], "happi": [4, 16, 107, 114], "worri": [4, 16], "angri": [4, 16], "list": [4, 9, 16, 28, 41, 44, 47, 48, 52, 57, 71, 72, 74, 75, 76, 77, 84, 99, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 139, 140, 141, 143, 148, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 224, 225, 226, 227, 230, 231, 232, 234, 241, 242, 244, 248, 249, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 266, 268, 273, 274, 275, 276, 277, 279, 280, 281, 292, 293, 297, 298, 299, 300, 306, 307, 314, 315, 316], "emot": [4, 16, 107, 109, 114], "where": [4, 16, 52, 57, 71, 73, 123, 124, 127, 132, 148, 152, 153, 154, 155, 156, 157, 163, 172, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 280, 281, 292, 293, 297, 298, 306], "first": [4, 16, 76, 77, 84, 92, 99, 102, 105, 107, 115, 116, 123, 124, 126, 127, 131, 132, 133, 147, 155, 158, 159, 161, 162, 163, 292, 293, 307], "element": [4, 16, 47, 48, 76, 123, 147, 224, 226, 252, 260, 292, 293], "assum": [4, 16, 44, 47, 48, 52, 64, 76, 77, 123, 127, 152, 154, 155, 161, 165, 166, 167, 168, 169], "io_path": [4, 47, 48], "input": [4, 22, 24, 47, 48, 71, 73, 74, 75, 117, 118, 119, 120, 121, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 227, 241, 247, 249, 260, 267, 292, 293, 323], "written": [4, 24, 26], "read": [4, 24, 47, 48, 51, 123, 140, 141, 152, 153, 165, 166, 167, 168, 169, 170, 186, 199, 211, 219, 220, 268, 277, 297, 299, 300, 305], "io_in_dir": 4, "within": [4, 21, 22, 23, 47, 48, 76, 84, 107, 109, 152, 154, 155, 156, 159, 160, 165, 166, 167, 168, 169, 211, 217, 224, 225, 228, 241, 261, 268, 278, 297, 300, 323], "io_out_dir": 4, "out": [4, 23, 186, 224, 260, 292, 293, 297, 306], "io_clog_dir": 4, "convers": [4, 9, 21, 26, 47, 48, 52, 54, 55, 71, 73, 107, 112, 113, 172, 173, 174, 175, 176, 177, 182, 323], "log": [4, 9, 21, 26, 47, 48, 52, 55, 71, 73, 75, 224, 228], "write": [4, 19, 21, 47, 48, 52, 54, 64, 211, 222, 223, 268, 279], "session": [4, 21, 47, 48, 50], "clog_fil": 4, "affect": [4, 9, 52, 55, 107, 109, 114, 172, 173], "gist": [4, 9, 32, 47, 48, 52, 55, 71, 73, 75, 107, 108, 172, 176, 177, 178, 183, 186, 191, 192, 197, 292, 293, 297, 306], "semant": [4, 9, 47, 48, 52, 55, 71, 73, 75, 107, 108, 123, 127, 152, 172, 183, 292, 293, 323], "pragmat": [4, 9, 71, 73, 75, 107, 108, 172, 178], "oblig": [4, 9, 52, 55, 102, 106, 107, 108, 155, 157, 161, 165, 166], "file": [4, 9, 47, 48, 123, 140, 141, 165, 170, 224, 243, 268, 270, 277, 279, 297, 299, 300, 305, 307], "log_path": 4, "archiv": [4, 26], "gpt_debug_fil": 4, "debug": [4, 19], "prompt": [4, 19], "txt": [4, 19], "filepath": [4, 19], "info": [4, 19], "default_start": 4, "dialog": [4, 13], "v": [4, 5, 6, 7, 13, 18, 28, 29, 30, 32, 33, 36, 37, 38, 39, 41, 42, 44, 152, 154, 155, 157, 165, 166, 167, 169, 224, 231, 292, 293, 319, 321], "start": [4, 13, 47, 48, 49, 51, 152, 153, 155, 156, 163, 165, 166, 167, 168, 169, 224, 267, 292, 293], "schema": [4, 13, 47, 48, 76, 81, 82, 84, 100, 101, 123, 124, 132, 155, 156, 157, 161, 164, 186, 268, 292, 293, 323], "none": [4, 13, 47, 48, 49, 52, 57, 63, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 107, 108, 112, 113, 123, 124, 127, 132, 134, 147, 152, 153, 154, 155, 157, 161, 165, 170, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 207, 224, 231, 241, 280, 281], "provid": [4, 13, 44, 47, 123, 127, 152, 154, 155, 161, 165, 166, 167, 168, 169, 170, 186, 224, 253, 292, 293], "config": [4, 13, 47, 48, 50, 51], "default_import": 4, "25": [4, 11, 47, 48, 152, 153, 154], "new": [4, 11, 47, 48, 50, 76, 85, 92, 102, 103, 104, 105, 117, 118, 119, 120, 121, 123, 147, 152, 153, 154, 155, 162, 163, 172, 180, 181, 211, 223, 224, 229, 231, 237, 238, 239, 256, 259, 323], "fact": [4, 11, 12, 18, 42, 47, 48, 52, 53, 56, 57, 61, 64, 71, 74, 102, 103, 104, 105, 123, 127, 152, 154, 165, 166, 167, 168, 169, 170, 172, 180, 181, 194, 195, 224, 243, 323], "store": [4, 11, 42, 52, 53, 56, 107, 152, 153, 154, 155, 164, 165, 170, 201, 224, 234, 243, 297, 298], "memori": [4, 11, 12, 18, 42, 47, 48, 52, 53, 56, 71, 76, 84, 102, 103, 105, 323], "default_importance_threshold": 4, "5": [4, 12, 152, 154, 155, 156, 164, 165, 166, 167, 168, 169, 170], "threshold": [4, 12, 152, 154], "place": [4, 12, 102, 106, 123, 141, 152, 154, 155, 157, 158, 297, 298], "when": [4, 12, 47, 48, 76, 81, 84, 107, 115, 152, 154, 319, 320], "retriev": [4, 12, 47, 48, 52, 55, 76, 85, 102, 103, 105, 107, 112, 113, 152, 154, 165, 166, 167, 168, 169, 170], "me": [4, 47, 48, 107, 115, 116, 165, 166, 167, 168, 169, 292, 293], "variabl": [4, 20, 27, 31, 45, 47, 48, 52, 53, 54, 55, 56, 57, 61, 65, 76, 84, 123, 124, 126, 127, 131, 132, 133, 134, 147, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 224, 236, 237, 239, 265, 267, 280, 281, 285, 286, 307], "user": [4, 30, 45, 47, 48, 50, 51, 52, 64, 71, 72], "now": [4, 76, 77, 152, 153, 154, 224, 267, 280], "current": [4, 20, 31, 47, 48, 52, 57, 58, 64, 76, 77, 82, 85, 92, 99, 102, 104, 105, 123, 125, 128, 134, 152, 153, 154, 155, 156, 157, 224, 243, 280, 281, 292, 293], "here": [4, 155, 161, 186, 292, 293, 307], "locat": [4, 20], "say_to": 4, "sai": [4, 38, 39, 41, 44, 52, 53, 54, 55, 56, 76, 98, 99, 107, 115, 155, 157, 292, 293], "predic": [4, 5, 6, 7, 18, 32, 33, 36, 37, 38, 39, 42, 44, 47, 48, 52, 58, 64, 76, 101, 123, 135, 136, 137, 144, 145, 152, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 292, 293, 297, 299, 303, 305, 307, 310, 315, 316], "event": [4, 5, 6, 7, 28, 29, 30, 32, 33, 36, 37, 38, 39, 44, 47, 48, 52, 58, 61, 63, 64, 65, 66, 76, 81, 83, 84, 102, 106, 123, 124, 127, 132, 152, 153, 154, 155, 157, 165, 166, 167, 168, 169, 172, 179, 181, 184, 224, 228, 323], "paraphrase_to": 4, "paraphras": [4, 32, 41, 44, 76, 89, 155, 157, 172, 177, 292, 293], "claus": [4, 32, 52, 55, 71, 73, 75, 107, 108, 172, 176, 177, 178, 183, 292, 293], "articulate_to": 4, "articul": [4, 6, 41, 44], "respond_to": 4, "respond": [4, 37, 41, 44, 76, 91, 102, 106], "reply_to": 4, "repli": [4, 36, 41, 44, 71, 73, 76, 85, 152, 154], "answer": [4, 41, 44, 76, 87, 102, 106, 172, 174], "ask": [4, 41, 44, 76, 88], "react_to": 4, "react": [4, 33, 41, 44, 76, 90, 172, 179], "say_by": 4, "bye": [4, 38, 41, 44, 52, 54], "goodby": [4, 38], "store_in_stm": 4, "stm": [4, 18, 42, 52, 53, 56], "short": [4, 18, 42, 52, 53, 56, 123, 155], "term": [4, 18, 42, 52, 53, 56, 201], "forget_from_stm": 4, "forget": [4, 18, 152, 154], "speech_act": 4, "speech": [4, 41, 71, 72, 73, 74, 75], "act": [4, 41], "telic_verb": 4, "telic": [4, 44, 52, 64, 152, 153, 154, 165, 168], "denot": [4, 29, 30, 44, 123, 125, 127, 165], "nearli": [4, 44], "instantan": [4, 44, 47, 48, 52, 64, 152, 153, 154, 280, 281], "todo": [4, 44, 47, 48, 76, 77, 82, 84, 85, 95, 102, 103, 106, 123, 125, 128, 134, 152, 154, 155, 157, 161, 163, 164, 165, 166, 172, 179], "ultim": [4, 44, 76, 77, 307], "we": [4, 44, 47, 48, 52, 64, 76, 77, 102, 106, 107, 115, 123, 127, 152, 154, 155, 157, 161, 165, 166, 167, 168, 169, 292, 293], "need": [4, 44, 76, 84, 95, 102, 103, 123, 127, 152, 154, 155, 157, 163, 165, 166, 167, 168, 169], "more": [4, 44, 152, 154, 155, 157, 165, 166, 167, 168, 169], "system": [4, 44, 47, 48, 76, 77, 102, 105, 106, 155, 156, 292, 293, 307], "classif": [4, 44], "extern": [4, 29, 44, 211, 224, 243, 292, 293], "resourc": [4, 44], "noop_you": 4, "do": [4, 28, 30, 52, 57, 107, 111, 115, 123, 124, 127, 132, 165, 166, 167, 168, 169, 172], "d": [4, 28, 29, 30, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 71, 73, 75, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 123, 129, 130, 268, 274, 275, 276], "thing": [4, 28, 29, 30, 52, 57], "n": [4, 28, 29, 30, 107, 110, 123, 129, 130, 152, 154, 165, 166, 167, 168, 169, 170, 224, 226, 246], "formula": [4, 28, 29, 30, 123, 124, 126, 127, 131, 132, 133, 147, 148, 165, 166, 167, 168, 169, 172, 178, 179, 183, 292, 293, 318], "expr": [4, 28, 29, 30, 76, 87, 88, 89, 90, 91, 107, 108, 123, 126, 131, 133, 147, 148, 152, 154, 165, 166, 167, 168, 169, 170, 172, 178, 179, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 241, 268, 274, 275, 276, 277, 279, 292, 293, 319, 321], "noop_gen": 4, "happen": [4, 28, 29], "noop": 4, "op": [4, 28, 52, 58], "main": [46, 47, 165, 169], "execut": [46, 47, 76, 84, 155, 323], "run": 47, "user_config": 47, "respect": [47, 123, 147, 152, 154, 165, 166, 167, 168, 169], "befor": [47, 48, 52, 64, 155, 156, 158, 162, 164, 224, 243], "spawn": [47, 49, 50], "multiprocess": [47, 49, 224, 243], "loop": [47, 52, 57], "handl": [47, 49, 76, 268, 292, 293], "interpret": [47, 52, 55, 71, 73, 107, 108, 123, 147, 152, 153, 155, 172, 176, 224, 259], "note": [47, 48, 52, 57, 76, 77, 82, 84, 85, 95, 99, 102, 103, 106, 123, 125, 128, 134, 152, 153, 154, 155, 157, 161, 163, 164, 165, 166, 167, 168, 169, 172, 179, 201, 224, 243, 267], "python": [47, 224, 243, 268, 291, 297, 305, 307, 323], "export": 47, "return": [47, 48, 49, 52, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 102, 103, 104, 106, 107, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 140, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 211, 216, 218, 219, 220, 224, 228, 230, 232, 236, 241, 243, 245, 251, 253, 254, 259, 260, 268, 274, 275, 276, 277, 280, 281, 283, 285, 286, 292, 293, 297, 299, 300, 305, 306, 319, 320, 321], "paramet": [47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 131, 133, 134, 140, 141, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 228, 230, 241, 243, 245, 251, 259, 260, 268, 274, 275, 276, 277, 279, 280, 281, 297, 298, 299, 300, 305, 306, 319, 320, 321], "sinc": [47, 52, 64, 76, 84, 123, 127, 152, 154, 172, 179, 201, 292, 293], "transduc": [47, 48, 52, 55, 76, 77, 85, 87, 88, 89, 90, 91, 102, 106, 323], "object": [47, 48, 49, 107, 108, 109, 117, 119, 123, 124, 125, 127, 128, 131, 132, 134, 147, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 172, 185, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 224, 230, 251, 280, 281, 284, 290], "mai": [47, 48, 52, 57, 64, 76, 77, 82, 84, 102, 106, 123, 127, 134, 152, 154, 155, 157, 163, 164, 165, 166, 172, 174, 175, 177, 179, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 280, 281, 292, 293], "On": [47, 123, 127, 165, 166, 167, 168, 169], "hand": [47, 123, 127, 165, 166, 167, 168, 169], "suppli": [47, 48, 152, 153], "format": [47, 71, 72, 74, 76, 77, 102, 106, 123, 124, 126, 127, 131, 132, 133, 148, 155, 156, 157, 165, 166, 167, 168, 169, 268, 274, 279, 280, 281, 292, 293], "state": [47, 48, 50, 52, 54, 57, 61, 65, 76, 92, 102, 105, 323], "entir": [47, 155, 156, 157], "through": [47, 155, 157, 224, 241, 307, 323], "dialoguest": [47, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 71, 73, 75, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 102, 103, 104, 105, 106], "class": [47, 48, 49, 52, 57, 107, 108, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 280, 281], "which": [47, 48, 52, 57, 76, 82, 102, 105, 107, 108, 109, 123, 127, 152, 153, 154, 155, 157, 158, 165, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 243, 268, 292, 293, 323], "share": [47, 224, 243, 323], "processmanag": 47, "mutex": 47, "lock": 47, "prevent": 47, "data": [47, 48, 186, 199, 211, 212, 218, 222, 223, 224, 307, 323], "race": [47, 224, 243], "underli": [47, 71, 73, 201], "addition": [47, 52, 57, 155], "set": [47, 48, 52, 54, 76, 77, 102, 105, 117, 118, 119, 120, 121, 123, 124, 127, 129, 130, 132, 139, 142, 143, 147, 148, 151, 152, 154, 165, 170, 172, 186, 199, 224, 230, 235, 251, 264, 323], "buffer": [47, 48, 52, 54, 55, 57, 64, 71, 73, 76, 92, 102, 105, 323], "prioriti": [47, 48, 102, 106, 201, 323], "queue": [47, 48, 201, 323], "being": [47, 48, 71, 72, 152, 153, 154, 292, 293], "over": [47, 155, 161], "necessari": 47, "synchron": 47, "relev": [47, 48, 102, 103, 105, 152, 154, 155, 157, 165, 166, 167, 168, 172, 174, 175, 177, 182], "aspect": 47, "complet": [47, 48], "seri": [47, 224, 262], "modif": [47, 76, 84, 92], "attempt": [47, 48, 52, 57, 61, 65, 76, 77, 82, 92, 102, 105, 292, 293], "ensur": [47, 165, 166, 167, 168, 169, 211, 214, 215, 323], "incur": [47, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "some": [47, 48, 76, 77, 82, 84, 102, 105, 106, 123, 128, 134, 152, 153, 154, 165, 166, 167, 168, 169, 170, 172, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 207, 224, 246, 256, 268, 292, 293, 307, 323], "monetari": [47, 48], "cost": [47, 48, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "appli": [47, 48, 52, 57, 65, 107, 115, 123, 124, 126, 127, 131, 132, 133, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 201, 207, 224, 262], "case": [47, 48, 52, 57, 71, 72, 73, 152, 154, 155, 157, 163, 165, 166, 167, 168, 169, 292, 293, 319, 320], "base": [47, 48, 49, 52, 57, 107, 108, 109, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 280, 281, 307], "transduct": [47, 76, 82, 171, 172, 186, 291, 292, 293], "after": [47, 52, 64, 123, 131, 155, 156, 158, 164, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "config_ag": [47, 48, 50], "config_us": [47, 48, 50], "represent": [47, 48, 123, 124, 126, 127, 131, 132, 133, 155, 157, 165, 166, 167, 168, 169, 171, 268, 271, 274, 280, 281, 323], "id": [47, 48, 155, 156, 157, 165, 169], "start_schema": [47, 48], "begin": [47, 48, 152, 153, 155, 156, 165, 166, 167, 186], "start_tim": [47, 48, 152, 153], "timepoint": [47, 48, 152, 153, 280, 282], "output_buff": [47, 48], "utter": [47, 48, 71, 72, 75, 76, 98, 99, 107, 108, 113, 114, 172, 173, 174, 175, 176, 182, 323], "accumul": [47, 48], "until": [47, 48, 52, 57, 76, 84, 123, 132, 292, 293], "readi": [47, 48], "them": [47, 48, 71, 74, 102, 105, 123, 127, 152, 154, 165, 170, 186, 199, 224, 241, 292, 293], "listen": [47, 48], "step_failure_tim": [47, 48], "posix": [47, 48, 224, 245, 280, 281, 283], "record": [47, 48, 155, 157, 280, 281, 284, 285], "track": [47, 48], "quit_convers": [47, 48, 52, 54], "whether": [47, 48, 52, 58, 61, 63, 64, 65, 66, 76, 100, 117, 121, 123, 131, 135, 136, 137, 138, 142, 144, 145, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 171, 201, 206, 211, 223, 224, 227, 245, 249, 319, 320, 323], "quit": [47, 48], "bool": [47, 48, 52, 58, 61, 63, 64, 65, 66, 117, 121, 123, 147, 152, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 170, 201, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 245], "associ": [47, 48, 107, 108, 123, 127, 155, 157, 165, 166, 167, 168, 292, 293, 323], "comput": [47, 48, 117, 118, 119, 120, 121, 122, 152, 154, 165, 166, 167, 168, 169, 170, 224, 248, 292, 293], "perform": [47, 48, 76, 85, 171, 172, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 323], "librari": [47, 48, 76, 100, 165, 170, 291], "form": [47, 48, 71, 72, 123, 126, 127, 131, 133, 139, 151, 165, 166, 167, 168, 169, 172, 178, 183, 224, 259, 268, 274, 275, 276, 277, 279, 292, 293, 297, 298, 306, 318], "knowledg": [47, 48, 76, 85, 102, 103, 172, 174, 175, 177, 182, 323], "schemalibrari": [47, 48, 165], "concept_alias": [47, 48], "concept_set": [47, 48], "init_knowledg": [47, 48], "initi": [47, 48, 49, 50, 123, 125, 152, 153, 155, 161, 186, 199, 224, 237, 257, 280, 281, 297, 301], "eventu": [47, 48, 52, 58, 61, 64, 65, 71, 74, 75, 76, 81, 83, 84, 102, 103, 104, 106, 123, 124, 132, 138, 140, 141, 146, 147, 148, 149, 152, 153, 154, 155, 157, 161, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 180, 181, 182, 184, 224, 243, 323], "schema_inst": [47, 48], "instanc": [47, 48, 165, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "due": [47, 48, 76, 82, 152, 154, 155, 307], "node": [47, 48, 155, 156, 157, 158, 159, 160, 161, 162, 163, 297, 301], "plannod": [47, 48, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 155, 158, 159, 160, 161, 162, 163], "reference_list": [47, 48], "equality_set": [47, 48], "conversation_log": [47, 48, 172, 173, 174, 175, 176, 177, 182, 187, 188, 189, 190, 191, 196], "dialogueturn": [47, 48, 107, 112, 113, 172, 173, 174, 175, 176, 177, 182], "memorystorag": [47, 48, 152], "timegraph": [47, 48], "get_io_path": [47, 48], "fname": [47, 48, 123, 141, 165, 170, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 268, 277, 279, 297, 300, 305], "get": [47, 48, 123, 124, 126, 127, 131, 132, 133, 152, 153, 154, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 201, 205, 208, 211, 217, 224, 244, 280, 282], "given": [47, 48, 52, 53, 56, 71, 72, 76, 77, 100, 107, 112, 113, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 140, 142, 144, 145, 147, 152, 154, 155, 156, 157, 158, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 180, 181, 184, 201, 203, 205, 209, 210, 211, 212, 217, 219, 222, 224, 226, 230, 235, 236, 240, 241, 243, 245, 247, 251, 253, 255, 257, 259, 260, 261, 264, 265, 267, 280, 281, 284, 285, 286, 290, 292, 293, 319, 321], "get_log_path": [47, 48], "get_perception_serv": [47, 48], "regist": [47, 48, 49], "percept": [47, 48, 323], "server": [47, 48, 49, 71, 72, 73], "get_specialist_serv": [47, 48], "specialist": [47, 48], "get_user_id": [47, 48], "get_step_failure_tim": [47, 48], "reset_step_failure_tim": [47, 48], "reset": [47, 48], "get_quit_convers": [47, 48], "set_quit_convers": [47, 48], "is_schema": [47, 48, 165, 170], "exist": [47, 48, 76, 82, 85, 95, 107, 112, 113, 165, 170, 211, 214, 215, 221, 224, 231], "has_plan": [47, 48], "ha": [47, 48, 49, 52, 57, 64, 123, 124, 127, 132, 155, 165, 224, 245], "get_plan": [47, 48], "set_plan": [47, 48], "do_continu": [47, 48], "continu": [47, 48, 292, 293], "init_plan_from_schema": [47, 48], "arg": [47, 48, 76, 82, 165, 166, 167, 168, 169, 185, 292, 293], "along": [47, 48], "argument": [47, 48, 76, 101, 117, 118, 119, 120, 121, 152, 154, 165, 166, 167, 168, 169, 172, 186, 199, 224, 253, 292, 293], "instanti": [47, 48, 76, 81, 84, 152, 154, 165, 166, 167, 168, 169, 186, 292, 293], "bind": [47, 48, 52, 53, 54, 55, 56, 57, 61, 65, 123, 124, 126, 127, 131, 132, 133, 134, 155, 156, 157, 165, 166, 167, 168, 169], "occur": [47, 48, 123, 124, 132, 155, 161, 165, 166, 167, 168, 169, 224, 228, 243], "header": [47, 48, 76, 82, 117, 120, 165, 166, 167, 168, 169, 170], "ani": [47, 48, 52, 55, 57, 71, 73, 76, 81, 82, 84, 102, 105, 107, 108, 112, 113, 123, 124, 126, 127, 131, 132, 133, 155, 157, 172, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 258, 268, 273, 292, 293, 297, 303, 304, 307, 308, 311, 312, 313], "It": [47, 48, 76, 85, 107, 115, 152, 154, 155, 157], "flat": [47, 48, 186, 199], "futur": [47, 48, 76, 77, 82, 102, 106, 152, 154, 155, 156, 161, 164], "might": [47, 48, 76, 77, 155, 161, 165, 166, 167, 168, 169], "want": [47, 48, 107, 115, 123, 127, 165, 166, 167], "add": [47, 48, 76, 77, 123, 125, 128, 152, 154, 155, 156, 157, 165, 170, 224, 231, 262], "annot": [47, 48, 165, 166], "abstract": [47, 48, 117, 119, 123, 131, 155, 156, 157, 165, 169, 172, 186, 199, 323], "hierarchi": [47, 48], "would": [47, 48, 152, 154], "ad": [47, 48, 52, 55, 57, 71, 73, 76, 77, 92, 102, 105, 152, 154, 155, 156, 158, 161, 165, 166, 167, 168, 169, 170], "superstep": [47, 48, 155, 156, 157, 158], "defin": [47, 48, 117, 119, 123, 125, 126, 127, 128, 131, 133, 134, 152, 154, 165, 170, 171, 172, 186, 224, 228, 292, 307], "sequenti": [47, 48, 155, 161], "howev": [47, 48, 76, 82, 152, 154, 224, 243], "relat": [47, 48, 155, 157, 161, 165, 166, 167], "should": [47, 48, 52, 54, 76, 77, 85, 107, 112, 113, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 168, 169, 172, 174, 175, 177, 179, 182, 224, 228, 243, 259, 297, 306, 307], "impos": [47, 48, 76, 95, 102, 105], "differ": [47, 48, 76, 102, 106, 152, 154, 165, 172, 186, 224, 245, 253], "order": [47, 48, 107, 112, 113, 152, 154, 155, 157, 164, 165, 166, 167, 168, 169, 201, 204, 224, 257, 307, 323], "result": [47, 48, 52, 55, 71, 73, 102, 106, 155, 156, 165, 166, 167, 168, 169, 172, 174, 175, 177, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 292, 293], "immedi": [47, 48, 52, 54, 107, 112, 224, 244], "follow": [47, 48, 76, 84, 92, 107, 115, 152, 153, 154, 155, 157, 224, 244, 259, 268, 273, 280, 281, 292, 293], "also": [47, 48, 52, 64, 71, 73, 107, 115, 123, 124, 132, 155, 156, 157, 164, 165, 186, 292, 293, 323], "section": [47, 48, 76, 84, 169], "context": [47, 48, 52, 53, 56, 57, 61, 64, 71, 73, 102, 104, 105, 152, 154, 172, 173, 174, 175, 176, 177, 181, 182], "well": [47, 48, 52, 55, 71, 73, 76, 77, 82, 102, 106, 107, 108, 123, 127, 134, 152, 154, 155, 157, 171, 186, 199, 201, 205, 209, 210], "advance_plan": [47, 48], "advanc": [47, 48, 52, 57, 58, 63, 64, 65, 66, 155], "next": [47, 48, 155, 156, 292, 293], "signal": [47, 48, 52, 54], "instantiate_curr_step": [47, 48], "newli": [47, 48], "constant": [47, 48, 123, 127, 147, 152, 154, 165, 166, 167, 168, 169, 224, 228], "throughout": [47, 48, 52, 57, 61, 65, 123, 124, 126, 127, 131, 132, 133, 152, 154, 155, 156, 157, 224, 256, 263], "unless": [47, 48, 201, 204, 268, 278], "alreadi": [47, 48, 117, 118, 119, 120, 121, 155, 157], "been": [47, 48, 49, 117, 118, 119, 120, 121, 224, 243, 319, 320], "match": [47, 48, 52, 57, 61, 64, 76, 82, 152, 154, 172, 173, 224, 241, 260, 292, 293, 307, 308, 309, 311, 312, 313, 317], "recur": [47, 48, 155, 157, 292, 293], "add_to_buff": [47, 48], "x": [47, 48, 117, 122, 123, 139, 152, 154, 165, 224, 253, 287, 288, 289, 294, 295, 296, 307, 308, 309, 311, 312, 313, 317], "add_to_buffer_if_empti": [47, 48], "iff": [47, 48, 123, 138, 297, 306], "empti": [47, 48, 52, 57, 117, 118, 201, 202, 206, 211, 215, 224, 227, 232, 249], "add_all_to_buff": [47, 48], "replace_buff": [47, 48], "replac": [47, 48, 52, 57, 76, 92, 107, 110, 115, 123, 124, 126, 127, 131, 132, 133, 152, 154, 155, 158, 163, 165, 166, 167, 168, 169, 224, 235, 243, 256, 259, 262, 264], "singl": [47, 48, 107, 109, 117, 118, 119, 120, 121, 152, 153, 154, 172, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 225, 242, 262, 268, 273, 280, 281, 292, 293], "replace_all_buff": [47, 48], "get_buff": [47, 48], "buffer_empti": [47, 48], "pop_buff": [47, 48], "pop": [47, 48, 76, 92, 102, 105, 201, 205, 209, 210, 224, 233, 234], "pop_all_buff": [47, 48], "get_conversation_log": [47, 48], "log_turn": [47, 48], "add_to_memori": [47, 48], "add_to_context": [47, 48], "remove_from_context": [47, 48, 152, 154], "remov": [47, 48, 52, 53, 123, 150, 152, 154, 165, 166, 167, 168, 169, 211, 220, 224, 233, 234, 241, 255, 257, 258, 262, 268, 270, 271], "access_from_context": [47, 48], "pred_patt": [47, 48, 152, 154], "access": [47, 48, 152, 153, 154, 155, 157], "pattern": [47, 48, 76, 77, 82, 152, 154, 171, 297, 301, 306, 307], "flush_context": [47, 48, 152, 154], "flush": [47, 48, 52, 64], "get_memori": [47, 48], "storag": [47, 48, 152, 153, 154], "eval_truth_valu": [47, 48], "wff": [47, 48, 59, 60, 62, 67, 68, 69, 70, 76, 78, 79, 82, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100, 101, 123, 124, 127, 132, 135, 136, 137, 138, 139, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 157, 165, 166, 167, 168, 169], "evalu": [47, 48, 307], "truth": [47, 48, 76, 81, 84], "apply_transduc": [47, 48], "var": [47, 48, 123, 124, 126, 127, 131, 132, 133, 155, 156, 157, 165, 166, 167, 168, 169, 224, 237], "val": [47, 48, 123, 124, 126, 127, 131, 132, 133, 134, 155, 156, 157, 165, 166, 167, 168, 169, 224, 234], "unbind": [47, 48, 76, 84, 123, 124, 126, 127, 131, 132, 133, 134, 155, 156, 157, 165, 166, 167, 168, 169], "retrieve_fact": [47, 48], "queri": [47, 48, 117, 118, 119, 120, 121, 152, 154, 165, 166, 167, 168, 169, 170], "n_schema": [47, 48], "n_schema_fact": [47, 48], "n_memori": [47, 48], "combin": [47, 48, 107, 110, 152, 154, 172, 179, 186, 199, 224, 225, 292, 293, 323], "divid": [47, 48], "two": [47, 48, 107, 115, 123, 151, 165, 166, 167, 168, 169, 224, 245, 280, 282, 297, 302, 303, 304], "subset": [47, 48, 123, 130], "background": [47, 48, 172, 174, 175, 177, 182], "those": [47, 48, 52, 64, 102, 105, 123, 127, 152, 154, 165, 166, 167, 168, 169, 172, 180, 181], "foreground": [47, 48, 172, 174, 175, 177, 182], "leverag": [47, 48], "downstream": [47, 48], "task": [47, 48, 323], "wai": [47, 48, 76, 77], "wherea": [47, 48, 186], "condit": [47, 48, 52, 57, 63, 66, 76, 81, 83, 84, 123, 132, 146, 147, 165, 166, 167, 168, 224, 243, 260], "without": [47, 48, 201, 205], "directli": [47, 48, 76, 82, 83, 85, 155, 162, 172, 174, 175, 177, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 292, 293], "option": [47, 48, 76, 81, 84, 107, 108, 112, 113, 117, 118, 119, 120, 121, 123, 125, 127, 128, 134, 147, 148, 152, 153, 154, 155, 161, 165, 170, 201, 207, 224, 241, 297, 306], "string": [47, 48, 71, 72, 74, 76, 77, 102, 106, 107, 114, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127, 131, 133, 134, 152, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 211, 212, 219, 222, 224, 243, 246, 259, 262, 265, 266, 268, 271, 273, 274, 275, 276, 280, 281, 292, 293, 297, 298, 307], "If": [47, 48, 52, 57, 61, 65, 76, 92, 117, 118, 119, 120, 121, 123, 147, 152, 154, 155, 157, 161, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 209, 210, 224, 241, 259, 292, 293], "previou": [47, 48, 71, 73, 76, 92, 102, 105, 106, 155, 156], "number": [47, 48, 102, 105, 152, 154, 155, 156, 164, 165, 166, 167, 168, 169, 170, 224, 237, 246, 261, 268, 269, 280, 281, 292, 293], "addit": [47, 48, 123, 124, 132, 152, 154, 292, 293], "facts_bg": [47, 48, 172, 174, 175, 177, 182, 188, 189, 191, 196], "facts_fg": [47, 48, 172, 174, 175, 177, 182, 188, 189, 191, 196], "write_output_buff": [47, 48], "push_output_buff": [47, 48], "utt": [47, 48, 76, 98, 99, 172, 176, 190], "push": [47, 48, 52, 55, 224], "onto": [47, 48, 52, 55], "print_schema_inst": [47, 48], "no_bind": [47, 48, 123, 124, 127, 132, 165, 166, 167, 168, 169], "fals": [47, 48, 117, 121, 123, 124, 127, 132, 147, 152, 154, 155, 156, 157, 164, 165, 166, 167, 168, 169, 201, 205, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 257, 262], "print": [47, 48, 155, 157, 211, 223], "address": [47, 49], "authkei": [47, 49], "serial": [47, 49, 155, 157], "pickl": [47, 49], "ctx": [47, 49], "basemanag": [47, 49], "agent_config_nam": [47, 51], "user_config_nam": [47, 51], "clear": [47, 51, 155, 157, 201, 211, 224, 229], "method": [48, 49, 76, 83, 84, 108, 109, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 132, 133, 134, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 281, 292, 297], "connect": 49, "get_serv": 49, "serve_forev": 49, "join": [49, 186], "timeout": 49, "classmethod": 49, "typeid": 49, "callabl": 49, "proxytyp": 49, "expos": 49, "method_to_typeid": 49, "create_method": 49, "true": [49, 52, 54, 57, 63, 123, 124, 127, 132, 147, 152, 153, 154, 155, 157, 165, 166, 167, 168, 169, 170, 201, 205, 209, 210, 211, 217, 224, 257, 259, 262, 297, 298], "initarg": 49, "primit": [52, 57, 65, 76, 82, 83], "action": [52, 57, 65, 76, 77, 92, 102, 105, 106, 155, 157, 172, 179], "execution_loop": 52, "either": [52, 57, 71, 72, 74, 117, 118, 119, 120, 121, 123, 124, 132, 140, 152, 154, 165, 170, 201, 203, 204, 224, 227, 280, 281, 292, 293], "intend": [52, 57, 65, 76, 84, 102, 104, 155, 157, 165, 166, 167, 319, 320, 321], "one": [52, 57, 76, 82, 83, 85, 95, 102, 105, 107, 112, 113, 115, 123, 127, 152, 153, 154, 155, 157, 171, 186, 224, 259, 292, 293], "sever": [52, 57, 123, 127], "depend": [52, 57, 76, 81, 84, 155, 164, 186], "pend": [52, 57], "repetit": [52, 57, 66, 76, 84, 123, 147, 149], "onc": [52, 57, 64, 152, 154, 155, 157], "elaps": [52, 57, 64, 224, 245, 280, 282], "character": [52, 57, 58, 123, 127, 136, 152, 154, 165], "success": [52, 57, 61, 64, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 95, 292, 293], "In": [52, 57, 71, 73, 76, 77, 102, 105, 123, 124, 132, 152, 154, 292, 293], "obtain": [52, 53, 54, 55, 56, 57, 292, 293, 307], "wa": [52, 57, 61, 65, 76, 92, 107, 115, 152, 153, 155, 157], "content": [52, 57, 76, 92, 107, 109, 165, 166, 167, 168, 169, 170, 172, 173, 211, 213, 219, 224, 244, 259, 262], "modifi": [52, 57, 76, 92, 123, 141, 155, 157, 158, 165, 280, 297, 298, 307, 308, 313, 323], "wasn": [52, 57], "t": [52, 57, 107, 110, 111, 123, 130, 155, 157, 211, 214, 215, 224, 243, 319, 320], "still": [52, 57, 76, 84, 102, 103, 107, 115], "becaus": [52, 57, 107, 115, 155, 157], "chang": [52, 57, 165, 166, 167], "so": [52, 57, 152, 154, 155, 157, 158, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204], "constantli": [52, 57], "expans": [52, 57, 76, 82, 83, 155, 157], "process_condition_step": 52, "process_repetition_step": 52, "satisfi": [52, 66, 224, 241, 254], "process_expected_step": 52, "wait": [52, 64, 292, 293, 297, 306], "point": [52, 64, 152, 153, 155, 158, 280, 281], "essenti": [52, 64, 152, 153, 154, 292, 293], "becom": [52, 64, 123, 147, 152, 154, 155, 157], "outdat": [52, 64], "inquire_truth_of_curr_step": 52, "unifi": [52, 61, 76, 82, 85], "fail_curr_step": 52, "special": [52, 58, 71, 72, 76, 82, 123, 124, 129, 132, 138, 292, 293], "process_intended_step": 52, "successfulli": [52, 65], "execute_say_to": 52, "potenti": [52, 55, 76, 85, 107, 114, 152, 154, 165], "deriv": [52, 55, 71, 73, 74, 75, 123, 127, 186, 199], "planstep": [52, 53, 54, 55, 56, 155, 156], "cours": [52, 53, 54, 55, 56], "execute_say_by": 52, "end": [52, 54, 152, 153, 155, 156, 163, 165, 166, 167, 168, 169, 224, 251], "flag": [52, 54], "remain": [52, 54], "execute_store_in_stm": 52, "execute_forget_from_stm": 52, "perceiv": 71, "perception_loop": 71, "perceptu": [71, 72, 73], "mean": [71, 73, 76, 84, 107, 108, 172, 178, 183, 292, 293], "collect": [71, 72, 165], "natur": [71, 72, 74, 76, 77, 102, 106, 123, 124, 126, 127, 130, 131, 132, 133, 165, 166, 167, 168, 169, 292, 293], "languag": [71, 72, 74, 76, 77, 102, 106, 123, 124, 126, 127, 130, 131, 132, 133, 165, 166, 167, 168, 169, 172, 292, 293, 323], "lisp": [71, 72, 74, 76, 77, 102, 106, 123, 126, 131, 133, 140, 141, 165, 170, 186, 199, 224, 240, 268, 270, 274, 276, 277, 279, 292, 297, 299, 300, 307], "express": [71, 72, 74, 76, 77, 102, 106, 123, 126, 127, 131, 133, 142, 146, 147, 149, 152, 154, 155, 157, 165, 166, 167, 168, 169, 170, 172, 178, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 247, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 292, 293, 307, 315], "repres": [71, 72, 107, 108, 109, 114, 123, 124, 127, 132, 152, 153, 155, 156, 157, 165, 166, 167, 168, 268, 274, 323], "logic": [71, 72, 123, 126, 127, 131, 133, 152, 153, 172, 178, 183, 318], "process_utter": 71, "process_observ": 71, "non": [71, 74, 165, 166, 167, 168, 224, 227, 236, 292, 293], "pars": [71, 74, 107, 114, 123, 127, 146, 147, 148, 149, 172, 178, 183, 268, 272, 276, 292, 293], "includ": [76, 102, 106, 155, 156, 164, 172, 174, 175, 177, 182, 224, 249], "expand": [76, 81, 82, 83, 84, 85, 92, 95, 107, 111, 155, 157, 158, 172, 179, 184, 323], "merg": [76, 85, 92, 152, 154, 155, 163, 297, 302, 303, 304], "reorder": [76, 92, 95], "hold": [76, 165, 166, 167], "whenev": 76, "planning_loop": 76, "suggest": [76, 92, 102, 105, 106], "updat": [76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 152, 153, 154, 280, 281], "consist": [76, 92, 152, 153, 155, 224, 266, 292, 293, 297, 306, 323], "substep": [76, 82, 92, 155, 157, 172, 184], "equival": [76, 85, 92, 224, 240], "accord": [76, 92, 95, 123, 147, 152, 154, 165, 166, 167, 168, 169, 224, 226, 292, 293], "constraint": [76, 92, 95, 155, 161], "re": [76, 92, 165, 166, 167, 168, 169], "add_possible_actions_to_plan": 76, "improv": [76, 77, 82, 102, 106], "For": [76, 77, 107, 115, 201, 204, 224, 267], "extend": [76, 77, 152, 154, 155, 163, 171, 172], "polici": [76, 77], "k": [76, 77, 123, 129, 130, 224, 231, 232, 233, 234], "uncondition": [76, 77], "verifi": [76, 77], "done": [76, 77, 155, 158, 165, 166, 167, 168, 169], "insert": [76, 77, 152, 154, 155, 157, 158, 162, 224, 230, 251], "abl": [76, 77], "elsewher": [76, 77, 155, 164], "expand_plan_step": 76, "surfac": [76, 82, 155, 156, 164], "keyword": [76, 82, 123, 124, 130, 132, 146, 147, 149, 165, 166, 167, 168, 169, 186, 224, 244, 292, 293], "behavior": [76, 82, 85, 155, 157, 172], "whose": [76, 82, 83, 107, 112, 113, 155, 156, 224, 259], "tree": [76, 82, 155, 157, 172, 186, 199, 224, 253, 254, 291, 292, 293, 297, 299, 300, 301, 304, 306], "certain": [76, 82, 107, 115], "merge_plan_step": 76, "hard": [76, 85], "code": [76, 85, 268, 307], "adjac": [76, 85], "possibli": [76, 85, 117, 119, 152, 154, 224, 230, 241, 251, 280, 285, 286], "allow": [76, 85, 102, 106, 152, 154, 155, 161, 165, 166, 167, 168, 169, 172, 307, 323], "neural": [76, 85, 323], "network": [76, 85, 323], "llm": [76, 85, 172], "reorder_plan_step": 76, "stub": [76, 95, 319, 320], "implement": [76, 95, 102, 103, 152, 154, 172, 186, 199, 201, 323], "expand_condition_step": 76, "its": [76, 81, 84, 123, 138, 152, 153, 165, 166, 167, 168, 169, 172, 178, 183, 186, 199], "inherit": [76, 81, 84, 155, 157, 161], "sub": [76, 81, 84, 123, 124, 129, 130, 132, 152, 154, 165, 166, 167, 224, 242], "expand_repetition_step": 76, "made": [76, 84, 307, 319, 320], "local": [76, 84, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "repeat": [76, 84, 123, 132], "appear": [76, 84, 155, 157], "outsid": [76, 84], "yet": [76, 84], "particip": [76, 84, 165, 166, 167, 168, 169], "unbound": [76, 84], "although": [76, 84, 201], "typic": [76, 84], "itself": [76, 84], "expand_primitive_step": 76, "plan_paraphras": 76, "subplan": [76, 87, 88, 89, 90, 91, 98, 99, 155, 156, 157, 158, 163, 172, 184], "plan_respond": 76, "plan_answ": 76, "plan_ask": 76, "plan_react": 76, "reaction": [76, 90, 102, 105, 106, 172, 179], "say_to_step_from_utt": 76, "just": [76, 99], "split": [76, 99, 101, 224, 260, 268, 272, 307, 316], "off": [76, 99], "schema_step": 76, "split_schema_step": 76, "wff1": [80, 123, 148], "wff2": [80, 123, 148], "reasoning_loop": 102, "recent": [102, 105, 152, 153, 154], "both": [102, 105, 107, 109, 152, 154, 171, 172], "down": [102, 104, 105], "bottom": [102, 103, 105], "up": [102, 103, 105, 319, 320], "manner": [102, 103, 104, 105], "depth": [102, 105, 297, 306], "limit": [102, 105, 307, 319, 321], "below": [102, 105, 152, 154, 155, 157], "awai": [102, 105], "further": [102, 105, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "minimum": [102, 105], "approach": [102, 105], "infer_top_down": 102, "infer_bottom_up": 102, "suggest_possible_act": 102, "reconsid": [102, 106], "retri": [102, 106], "desir": [102, 106], "urgenc": [102, 106], "differenti": [102, 106], "kind": [102, 106], "even": [102, 106], "simpl": [102, 106, 319, 320], "chit": [102, 106], "chat": [102, 106], "domain": [102, 106, 123, 307, 323], "wish": [102, 106, 152, 154], "question": [102, 106, 172, 175], "higher": [102, 106], "statement": [102, 106], "tool": [107, 117, 152], "word": [107, 109, 113, 114, 115, 123, 130, 172, 173, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 268, 272, 273, 292, 293, 297, 298, 299, 300, 307, 310, 311, 312, 313, 315, 316, 319, 320, 321], "ep": [107, 108, 123, 124, 127, 132, 146, 147, 148, 149, 152, 153, 154, 155, 157, 165, 166, 167, 168, 169], "inform": [107, 108], "captur": [107, 108, 172, 178, 183], "drawn": [107, 108], "copi": [107, 108, 165, 166, 167, 168, 169], "conveni": [107, 108], "get_prior_turn": 107, "prior": [107, 112, 113], "chronolog": [107, 112, 113], "found": [107, 112, 113, 155, 157, 186, 224, 232, 292, 293, 319, 320], "get_prior_word": 107, "parse_utt_str": 107, "prefix": [107, 114, 165, 166, 167, 168, 169, 170, 224, 237, 307, 314], "tag": [107, 114], "decompress": 107, "contract": [107, 110, 111], "full": [107, 111, 123, 127, 186, 292, 293], "phrase": [107, 111], "don": [107, 111, 123, 130], "dont": [107, 111], "compress": [107, 268, 272], "auxiliari": [107, 110], "NOT": [107, 110], "presubst": 107, "prepar": [107, 115], "call": [107, 115, 171, 280, 283, 292, 293, 319, 320], "swap_dual": [107, 115, 165, 166, 167, 168, 169], "avoid": [107, 115, 165, 166, 167, 168, 169, 224, 241, 307], "ungrammat": [107, 115], "exampl": [107, 115], "swap": [107, 115, 116, 165, 166, 167, 168, 169], "dual": [107, 115, 165, 166, 167, 168, 169, 224, 236], "pronoun": [107, 115, 116], "why": [107, 115], "stupid": [107, 115], "while": [107, 115], "correctli": [107, 115], "produc": [107, 115], "your": [107, 115], "brother": [107, 115], "are2": [107, 115], "preced": [107, 115, 155, 162], "similarli": [107, 115, 155], "were": [107, 115, 268, 272, 307], "were2": [107, 115], "was2": [107, 115], "you2": [107, 115], "last": [107, 115, 152, 154, 155, 158, 160, 163, 292, 293], "conjunct": [107, 115, 123, 135], "subordin": [107, 115], "verb": [107, 115], "think": [107, 115], "believ": [107, 115], "know": [107, 115], "rather": [107, 115, 123, 147, 155, 157, 172, 179, 307], "person": [107, 116], "vice": [107, 116, 224, 236], "versa": [107, 116, 224, 236], "document": [117, 118, 119, 120, 121, 186], "cosin": [117, 122], "similar": [117, 122, 152, 154, 165, 166, 167, 168, 169, 170], "These": 117, "serv": 117, "interfac": 117, "invok": [117, 307], "variou": [117, 171, 172, 224], "minim": [117, 119, 123, 127], "precomput": [117, 118, 119, 120, 121], "rel": [117, 118, 119, 120, 121], "emb": [117, 118, 119, 120, 121, 123, 124, 127, 132, 152, 154, 165, 166, 167, 168, 169, 170], "bypass": [117, 118, 119, 120, 121], "stembedd": 117, "parallel": [117, 121, 323], "nativ": [117, 121], "sentencetransform": [117, 121], "enabl": [117, 121], "disabl": [117, 121], "hfembedd": 117, "host": [117, 120], "specif": [117, 120, 152, 154, 165, 166, 167, 168, 169, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 262, 280, 281, 292, 293, 307, 319, 320, 323], "dummyembedd": 117, "sim": 117, "y": [117, 122, 123, 139], "vector": [117, 122, 123, 127, 165, 169, 224, 248, 250, 261], "writeup": [123, 155], "plur": [123, 129, 130], "past": [123, 129, 130, 155, 156, 164], "pre": [123, 129, 130], "perf": [123, 129, 130], "prog": [123, 129, 130], "pasv": [123, 129, 130], "ka": [123, 129, 130], "ke": [123, 129, 130], "tht": [123, 129, 130], "fquan": [123, 129, 130], "nquan": [123, 129, 130], "nmod": [123, 129, 130], "amod": [123, 129, 130], "h": [123, 129, 130, 268, 276], "p": [123, 129, 130, 152, 154, 319, 321], "pred": [123, 129, 130, 152, 154, 155, 157, 292, 293, 297, 299, 305], "rep": [123, 129, 130], "poss": [123, 129, 130], "adv": [123, 129, 130], "f": [123, 129, 130, 268, 276], "voc": [123, 129, 130], "o": [123, 129, 130], "pu": [123, 129, 130], "cf": [123, 129, 130], "mod": [123, 129, 130], "most": [123, 129, 130, 152, 153, 154, 155, 156], "que": [123, 129, 130], "reserv": [123, 129], "oper": [123, 129, 171, 323], "keywords_r": 123, "mirror": [123, 130], "punctuat": [123, 130, 224, 262], "remove_typ": 123, "atm": [123, 150], "suffix": [123, 150, 224, 243], "atom": [123, 150, 224, 234, 268, 276, 319, 320], "individu": [123, 125, 134, 152, 154], "incomplet": [123, 125, 128, 134, 319, 321], "unus": [123, 125, 128, 134], "add_alias": [123, 125, 128], "alias": [123, 125, 128], "assign": [123, 124, 126, 127, 131, 132, 133, 134, 152, 154, 297, 298], "bound": [123, 127, 131, 134, 152, 153, 155, 156, 163, 165, 169, 280, 281, 282, 284, 285, 286, 290], "though": [123, 134], "principl": [123, 134], "elf": [123, 124, 127, 131, 132, 165, 169], "thereof": [123, 126, 131, 133, 323], "replacevar": [123, 124, 126, 127, 131, 132, 133], "var1": [123, 124, 126, 127, 131, 132, 133], "var2": [123, 124, 126, 127, 131, 132, 133], "get_formula": [123, 126, 131, 133], "to_nl": [123, 126, 131, 133], "convert": [123, 126, 131, 133, 155, 156, 224, 262, 266, 268, 273, 274, 275, 280, 281, 319, 321], "nl": [123, 124, 127, 132, 292, 293], "prob": [123, 124, 127, 132, 146, 149, 165, 166, 167, 168, 169], "subsum": [123, 127], "encapsul": [123, 127, 323], "At": [123, 127], "highest": [123, 124, 127, 132, 152, 154], "fulli": [123, 127], "deindex": [123, 127], "build": [123, 127], "upward": [123, 127], "easili": [123, 127], "likewis": [123, 127, 152, 153], "requir": [123, 127], "disambigu": [123, 127], "scope": [123, 127, 165, 169], "henc": [123, 127], "regard": [123, 127, 152, 154, 297, 298], "upper": [123, 127, 280, 281, 282, 284, 285, 286, 290, 319, 320], "thei": [123, 127, 165, 166, 167, 168, 169, 172], "simpler": [123, 127], "applic": [123, 127], "probabl": [123, 124, 127, 132, 147, 148, 152, 154, 165, 166, 167, 168, 169, 319, 320], "set_ep": [123, 124, 127, 132], "set_ulf": [123, 124, 127, 132], "set_elf": [123, 124, 127, 132], "set_prob": [123, 124, 127, 132], "get_ep": [123, 124, 127, 132, 152, 153], "get_nl": [123, 124, 127, 132], "get_ulf": [123, 124, 127, 132], "get_elf": [123, 124, 127, 132], "get_wff": [123, 124, 127, 132, 152, 153], "avail": [123, 124, 127, 132], "basic": [123, 124, 132, 147, 224], "pair": [123, 124, 148, 297, 306], "Such": [123, 124, 132], "try": [123, 124], "sequenc": [123, 124, 155, 163, 165, 172, 184, 224, 259], "tupl": [123, 124, 152, 154, 155, 156, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 224, 259, 266, 280, 281, 286, 290, 297, 306], "termin": [123, 132], "longer": [123, 132, 152, 153], "stop": [123, 132], "parse_eventu": 123, "prob_dict": [123, 146, 147, 148, 149], "otherwis": [123, 147, 165, 166, 167, 168, 169, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 280, 281], "dictionari": [123, 147, 148, 297, 298], "abov": [123, 147, 152, 154, 155, 157, 292, 293], "parse_condit": 123, "parse_repetit": 123, "parse_eventuality_list": 123, "lst": [123, 142, 143, 148, 224, 225, 226, 227, 241, 242, 244, 249, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 266, 268, 274, 275, 307, 314], "altern": [123, 148], "ep1": [123, 148], "ep2": [123, 148], "from_lisp_fil": [123, 165, 170, 297], "from_lisp_dir": [123, 165, 170, 297], "dir": [123, 140, 155, 164, 165, 170, 297, 299], "recurs": [123, 140, 165, 170, 224, 241, 242, 255, 256, 263, 268, 274, 275, 276, 277, 279, 292, 293, 297, 299], "expectation_p": 123, "intent": [123, 138], "subject": [123, 138], "extract_set": 123, "item": [123, 139, 143, 201, 203, 204, 205, 209, 210, 224, 257, 307, 312, 313], "make_set": 123, "is_set": 123, "set_union": 123, "lst1": [123, 151, 224, 230, 251], "lst2": [123, 151, 224, 230, 251], "union": [123, 151], "equal_prop_p": 123, "not_prop_p": 123, "neg": [123, 144, 152, 154, 307, 312, 313], "and_prop_p": 123, "or_prop_p": 123, "disjunct": [123, 145], "characterizes_prop_p": 123, "__eq__": [124, 127, 132, 153], "self": [124, 126, 127, 128, 131, 132, 133, 134, 153, 154, 156, 157, 166, 167, 168, 169, 170, 281], "__hash__": [124, 127, 132, 153], "hash": [124, 127, 132, 152, 153, 154, 307], "__str__": [124, 126, 127, 128, 131, 132, 133, 134, 153, 154, 156, 157, 166, 167, 168, 169, 170, 281], "tempor": [152, 153, 165, 166, 167], "numer": [152, 153, 155, 157, 280, 281], "earliest": [152, 153], "known": [152, 153], "upon": [152, 153, 155, 157], "end_tim": [152, 153], "latest": [152, 153, 154], "last_access": [152, 153], "mark": [152, 153], "thu": [152, 153], "update_last_access": [152, 153], "declar": [152, 153], "get_time_wff": [152, 153], "is_tel": [152, 153], "importance_threshold": [152, 154], "effici": [152, 154, 307], "lookup": [152, 154], "ep_ht": [152, 154], "wff_ht": [152, 154], "valid": [152, 154, 224, 266], "binari": [152, 154, 224, 253], "subj": [152, 154], "obj1": [152, 154], "obj2": [152, 154], "date": [152, 154, 280, 281, 284, 285], "actual": [152, 154, 172], "negat": [152, 154, 201], "kept": [152, 154], "posit": [152, 154, 201], "seem": [152, 154], "like": [152, 154, 172, 179, 186, 224, 236], "sort": [152, 154], "contradict": [152, 154], "detect": [152, 154, 172, 173], "duplic": [152, 154, 165, 166, 167, 168, 169, 224, 237, 257, 297, 303, 304], "e1": [152, 154, 165, 166, 167, 168, 169, 224, 236], "e3": [152, 154], "e4": [152, 154], "e5": [152, 154], "occurr": [152, 154], "somehow": [152, 154], "multipl": [152, 154, 172, 179, 186, 268, 272, 292, 293, 307, 316, 323], "particular": [152, 154, 155, 157, 165, 170, 186, 199, 292, 293, 323], "unclear": [152, 154], "partial": [152, 154, 155, 157], "account": [152, 154], "get_episod": [152, 154], "get_match": [152, 154], "block1": [152, 154], "block2": [152, 154], "scheme": [152, 154], "nest": [152, 154, 224, 241, 268, 274, 275, 276, 277, 279, 297, 306], "get_from_context": [152, 154], "remove_episod": [152, 154], "remove_match": [152, 154], "remove_episode_from_context": [152, 154], "remove_matching_from_context": [152, 154], "get_characterizing_episod": [152, 154], "does_characterize_episod": [152, 154], "coeff": [152, 154, 224, 248], "recenc": [152, 154], "salienc": [152, 154], "three": [152, 154, 323], "criteria": [152, 154], "final": [152, 154, 292, 293, 319, 320], "linear": [152, 154, 224, 248], "sum": [152, 154, 224, 248, 250], "multipli": [152, 154], "everi": [152, 154], "weight": [152, 154], "evict": [152, 154], "reduc": [152, 154], "size": [152, 154], "tbc": [152, 154], "perman": [152, 154], "too": [152, 154], "larg": [152, 154, 172, 323], "tractabl": [152, 154], "fall": [152, 154], "doubli": [155, 156], "link": [155, 156, 157, 158, 159, 160, 162], "concret": [155, 157], "togeth": [155, 157, 224, 225], "constitut": 155, "frontier": 155, "previous": 155, "held": 155, "pointer": [155, 158], "explain": 155, "figur": 155, "prev": [155, 156], "add_superstep_to_subplan": [155, 156], "head": [155, 156, 158], "add_superstep": [155, 156, 157], "start_nod": [155, 156], "end_nod": [155, 156], "add_schema_to_subplan": [155, 156], "get_schema": [155, 156, 165, 170], "get_all_root": [155, 156], "root": [155, 156, 157, 186, 199, 292, 293, 297, 299, 300, 306], "reachabl": [155, 156], "statu": [155, 156], "show": [155, 156], "displai": [155, 156, 157, 164], "serialize_subtre": [155, 156], "subtre": [155, 156, 157, 292, 293, 297, 306], "serialize_from_root": [155, 156], "to_graph": [155, 156], "standard": [155, 156, 224, 268, 271, 278], "graph": [155, 156, 164], "vertic": [155, 156, 224, 240], "edg": [155, 156], "label": [155, 156, 164, 165, 166, 167, 168, 169], "id1": [155, 156], "id2": [155, 156], "realiz": [155, 157], "aris": [155, 157], "get_oblig": [155, 157], "bit": [155, 157], "hack": [155, 157], "involv": [155, 157], "parent": [155, 157], "latter": [155, 157], "bidirect": [155, 157], "superplan": [155, 157], "doesn": [155, 157, 211, 214, 215], "sensibl": [155, 157], "alwai": [155, 157, 292, 293], "append": [155, 157, 211, 212, 224, 243], "revers": [155, 157], "df": [155, 157], "get_first_plan_nod": 155, "plan_nod": [155, 158, 159, 160, 162, 164], "arbitrari": [155, 159, 160, 165, 170], "get_last_plan_nod": 155, "expand_plan_nod": 155, "subplan_node_start": [155, 158], "anoth": [155, 158, 171], "insert_before_plan_nod": 155, "new_plan_node_start": [155, 162], "merge_plan_nod": 155, "plan_node_start": [155, 163], "plan_node_end": [155, 163], "new_plan_nod": [155, 163], "deal": [155, 163], "discontigu": [155, 163], "init_plan_from_eventu": 155, "etc": [155, 161, 172, 186, 297, 306, 319, 320], "construct": [155, 161], "visualize_plan": 155, "vert": [155, 164], "visual": [155, 164], "graphviz": [155, 164], "dot": [155, 164], "rotat": [155, 164], "left": [155, 164], "right": [155, 164], "imag": [155, 164], "better": [155, 164, 165, 166], "cleaner": [155, 164], "under": 165, "precondit": 165, "dog": [165, 169], "eat": [165, 169], "role": [165, 169], "present": [165, 166, 167, 168, 169, 297, 306], "read_param_dict": [165, 166, 167, 168, 169], "schema_cont": [165, 166, 167, 168, 169], "to_probability_dict": [165, 166, 167, 168, 169], "necess": [165, 166, 167, 168, 169], "entri": [165, 166, 167, 168, 169], "subst_map": [165, 166, 167, 168, 169], "part": [165, 166, 167, 168, 169, 292, 293], "duplicate_vari": [165, 166, 167, 168, 169], "across": [165, 166, 167, 168, 169], "ones": [165, 166, 167, 168, 169, 292, 293], "conflict": [165, 166, 167, 168, 169], "deep": [165, 166, 167, 168, 169], "collis": [165, 166, 167, 168, 169], "bind_arg": [165, 166, 167, 168, 169], "implicit": [165, 166, 167, 168, 169, 307], "fewer": [165, 166, 167, 168, 169], "redund": [165, 166, 167, 168, 169, 307], "front": [165, 166, 167, 168, 169, 224, 230], "superflu": [165, 166, 167, 168, 169], "get_particip": [165, 166, 167, 168, 169], "get_cont": [165, 166, 167, 168, 169], "get_sect": [165, 166, 167, 168, 169], "sec": [165, 166, 167, 168, 169], "get_section_ep": [165, 166, 167, 168, 169], "get_section_wff": [165, 166, 167, 168, 169], "epischema": [165, 166, 170], "rigid_cond": [165, 166, 167, 168], "static_cond": [165, 166, 167], "precond": [165, 166, 167], "postcond": [165, 166, 167], "goal": [165, 166, 167], "episode_rel": [165, 166, 167], "prototyp": [165, 166, 167, 168], "nomin": [165, 166, 167, 168], "rigid": [165, 166, 167, 168], "cond": [165, 166, 167, 168], "fluent": [165, 166, 167, 168, 224, 236], "static": [165, 166, 167], "causal": [165, 166, 167], "dialschema": [165, 170], "get_obligations_of_ep": [165, 166], "attach": [165, 166, 224, 243], "accessor": [165, 166, 224, 232], "objschema": [165, 170], "skeletal_prototyp": [165, 168], "skelet": [165, 168], "3d": [165, 168], "mesh": [165, 168], "decomposit": [165, 168, 297, 306], "obj": [165, 168, 170], "filenam": [165, 168, 297, 300, 305], "dial": [165, 170], "epi": [165, 170], "m": [165, 170], "retrieve_knowledg": [165, 170], "signatur": [171, 172], "intern": [171, 292, 293], "tt": 171, "techniqu": 172, "rule": [172, 297, 300, 306, 307, 323], "statist": 172, "stack": 172, "practic": 172, "collat": 172, "report": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "cumul": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "reasontopdowntransduc": [172, 186, 195], "reasonbottomuptransduc": [172, 186, 194], "gisttransduc": [172, 186, 190], "semantictransduc": [172, 186, 197], "pragmatictransduc": [172, 186, 192], "reactiontransduc": [172, 186, 193], "conting": [172, 179], "subplantransduc": [172, 186, 198], "paraphrasetransduc": [172, 186, 191], "impact": [172, 174, 175, 177, 182], "responsetransduc": [172, 186, 196], "answertransduc": [172, 186, 188], "asktransduc": [172, 186, 189], "affecttransduc": [172, 186, 187], "appropri": [172, 173], "__call__": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "subclass": 186, "tttransduc": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "forest": 186, "choic": [186, 199, 291, 297, 299, 300, 301, 304, 306], "packet": [186, 199, 297, 306], "slightli": 186, "raw": [186, 292, 293], "flatten": [186, 224, 268, 275], "util": 186, "rule_dir": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "choos": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 292, 293], "feat": [186, 199, 292, 293, 297, 298, 299, 300], "doe": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "ttreasontopdowntransduc": 186, "ttreasonbottomuptransduc": 186, "ttgisttransduc": 186, "ttsemantictransduc": 186, "ttpragmatictransduc": 186, "ttreactiontransduc": 186, "ttsubplantransduc": 186, "ttparaphrasetransduc": 186, "ttresponsetransduc": 186, "ttanswertransduc": 186, "ttasktransduc": 186, "ttaffecttransduc": 186, "quot": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 224, 247, 268, 272, 273, 307, 315], "concaten": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "substr": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 268, 269], "chosen": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "reli": [200, 224, 243, 291, 319], "manipul": [201, 268, 307, 318], "architectur": 201, "heapq": 201, "min": 201, "heap": 201, "enqueu": [201, 204], "enqueue_ord": 201, "inc_val": [201, 204], "0001": [201, 204], "preserv": [201, 204, 224, 257], "explicitli": [201, 204], "increment": [201, 204, 224, 243], "is_empti": 201, "pop_item": 201, "pop_al": 201, "get_item": 201, "max_import": 201, "maximum": [201, 208], "func": [201, 207], "get_path": 211, "in_modul": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "absolut": [211, 217], "read_fil": 211, "read_lin": 211, "line": [211, 220, 223, 268, 270], "whitespac": [211, 220, 224, 262, 268, 271], "write_fil": 211, "append_fil": 211, "load_json": 211, "load": [211, 218, 307], "write_json": 211, "pretti": [211, 223], "indent": [211, 223, 224], "ensure_dir_exist": 211, "dirnam": [211, 214], "ensure_file_exist": 211, "clear_symtab": 224, "gentemp": 224, "hasn": [224, 243], "integ": [224, 243, 292, 293, 297, 306], "exploit": [224, 243], "cannot": [224, 243], "see": [224, 243, 292, 293], "superfastpython": [224, 243], "com": [224, 243, 268, 292, 307], "race_condition_with_shared_data": [224, 243], "somewhat": [224, 243], "clumsi": [224, 243], "ineffici": [224, 243], "proper": [224, 243], "solut": [224, 243], "episode_nam": 224, "episode_var": 224, "escaped_symbol_p": 224, "escap": [224, 240, 268, 270, 278], "bar": [224, 240], "symbolp": 224, "variablep": 224, "dual_var": 224, "ep_var": [224, 236], "duplicate_var": 224, "trail": [224, 237], "replaceal": 224, "replist": [224, 235, 259, 264], "old": [224, 256, 259], "is_regex": [224, 259], "regex": [224, 259], "remove_parenthet": [224, 262], "_": [224, 262], "parenthet": [224, 262], "around": [224, 262], "collaps": [224, 262], "space": [224, 262], "lowercas": [224, 262, 268, 278], "isquot": 224, "rec_replac": 224, "rec_remov": 224, "target": [224, 255], "listp": 224, "con": [224, 307, 314], "sublist": [224, 225, 230, 251], "remove_dupl": 224, "remove_nil": 224, "null": [224, 258, 292, 293], "subst": 224, "b": [224, 263, 268, 274, 275, 276], "substal": 224, "random_el": 224, "select": [224, 226, 252, 292, 293], "random": [224, 252], "get_keyword_cont": 224, "to_kei": 224, "split_by_cond": 224, "cndfn": [224, 254, 260], "filter": [224, 260], "extract_categori": 224, "catfn": [224, 241], "ignfn": [224, 241], "categori": [224, 241, 319, 321], "ignor": [224, 241], "subexpress": [224, 241, 253, 254], "lst_new": [224, 241], "rec_find": 224, "lambda": [224, 253], "rec_find_if": 224, "dict_substall_kei": 224, "dct": [224, 231, 232, 233, 234, 235], "cons_dict": 224, "dict_get": 224, "safe": [224, 232, 233, 234], "dict_rem_v": 224, "dict_rem": 224, "squash": 224, "rang": [224, 261], "normal": 224, "linsum": 224, "scale": [224, 248], "argmax": 224, "certainty_to_period": 224, "proport": [224, 228], "quantiti": [224, 228], "infin": [224, 228], "inf": [224, 228], "has_elapsed_certainty_period": 224, "delta": [224, 245], "timestamp": [224, 245, 280, 281, 283], "borrow": 268, "repositori": 268, "github": [268, 292, 307], "bitbang": 268, "blob": [268, 292, 307], "master": [268, 292, 307], "pyschema": 268, "py": 268, "balanced_substr": 268, "balanc": [268, 269], "parenthes": [268, 269], "clean_s_expr": 268, "s_expr": [268, 271, 272, 273, 276, 278], "clean": [268, 270, 271], "newlin": [268, 271], "standardize_symbol": 268, "enclos": [268, 278], "convert_quot": 268, "compress_quot": 268, "parse_s_expr": 268, "c": [268, 274, 275, 276], "list_to_s_expr": 268, "list_to_str": 268, "clean_lisp": 268, "comment": [268, 270], "charact": [268, 270], "read_lisp": 268, "write_lisp": 268, "datetim": [280, 281, 284, 285, 286, 290], "lower": [280, 281, 282, 284, 285, 286, 290, 292, 293], "year": [280, 281, 286, 290], "month": [280, 281, 286, 290], "dai": [280, 281, 286, 290], "hour": [280, 281, 286, 290], "minut": [280, 281, 286, 290], "slot": [280, 281], "to_num": [280, 281], "format_d": [280, 281], "human": [280, 281], "readabl": [280, 281], "to_ulf": [280, 281, 319], "get_elaps": 280, "tp1": [280, 282], "tp2": [280, 282], "time_pair_from_tupl": 280, "time_pair_from_record": 280, "tuple_from_time_pair": 280, "record_from_time_pair": 280, "pypi": [291, 292, 293], "org": [291, 292, 293], "project": [291, 292, 293], "primarili": 292, "reimplement": 292, "bkane2": [292, 307], "choose_result_for": 292, "leav": [292, 293], "pattern1": [292, 293], "pattern2": [292, 293], "yield": [292, 293], "algorithm": [292, 293], "seek": [292, 293], "children": [292, 293, 297, 306], "sibl": [292, 293], "latenc": [292, 293, 297, 306], "long": [292, 293, 297, 306], "again": [292, 293, 297, 306], "skip": [292, 293], "permut": [292, 293], "clause1": [292, 293], "clausek": [292, 293], "search": [292, 293], "subtree1": [292, 293], "subtree2": [292, 293], "reassembli": [292, 293, 297, 306], "And": [292, 293], "anyth": [292, 293], "common": [292, 293], "shorthand": [292, 293], "template1": [292, 293], "template2": [292, 293], "randomli": [292, 293], "param": [292, 293], "therefor": [292, 293], "result1": [292, 293], "resultk": [292, 293], "rtype": [292, 293], "init_nod": 297, "readrul": 297, "templat": [297, 306, 307], "attachfeat": 297, "feat_xx": [297, 298], "x1": [297, 298], "x2": [297, 298], "xk": [297, 298], "isa": [297, 298], "xi": [297, 298], "among": [297, 298], "merge_feat": 297, "feats1": [297, 302], "feats2": [297, 302], "merge_tre": 297, "trees1": [297, 304], "trees2": [297, 304], "overrid": [297, 303, 304], "merge_pr": 297, "preds1": [297, 303], "preds2": [297, 303], "read_preds_fil": 297, "custom": 307, "fill": 307, "simplif": 307, "extens": [307, 323], "small": 307, "extent": 307, "lack": 307, "macro": 307, "variant": 307, "rework": 307, "lexic": [307, 310, 319, 321], "comma": 307, "zero": 307, "non_neg": 307, "except": [307, 312, 313], "polar": [307, 312, 313], "non_neg_mod": 307, "affirm_adv": 307, "affirmatori": [307, 308], "modal": 307, "lex_ulf": 307, "cat": [307, 310, 319, 321], "quote_to_list": 307, "split_sent": 307, "wordlist": [307, 316], "prefix_each": 307, "unscop": 318, "lexem": 319, "nltk": 319, "snowbal": 319, "stemmer": 319, "veri": [319, 321], "experiment": [319, 321], "merced": [319, 321], "stem_superl": 319, "sup_adv": [319, 320], "stem": [319, 320], "superl": [319, 320], "adject": [319, 320], "program": [319, 320], "shouldn": [319, 320], "doubl": [319, 320], "conson": [319, 320], "sup": [319, 320], "adj": [319, 320], "biggest": [319, 320], "smartest": [319, 320], "offici": 323, "framework": 323, "intellig": 323, "interleav": 323, "four": 323, "modular": 323, "agnost": 323, "representation": 323, "flexibl": 323, "notion": 323, "sidebar": 323, "brows": 323}, "objects": {"": [[0, 0, 0, "-", "eta"]], "eta": [[1, 0, 0, "-", "config"], [4, 0, 0, "-", "constants"], [46, 0, 0, "-", "core"], [107, 0, 0, "-", "discourse"], [117, 0, 0, "-", "embedding"], [123, 0, 0, "-", "lf"], [152, 0, 0, "-", "memory"], [155, 0, 0, "-", "plan"], [165, 0, 0, "-", "schema"], [171, 0, 0, "-", "transducers"], [200, 0, 0, "-", "util"]], "eta.config": [[2, 0, 0, "-", "sophie_offline"]], "eta.config.sophie_offline": [[3, 1, 1, "", "config"]], "eta.constants": [[5, 2, 1, "", "ANSWER"], [6, 2, 1, "", "ARTICULATE_TO"], [7, 2, 1, "", "ASK"], [8, 2, 1, "", "CERTAINTY_THRESHOLD"], [9, 2, 1, "", "CLOG_FILES"], [10, 2, 1, "", "COREFERENCE_MODE"], [11, 2, 1, "", "DEFAULT_IMPORTANCE"], [12, 2, 1, "", "DEFAULT_IMPORTANCE_THRESHOLD"], [13, 2, 1, "", "DEFAULT_START"], [14, 2, 1, "", "EMBEDDING_DEFAULT_API"], [15, 2, 1, "", "EMBEDDING_DEFAULT_MODEL"], [16, 2, 1, "", "EMOTIONS_LIST"], [17, 2, 1, "", "EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT"], [18, 2, 1, "", "FORGET_FROM_STM"], [19, 2, 1, "", "GPT_DEBUG_FILE"], [20, 2, 1, "", "HERE"], [21, 2, 1, "", "IO_CLOG_DIR"], [22, 2, 1, "", "IO_IN_DIR"], [23, 2, 1, "", "IO_OUT_DIR"], [24, 2, 1, "", "IO_PATH"], [25, 2, 1, "", "KEY_PATH"], [26, 2, 1, "", "LOG_PATH"], [27, 2, 1, "", "ME"], [28, 2, 1, "", "NOOP"], [29, 2, 1, "", "NOOP_GEN"], [30, 2, 1, "", "NOOP_YOU"], [31, 2, 1, "", "NOW"], [32, 2, 1, "", "PARAPHRASE_TO"], [33, 2, 1, "", "REACT_TO"], [34, 2, 1, "", "REASONING_DEPTH_LIMIT"], [35, 2, 1, "", "RECENCY_CUTOFF"], [36, 2, 1, "", "REPLY_TO"], [37, 2, 1, "", "RESPOND_TO"], [38, 2, 1, "", "SAY_BYE"], [39, 2, 1, "", "SAY_TO"], [40, 2, 1, "", "SLEEPTIME"], [41, 2, 1, "", "SPEECH_ACTS"], [42, 2, 1, "", "STORE_IN_STM"], [43, 2, 1, "", "SYMTAB_PATH"], [44, 2, 1, "", "TELIC_VERBS"], [45, 2, 1, "", "YOU"]], "eta.core": [[47, 0, 0, "-", "eta"], [52, 0, 0, "-", "execution"], [71, 0, 0, "-", "perception"], [76, 0, 0, "-", "planning"], [102, 0, 0, "-", "reasoning"]], "eta.core.eta": [[48, 3, 1, "", "DialogueState"], [49, 3, 1, "", "ProcessManager"], [50, 1, 1, "", "eta"], [51, 1, 1, "", "main"]], "eta.core.eta.DialogueState": [[48, 4, 1, "", "access_from_context"], [48, 4, 1, "", "add_all_to_buffer"], [48, 4, 1, "", "add_to_buffer"], [48, 4, 1, "", "add_to_buffer_if_empty"], [48, 4, 1, "", "add_to_context"], [48, 4, 1, "", "add_to_memory"], [48, 4, 1, "", "advance_plan"], [48, 4, 1, "", "apply_transducer"], [48, 4, 1, "", "bind"], [48, 4, 1, "", "buffer_empty"], [48, 5, 1, "", "buffers"], [48, 5, 1, "", "concept_aliases"], [48, 5, 1, "", "concept_sets"], [48, 5, 1, "", "config_agent"], [48, 5, 1, "", "config_user"], [48, 5, 1, "", "conversation_log"], [48, 4, 1, "", "cost"], [48, 4, 1, "", "do_continue"], [48, 5, 1, "", "embedder"], [48, 5, 1, "", "equality_sets"], [48, 4, 1, "", "eval_truth_value"], [48, 4, 1, "", "flush_context"], [48, 4, 1, "", "get_buffer"], [48, 4, 1, "", "get_conversation_log"], [48, 4, 1, "", "get_io_path"], [48, 4, 1, "", "get_log_path"], [48, 4, 1, "", "get_memory"], [48, 4, 1, "", "get_perception_servers"], [48, 4, 1, "", "get_plan"], [48, 4, 1, "", "get_quit_conversation"], [48, 4, 1, "", "get_specialist_servers"], [48, 4, 1, "", "get_step_failure_timer"], [48, 4, 1, "", "get_user_id"], [48, 4, 1, "", "has_plan"], [48, 5, 1, "", "id"], [48, 5, 1, "", "init_knowledge"], [48, 4, 1, "", "init_plan_from_schema"], [48, 4, 1, "", "instantiate_curr_step"], [48, 5, 1, "", "io_path"], [48, 4, 1, "", "is_schema"], [48, 4, 1, "", "log_turn"], [48, 5, 1, "", "me"], [48, 5, 1, "", "memory"], [48, 5, 1, "", "output_buffer"], [48, 5, 1, "", "plan"], [48, 4, 1, "", "pop_all_buffer"], [48, 4, 1, "", "pop_buffer"], [48, 4, 1, "", "print_schema_instances"], [48, 4, 1, "", "push_output_buffer"], [48, 5, 1, "", "quit_conversation"], [48, 5, 1, "", "reference_list"], [48, 4, 1, "", "remove_from_context"], [48, 4, 1, "", "replace_all_buffer"], [48, 4, 1, "", "replace_buffer"], [48, 4, 1, "", "reset_step_failure_timer"], [48, 4, 1, "", "retrieve_facts"], [48, 5, 1, "", "schema_instances"], [48, 5, 1, "", "schemas"], [48, 4, 1, "", "set_plan"], [48, 4, 1, "", "set_quit_conversation"], [48, 5, 1, "", "start_schema"], [48, 5, 1, "", "start_time"], [48, 5, 1, "", "step_failure_timer"], [48, 5, 1, "", "timegraph"], [48, 5, 1, "", "transducers"], [48, 4, 1, "", "unbind"], [48, 4, 1, "", "write_output_buffer"], [48, 5, 1, "", "you"]], "eta.core.eta.ProcessManager": [[49, 4, 1, "", "connect"], [49, 4, 1, "", "get_server"], [49, 4, 1, "", "join"], [49, 4, 1, "", "register"], [49, 4, 1, "", "start"]], "eta.core.execution": [[53, 1, 1, "", "execute_forget_from_STM"], [54, 1, 1, "", "execute_say_bye"], [55, 1, 1, "", "execute_say_to"], [56, 1, 1, "", "execute_store_in_STM"], [57, 1, 1, "", "execution_loop"], [58, 1, 1, "", "fail_curr_step"], [59, 1, 1, "", "forget_from_stm_step"], [60, 1, 1, "", "get_action"], [61, 1, 1, "", "inquire_truth_of_curr_step"], [62, 1, 1, "", "me_pred"], [63, 1, 1, "", "process_condition_step"], [64, 1, 1, "", "process_expected_step"], [65, 1, 1, "", "process_intended_step"], [66, 1, 1, "", "process_repetition_step"], [67, 1, 1, "", "say_bye_step"], [68, 1, 1, "", "say_to_step"], [69, 1, 1, "", "store_in_stm_step"], [70, 1, 1, "", "you_pred"]], "eta.core.perception": [[72, 1, 1, "", "observe"], [73, 1, 1, "", "perception_loop"], [74, 1, 1, "", "process_observations"], [75, 1, 1, "", "process_utterances"]], "eta.core.planning": [[77, 1, 1, "", "add_possible_actions_to_plan"], [78, 1, 1, "", "answer_step"], [79, 1, 1, "", "ask_step"], [80, 1, 1, "", "equivalent_speech_acts"], [81, 1, 1, "", "expand_condition_step"], [82, 1, 1, "", "expand_plan_steps"], [83, 1, 1, "", "expand_primitive_step"], [84, 1, 1, "", "expand_repetition_step"], [85, 1, 1, "", "merge_plan_steps"], [86, 1, 1, "", "paraphrase_step"], [87, 1, 1, "", "plan_answer"], [88, 1, 1, "", "plan_ask"], [89, 1, 1, "", "plan_paraphrase"], [90, 1, 1, "", "plan_react"], [91, 1, 1, "", "plan_respond"], [92, 1, 1, "", "planning_loop"], [93, 1, 1, "", "react_step"], [94, 1, 1, "", "relative_speech_act_step"], [95, 1, 1, "", "reorder_plan_steps"], [96, 1, 1, "", "reply_step"], [97, 1, 1, "", "respond_step"], [98, 1, 1, "", "say_to_step_from_utt"], [99, 1, 1, "", "say_to_step_from_utts"], [100, 1, 1, "", "schema_step"], [101, 1, 1, "", "split_schema_step"]], "eta.core.reasoning": [[103, 1, 1, "", "infer_bottom_up"], [104, 1, 1, "", "infer_top_down"], [105, 1, 1, "", "reasoning_loop"], [106, 1, 1, "", "suggest_possible_actions"]], "eta.discourse": [[108, 3, 1, "", "DialogueTurn"], [109, 3, 1, "", "Utterance"], [110, 1, 1, "", "compress"], [111, 1, 1, "", "decompress"], [112, 1, 1, "", "get_prior_turn"], [113, 1, 1, "", "get_prior_words"], [114, 1, 1, "", "parse_utt_str"], [115, 1, 1, "", "presubst"], [116, 1, 1, "", "swap_duals"]], "eta.discourse.DialogueTurn": [[108, 5, 1, "", "agent"], [108, 5, 1, "", "ep"], [108, 5, 1, "", "gists"], [108, 5, 1, "", "obligations"], [108, 5, 1, "", "pragmatics"], [108, 5, 1, "", "semantics"], [108, 5, 1, "", "utterance"]], "eta.discourse.Utterance": [[109, 5, 1, "", "affect"], [109, 5, 1, "", "agent"], [109, 5, 1, "", "words"]], "eta.embedding": [[118, 3, 1, "", "DummyEmbedder"], [119, 3, 1, "", "Embedder"], [120, 3, 1, "", "HFEmbedder"], [121, 3, 1, "", "STEmbedder"], [122, 1, 1, "", "sim"]], "eta.embedding.DummyEmbedder": [[118, 4, 1, "", "embed"], [118, 4, 1, "", "score"]], "eta.embedding.Embedder": [[119, 4, 1, "", "embed"], [119, 4, 1, "", "score"]], "eta.embedding.HFEmbedder": [[120, 4, 1, "", "embed"], [120, 5, 1, "", "header"], [120, 5, 1, "", "host"], [120, 5, 1, "", "model"], [120, 4, 1, "", "score"], [120, 5, 1, "", "url"]], "eta.embedding.STEmbedder": [[121, 4, 1, "", "embed"], [121, 5, 1, "", "model"], [121, 4, 1, "", "score"]], "eta.lf": [[124, 3, 1, "", "Condition"], [125, 3, 1, "", "Domain"], [126, 3, 1, "", "ELF"], [127, 3, 1, "", "Eventuality"], [128, 3, 1, "", "Individual"], [129, 2, 1, "", "KEYWORDS"], [130, 2, 1, "", "KEYWORDS_R"], [131, 3, 1, "", "LF"], [132, 3, 1, "", "Repetition"], [133, 3, 1, "", "ULF"], [134, 3, 1, "", "Var"], [135, 1, 1, "", "and_prop_p"], [136, 1, 1, "", "characterizes_prop_p"], [137, 1, 1, "", "equal_prop_p"], [138, 1, 1, "", "expectation_p"], [139, 1, 1, "", "extract_set"], [140, 1, 1, "", "from_lisp_dirs"], [141, 1, 1, "", "from_lisp_file"], [142, 1, 1, "", "is_set"], [143, 1, 1, "", "make_set"], [144, 1, 1, "", "not_prop_p"], [145, 1, 1, "", "or_prop_p"], [146, 1, 1, "", "parse_condition"], [147, 1, 1, "", "parse_eventuality"], [148, 1, 1, "", "parse_eventuality_list"], [149, 1, 1, "", "parse_repetition"], [150, 1, 1, "", "remove_type"], [151, 1, 1, "", "set_union"]], "eta.lf.Condition": [[124, 4, 1, "", "__eq__"], [124, 4, 1, "", "__hash__"], [124, 4, 1, "", "__str__"], [124, 4, 1, "", "bind"], [124, 5, 1, "", "bindings"], [124, 5, 1, "", "conditions"], [124, 5, 1, "", "elf"], [124, 4, 1, "", "embed"], [124, 5, 1, "", "embedding"], [124, 5, 1, "", "ep"], [124, 4, 1, "", "format"], [124, 4, 1, "", "get_elf"], [124, 4, 1, "", "get_ep"], [124, 4, 1, "", "get_nl"], [124, 4, 1, "", "get_ulf"], [124, 4, 1, "", "get_wff"], [124, 5, 1, "", "nl"], [124, 5, 1, "", "prob"], [124, 4, 1, "", "replacevar"], [124, 4, 1, "", "set_elf"], [124, 4, 1, "", "set_ep"], [124, 4, 1, "", "set_prob"], [124, 4, 1, "", "set_ulf"], [124, 5, 1, "", "ulf"], [124, 4, 1, "", "unbind"]], "eta.lf.Domain": [[125, 4, 1, "", "add"], [125, 4, 1, "", "add_aliases"], [125, 5, 1, "", "domain"]], "eta.lf.ELF": [[126, 4, 1, "", "__str__"], [126, 4, 1, "", "bind"], [126, 4, 1, "", "get_formula"], [126, 4, 1, "", "replacevar"], [126, 4, 1, "", "to_nl"], [126, 4, 1, "", "unbind"]], "eta.lf.Eventuality": [[127, 4, 1, "", "__eq__"], [127, 4, 1, "", "__hash__"], [127, 4, 1, "", "__str__"], [127, 4, 1, "", "bind"], [127, 5, 1, "", "bindings"], [127, 5, 1, "", "elf"], [127, 4, 1, "", "embed"], [127, 5, 1, "", "embedding"], [127, 5, 1, "", "ep"], [127, 4, 1, "", "format"], [127, 4, 1, "", "get_elf"], [127, 4, 1, "", "get_ep"], [127, 4, 1, "", "get_nl"], [127, 4, 1, "", "get_ulf"], [127, 4, 1, "", "get_wff"], [127, 5, 1, "", "nl"], [127, 5, 1, "", "prob"], [127, 4, 1, "", "replacevar"], [127, 4, 1, "", "set_elf"], [127, 4, 1, "", "set_ep"], [127, 4, 1, "", "set_prob"], [127, 4, 1, "", "set_ulf"], [127, 5, 1, "", "ulf"], [127, 4, 1, "", "unbind"]], "eta.lf.Individual": [[128, 4, 1, "", "__str__"], [128, 4, 1, "", "add_aliases"], [128, 5, 1, "", "aliases"], [128, 5, 1, "", "name"]], "eta.lf.LF": [[131, 4, 1, "", "__str__"], [131, 4, 1, "", "bind"], [131, 5, 1, "", "bindings"], [131, 5, 1, "", "formula"], [131, 4, 1, "", "get_formula"], [131, 4, 1, "", "replacevar"], [131, 4, 1, "", "to_nl"], [131, 4, 1, "", "unbind"]], "eta.lf.Repetition": [[132, 4, 1, "", "__eq__"], [132, 4, 1, "", "__hash__"], [132, 4, 1, "", "__str__"], [132, 4, 1, "", "bind"], [132, 5, 1, "", "bindings"], [132, 5, 1, "", "condition"], [132, 5, 1, "", "elf"], [132, 4, 1, "", "embed"], [132, 5, 1, "", "embedding"], [132, 5, 1, "", "ep"], [132, 5, 1, "", "eventualities"], [132, 4, 1, "", "format"], [132, 4, 1, "", "get_elf"], [132, 4, 1, "", "get_ep"], [132, 4, 1, "", "get_nl"], [132, 4, 1, "", "get_ulf"], [132, 4, 1, "", "get_wff"], [132, 5, 1, "", "nl"], [132, 5, 1, "", "prob"], [132, 4, 1, "", "replacevar"], [132, 4, 1, "", "set_elf"], [132, 4, 1, "", "set_ep"], [132, 4, 1, "", "set_prob"], [132, 4, 1, "", "set_ulf"], [132, 5, 1, "", "ulf"], [132, 4, 1, "", "unbind"]], "eta.lf.ULF": [[133, 4, 1, "", "__str__"], [133, 4, 1, "", "bind"], [133, 4, 1, "", "get_formula"], [133, 4, 1, "", "replacevar"], [133, 4, 1, "", "to_nl"], [133, 4, 1, "", "unbind"]], "eta.lf.Var": [[134, 4, 1, "", "__str__"], [134, 4, 1, "", "bind"], [134, 4, 1, "", "unbind"], [134, 5, 1, "", "val"], [134, 5, 1, "", "var"]], "eta.memory": [[153, 3, 1, "", "Memory"], [154, 3, 1, "", "MemoryStorage"]], "eta.memory.Memory": [[153, 4, 1, "", "__eq__"], [153, 4, 1, "", "__hash__"], [153, 4, 1, "", "__str__"], [153, 4, 1, "", "end"], [153, 5, 1, "", "end_time"], [153, 5, 1, "", "event"], [153, 4, 1, "", "get_ep"], [153, 4, 1, "", "get_time_wffs"], [153, 4, 1, "", "get_wff"], [153, 5, 1, "", "importance"], [153, 4, 1, "", "is_telic"], [153, 5, 1, "", "last_access"], [153, 5, 1, "", "start_time"], [153, 4, 1, "", "update_last_access"]], "eta.memory.MemoryStorage": [[154, 4, 1, "", "__str__"], [154, 4, 1, "", "access"], [154, 5, 1, "", "context"], [154, 4, 1, "", "does_characterize_episode"], [154, 5, 1, "", "embedder"], [154, 5, 1, "", "ep_ht"], [154, 4, 1, "", "flush_context"], [154, 4, 1, "", "forget"], [154, 4, 1, "", "get_characterizing_episode"], [154, 4, 1, "", "get_episode"], [154, 4, 1, "", "get_from_context"], [154, 4, 1, "", "get_matching"], [154, 5, 1, "", "importance_threshold"], [154, 4, 1, "", "instantiate"], [154, 5, 1, "", "memories"], [154, 4, 1, "", "remove"], [154, 4, 1, "", "remove_episode"], [154, 4, 1, "", "remove_episode_from_context"], [154, 4, 1, "", "remove_from_context"], [154, 4, 1, "", "remove_matching"], [154, 4, 1, "", "remove_matching_from_context"], [154, 4, 1, "", "retrieve"], [154, 4, 1, "", "store"], [154, 5, 1, "", "wff_ht"]], "eta.plan": [[156, 3, 1, "", "PlanNode"], [157, 3, 1, "", "PlanStep"], [158, 1, 1, "", "expand_plan_node"], [159, 1, 1, "", "get_first_plan_node"], [160, 1, 1, "", "get_last_plan_node"], [161, 1, 1, "", "init_plan_from_eventualities"], [162, 1, 1, "", "insert_before_plan_node"], [163, 1, 1, "", "merge_plan_nodes"], [164, 1, 1, "", "visualize_plan"]], "eta.plan.PlanNode": [[156, 4, 1, "", "__str__"], [156, 4, 1, "", "add_schema_to_subplan"], [156, 4, 1, "", "add_superstep_to_subplan"], [156, 4, 1, "", "add_supersteps"], [156, 4, 1, "", "bind"], [156, 4, 1, "", "get_all_roots"], [156, 4, 1, "", "get_schemas"], [156, 5, 1, "", "next"], [156, 5, 1, "", "prev"], [156, 4, 1, "", "serialize_from_roots"], [156, 4, 1, "", "serialize_subtree"], [156, 4, 1, "", "status"], [156, 5, 1, "", "step"], [156, 4, 1, "", "to_graph"], [156, 4, 1, "", "unbind"]], "eta.plan.PlanStep": [[157, 4, 1, "", "__str__"], [157, 4, 1, "", "add_superstep"], [157, 4, 1, "", "bind"], [157, 5, 1, "", "event"], [157, 4, 1, "", "format"], [157, 4, 1, "", "get_obligations"], [157, 5, 1, "", "id"], [157, 5, 1, "", "obligations"], [157, 5, 1, "", "schemas"], [157, 4, 1, "", "serialize"], [157, 5, 1, "", "substeps"], [157, 5, 1, "", "supersteps"], [157, 4, 1, "", "unbind"]], "eta.schema": [[166, 3, 1, "", "DialSchema"], [167, 3, 1, "", "EpiSchema"], [168, 3, 1, "", "ObjSchema"], [169, 3, 1, "", "Schema"], [170, 3, 1, "", "SchemaLibrary"]], "eta.schema.DialSchema": [[166, 4, 1, "", "__str__"], [166, 4, 1, "", "bind"], [166, 4, 1, "", "bind_args"], [166, 4, 1, "", "duplicate_variables"], [166, 4, 1, "", "embed"], [166, 4, 1, "", "format"], [166, 4, 1, "", "get_contents"], [166, 4, 1, "", "get_obligations_of_ep"], [166, 4, 1, "", "get_participants"], [166, 4, 1, "", "get_section"], [166, 4, 1, "", "get_section_eps"], [166, 4, 1, "", "get_section_wffs"], [166, 4, 1, "", "instantiate"], [166, 4, 1, "", "read_param_dict"], [166, 4, 1, "", "retrieve"], [166, 4, 1, "", "subst_mappings"], [166, 4, 1, "", "to_probability_dict"], [166, 4, 1, "", "unbind"]], "eta.schema.EpiSchema": [[167, 4, 1, "", "__str__"], [167, 4, 1, "", "bind"], [167, 4, 1, "", "bind_args"], [167, 4, 1, "", "duplicate_variables"], [167, 4, 1, "", "embed"], [167, 4, 1, "", "format"], [167, 4, 1, "", "get_contents"], [167, 4, 1, "", "get_participants"], [167, 4, 1, "", "get_section"], [167, 4, 1, "", "get_section_eps"], [167, 4, 1, "", "get_section_wffs"], [167, 4, 1, "", "instantiate"], [167, 4, 1, "", "read_param_dict"], [167, 4, 1, "", "retrieve"], [167, 4, 1, "", "subst_mappings"], [167, 4, 1, "", "to_probability_dict"], [167, 4, 1, "", "unbind"]], "eta.schema.ObjSchema": [[168, 4, 1, "", "__str__"], [168, 4, 1, "", "bind"], [168, 4, 1, "", "bind_args"], [168, 4, 1, "", "duplicate_variables"], [168, 4, 1, "", "embed"], [168, 4, 1, "", "format"], [168, 4, 1, "", "get_contents"], [168, 4, 1, "", "get_participants"], [168, 4, 1, "", "get_section"], [168, 4, 1, "", "get_section_eps"], [168, 4, 1, "", "get_section_wffs"], [168, 4, 1, "", "instantiate"], [168, 4, 1, "", "read_param_dict"], [168, 4, 1, "", "retrieve"], [168, 4, 1, "", "subst_mappings"], [168, 4, 1, "", "to_probability_dict"], [168, 4, 1, "", "unbind"]], "eta.schema.Schema": [[169, 4, 1, "", "__str__"], [169, 4, 1, "", "bind"], [169, 4, 1, "", "bind_args"], [169, 5, 1, "", "bindings"], [169, 5, 1, "", "contents"], [169, 4, 1, "", "duplicate_variables"], [169, 4, 1, "", "embed"], [169, 5, 1, "", "embedding"], [169, 4, 1, "", "format"], [169, 4, 1, "", "get_contents"], [169, 4, 1, "", "get_participants"], [169, 4, 1, "", "get_section"], [169, 4, 1, "", "get_section_eps"], [169, 4, 1, "", "get_section_wffs"], [169, 5, 1, "", "header"], [169, 5, 1, "", "id"], [169, 4, 1, "", "instantiate"], [169, 5, 1, "", "participants"], [169, 5, 1, "", "predicate"], [169, 4, 1, "", "read_param_dict"], [169, 4, 1, "", "retrieve"], [169, 5, 1, "", "sections"], [169, 4, 1, "", "subst_mappings"], [169, 4, 1, "", "to_probability_dict"], [169, 4, 1, "", "unbind"], [169, 5, 1, "", "vars"]], "eta.schema.SchemaLibrary": [[170, 4, 1, "", "__str__"], [170, 4, 1, "", "add"], [170, 4, 1, "", "create"], [170, 5, 1, "", "dial"], [170, 5, 1, "", "embedder"], [170, 5, 1, "", "epi"], [170, 4, 1, "", "from_lisp_dirs"], [170, 4, 1, "", "from_lisp_file"], [170, 4, 1, "", "get_schemas"], [170, 4, 1, "", "is_schema"], [170, 5, 1, "", "obj"], [170, 4, 1, "", "retrieve"], [170, 4, 1, "", "retrieve_knowledge"]], "eta.transducers": [[172, 0, 0, "-", "base"], [186, 0, 0, "-", "tt"]], "eta.transducers.base": [[173, 3, 1, "", "AffectTransducer"], [174, 3, 1, "", "AnswerTransducer"], [175, 3, 1, "", "AskTransducer"], [176, 3, 1, "", "GistTransducer"], [177, 3, 1, "", "ParaphraseTransducer"], [178, 3, 1, "", "PragmaticTransducer"], [179, 3, 1, "", "ReactionTransducer"], [180, 3, 1, "", "ReasonBottomUpTransducer"], [181, 3, 1, "", "ReasonTopDownTransducer"], [182, 3, 1, "", "ResponseTransducer"], [183, 3, 1, "", "SemanticTransducer"], [184, 3, 1, "", "SubplanTransducer"], [185, 3, 1, "", "Transducer"]], "eta.transducers.base.AffectTransducer": [[173, 4, 1, "", "__call__"], [173, 4, 1, "", "cost"]], "eta.transducers.base.AnswerTransducer": [[174, 4, 1, "", "__call__"], [174, 4, 1, "", "cost"]], "eta.transducers.base.AskTransducer": [[175, 4, 1, "", "__call__"], [175, 4, 1, "", "cost"]], "eta.transducers.base.GistTransducer": [[176, 4, 1, "", "__call__"], [176, 4, 1, "", "cost"]], "eta.transducers.base.ParaphraseTransducer": [[177, 4, 1, "", "__call__"], [177, 4, 1, "", "cost"]], "eta.transducers.base.PragmaticTransducer": [[178, 4, 1, "", "__call__"], [178, 4, 1, "", "cost"]], "eta.transducers.base.ReactionTransducer": [[179, 4, 1, "", "__call__"], [179, 4, 1, "", "cost"]], "eta.transducers.base.ReasonBottomUpTransducer": [[180, 4, 1, "", "__call__"], [180, 4, 1, "", "cost"]], "eta.transducers.base.ReasonTopDownTransducer": [[181, 4, 1, "", "__call__"], [181, 4, 1, "", "cost"]], "eta.transducers.base.ResponseTransducer": [[182, 4, 1, "", "__call__"], [182, 4, 1, "", "cost"]], "eta.transducers.base.SemanticTransducer": [[183, 4, 1, "", "__call__"], [183, 4, 1, "", "cost"]], "eta.transducers.base.SubplanTransducer": [[184, 4, 1, "", "__call__"], [184, 4, 1, "", "cost"]], "eta.transducers.base.Transducer": [[185, 4, 1, "", "__call__"], [185, 4, 1, "", "cost"]], "eta.transducers.tt": [[187, 3, 1, "", "TTAffectTransducer"], [188, 3, 1, "", "TTAnswerTransducer"], [189, 3, 1, "", "TTAskTransducer"], [190, 3, 1, "", "TTGistTransducer"], [191, 3, 1, "", "TTParaphraseTransducer"], [192, 3, 1, "", "TTPragmaticTransducer"], [193, 3, 1, "", "TTReactionTransducer"], [194, 3, 1, "", "TTReasonBottomUpTransducer"], [195, 3, 1, "", "TTReasonTopDownTransducer"], [196, 3, 1, "", "TTResponseTransducer"], [197, 3, 1, "", "TTSemanticTransducer"], [198, 3, 1, "", "TTSubplanTransducer"], [199, 3, 1, "", "TTTransducer"]], "eta.transducers.tt.TTAffectTransducer": [[187, 4, 1, "", "__call__"], [187, 4, 1, "", "cost"]], "eta.transducers.tt.TTAnswerTransducer": [[188, 4, 1, "", "__call__"], [188, 4, 1, "", "cost"]], "eta.transducers.tt.TTAskTransducer": [[189, 4, 1, "", "__call__"], [189, 4, 1, "", "cost"]], "eta.transducers.tt.TTGistTransducer": [[190, 4, 1, "", "__call__"], [190, 4, 1, "", "cost"]], "eta.transducers.tt.TTParaphraseTransducer": [[191, 4, 1, "", "__call__"], [191, 4, 1, "", "cost"]], "eta.transducers.tt.TTPragmaticTransducer": [[192, 4, 1, "", "__call__"], [192, 4, 1, "", "cost"]], "eta.transducers.tt.TTReactionTransducer": [[193, 4, 1, "", "__call__"], [193, 4, 1, "", "cost"]], "eta.transducers.tt.TTReasonBottomUpTransducer": [[194, 4, 1, "", "__call__"], [194, 4, 1, "", "cost"]], "eta.transducers.tt.TTReasonTopDownTransducer": [[195, 4, 1, "", "__call__"], [195, 4, 1, "", "cost"]], "eta.transducers.tt.TTResponseTransducer": [[196, 4, 1, "", "__call__"], [196, 4, 1, "", "cost"]], "eta.transducers.tt.TTSemanticTransducer": [[197, 4, 1, "", "__call__"], [197, 4, 1, "", "cost"]], "eta.transducers.tt.TTSubplanTransducer": [[198, 4, 1, "", "__call__"], [198, 4, 1, "", "cost"]], "eta.transducers.tt.TTTransducer": [[199, 4, 1, "", "__call__"], [199, 4, 1, "", "cost"], [199, 5, 1, "", "feats"], [199, 5, 1, "", "roots"], [199, 5, 1, "", "trees"]], "eta.util": [[201, 0, 0, "-", "buffer"], [211, 0, 0, "-", "file"], [224, 0, 0, "-", "general"], [268, 0, 0, "-", "sexpr"], [280, 0, 0, "-", "time"], [291, 0, 0, "-", "tt"], [318, 0, 0, "-", "ulf"]], "eta.util.buffer": [[202, 1, 1, "", "clear"], [203, 1, 1, "", "enqueue"], [204, 1, 1, "", "enqueue_ordered"], [205, 1, 1, "", "get_item"], [206, 1, 1, "", "is_empty"], [207, 1, 1, "", "iterate"], [208, 1, 1, "", "max_importance"], [209, 1, 1, "", "pop_all"], [210, 1, 1, "", "pop_item"]], "eta.util.file": [[212, 1, 1, "", "append_file"], [213, 1, 1, "", "clear"], [214, 1, 1, "", "ensure_dir_exists"], [215, 1, 1, "", "ensure_file_exists"], [216, 1, 1, "", "exists"], [217, 1, 1, "", "get_path"], [218, 1, 1, "", "load_json"], [219, 1, 1, "", "read_file"], [220, 1, 1, "", "read_lines"], [221, 1, 1, "", "remove"], [222, 1, 1, "", "write_file"], [223, 1, 1, "", "write_json"]], "eta.util.general": [[225, 1, 1, "", "append"], [226, 1, 1, "", "argmax"], [227, 1, 1, "", "atom"], [228, 1, 1, "", "certainty_to_period"], [229, 1, 1, "", "clear_symtab"], [230, 1, 1, "", "cons"], [231, 1, 1, "", "cons_dict"], [232, 1, 1, "", "dict_get"], [233, 1, 1, "", "dict_rem"], [234, 1, 1, "", "dict_rem_val"], [235, 1, 1, "", "dict_substall_keys"], [236, 1, 1, "", "dual_var"], [237, 1, 1, "", "duplicate_var"], [238, 1, 1, "", "episode_name"], [239, 1, 1, "", "episode_var"], [240, 1, 1, "", "escaped_symbol_p"], [241, 1, 1, "", "extract_category"], [242, 1, 1, "", "flatten"], [243, 1, 1, "", "gentemp"], [244, 1, 1, "", "get_keyword_contents"], [245, 1, 1, "", "has_elapsed_certainty_period"], [246, 1, 1, "", "indent"], [247, 1, 1, "", "isquote"], [248, 1, 1, "", "linsum"], [249, 1, 1, "", "listp"], [250, 1, 1, "", "normalize"], [251, 1, 1, "", "push"], [252, 1, 1, "", "random_element"], [253, 1, 1, "", "rec_find"], [254, 1, 1, "", "rec_find_if"], [255, 1, 1, "", "rec_remove"], [256, 1, 1, "", "rec_replace"], [257, 1, 1, "", "remove_duplicates"], [258, 1, 1, "", "remove_nil"], [259, 1, 1, "", "replaceall"], [260, 1, 1, "", "split_by_cond"], [261, 1, 1, "", "squash"], [262, 1, 1, "", "standardize"], [263, 1, 1, "", "subst"], [264, 1, 1, "", "substall"], [265, 1, 1, "", "symbolp"], [266, 1, 1, "", "to_key"], [267, 1, 1, "", "variablep"]], "eta.util.sexpr": [[269, 1, 1, "", "balanced_substr"], [270, 1, 1, "", "clean_lisp"], [271, 1, 1, "", "clean_s_expr"], [272, 1, 1, "", "compress_quotes"], [273, 1, 1, "", "convert_quotes"], [274, 1, 1, "", "list_to_s_expr"], [275, 1, 1, "", "list_to_str"], [276, 1, 1, "", "parse_s_expr"], [277, 1, 1, "", "read_lisp"], [278, 1, 1, "", "standardize_symbols"], [279, 1, 1, "", "write_lisp"]], "eta.util.time": [[281, 3, 1, "", "TimePoint"], [282, 1, 1, "", "get_elapsed"], [283, 1, 1, "", "now"], [284, 1, 1, "", "record_from_time_pair"], [285, 1, 1, "", "time_pair_from_record"], [286, 1, 1, "", "time_pair_from_tuple"], [287, 1, 1, "", "time_pair_p"], [288, 1, 1, "", "time_record_p"], [289, 1, 1, "", "time_tuple_p"], [290, 1, 1, "", "tuple_from_time_pair"]], "eta.util.time.TimePoint": [[281, 4, 1, "", "__str__"], [281, 4, 1, "", "format"], [281, 4, 1, "", "format_date"], [281, 5, 1, "", "lower"], [281, 4, 1, "", "to_num"], [281, 4, 1, "", "to_ulf"], [281, 4, 1, "", "update"], [281, 5, 1, "", "upper"]], "eta.util.tt": [[292, 0, 0, "-", "choice"], [297, 0, 0, "-", "parse"], [307, 0, 0, "-", "preds"]], "eta.util.tt.choice": [[293, 1, 1, "", "choose_result_for"], [294, 1, 1, "", "is_tree_root"], [295, 1, 1, "", "is_tree_root_clause"], [296, 1, 1, "", "is_tree_root_list"]], "eta.util.tt.parse": [[298, 1, 1, "", "attachfeat"], [299, 1, 1, "", "from_lisp_dirs"], [300, 1, 1, "", "from_lisp_file"], [301, 1, 1, "", "init_node"], [302, 1, 1, "", "merge_feats"], [303, 1, 1, "", "merge_preds"], [304, 1, 1, "", "merge_trees"], [305, 1, 1, "", "read_preds_file"], [306, 1, 1, "", "readrules"]], "eta.util.tt.preds": [[308, 1, 1, "", "affirm_adv"], [309, 1, 1, "", "comma"], [310, 1, 1, "", "lex_ulf"], [311, 1, 1, "", "modal"], [312, 1, 1, "", "non_neg"], [313, 1, 1, "", "non_neg_mod"], [314, 1, 1, "", "prefix_each"], [315, 1, 1, "", "quote_to_list"], [316, 1, 1, "", "split_sentences"], [317, 1, 1, "", "zero"]], "eta.util.ulf": [[319, 0, 0, "-", "lex"]], "eta.util.ulf.lex": [[320, 1, 1, "", "stem_superlative"], [321, 1, 1, "", "to_ulf"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"eta": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323], "config": [1, 2, 3], "sophie_offlin": [2, 3], "constant": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "answer": 5, "articulate_to": 6, "ask": 7, "certainty_threshold": 8, "clog_fil": 9, "coreference_mod": 10, "default_import": 11, "default_importance_threshold": 12, "default_start": 13, "embedding_default_api": 14, "embedding_default_model": 15, "emotions_list": 16, "expected_step_failure_period_coeffici": 17, "forget_from_stm": 18, "gpt_debug_fil": 19, "here": 20, "io_clog_dir": 21, "io_in_dir": 22, "io_out_dir": 23, "io_path": 24, "key_path": 25, "log_path": 26, "me": 27, "noop": 28, "noop_gen": 29, "noop_you": 30, "now": [31, 283], "paraphrase_to": 32, "react_to": 33, "reasoning_depth_limit": 34, "recency_cutoff": 35, "reply_to": 36, "respond_to": 37, "say_by": 38, "say_to": 39, "sleeptim": 40, "speech_act": 41, "store_in_stm": 42, "symtab_path": 43, "telic_verb": 44, "you": 45, "core": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "dialoguest": 48, "processmanag": 49, "main": 51, "execut": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "execute_forget_from_stm": 53, "execute_say_by": 54, "execute_say_to": 55, "execute_store_in_stm": 56, "execution_loop": 57, "fail_curr_step": 58, "forget_from_stm_step": 59, "get_act": 60, "inquire_truth_of_curr_step": 61, "me_pr": 62, "process_condition_step": 63, "process_expected_step": 64, "process_intended_step": 65, "process_repetition_step": 66, "say_bye_step": 67, "say_to_step": 68, "store_in_stm_step": 69, "you_pr": 70, "percept": [71, 72, 73, 74, 75], "observ": 72, "perception_loop": 73, "process_observ": 74, "process_utter": 75, "plan": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "add_possible_actions_to_plan": 77, "answer_step": 78, "ask_step": 79, "equivalent_speech_act": 80, "expand_condition_step": 81, "expand_plan_step": 82, "expand_primitive_step": 83, "expand_repetition_step": 84, "merge_plan_step": 85, "paraphrase_step": 86, "plan_answ": 87, "plan_ask": 88, "plan_paraphras": 89, "plan_react": 90, "plan_respond": 91, "planning_loop": 92, "react_step": 93, "relative_speech_act_step": 94, "reorder_plan_step": 95, "reply_step": 96, "respond_step": 97, "say_to_step_from_utt": [98, 99], "schema_step": 100, "split_schema_step": 101, "reason": [102, 103, 104, 105, 106], "infer_bottom_up": 103, "infer_top_down": 104, "reasoning_loop": 105, "suggest_possible_act": 106, "discours": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "dialogueturn": 108, "utter": 109, "compress": 110, "decompress": 111, "get_prior_turn": 112, "get_prior_word": 113, "parse_utt_str": 114, "presubst": 115, "swap_dual": 116, "embed": [117, 118, 119, 120, 121, 122], "dummyembedd": 118, "embedd": 119, "hfembedd": 120, "stembedd": 121, "sim": 122, "lf": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "condit": 124, "domain": 125, "elf": 126, "eventu": 127, "individu": 128, "keyword": 129, "keywords_r": 130, "repetit": 132, "ulf": [133, 318, 319, 320, 321], "var": 134, "and_prop_p": 135, "characterizes_prop_p": 136, "equal_prop_p": 137, "expectation_p": 138, "extract_set": 139, "from_lisp_dir": [140, 299], "from_lisp_fil": [141, 300], "is_set": 142, "make_set": 143, "not_prop_p": 144, "or_prop_p": 145, "parse_condit": 146, "parse_eventu": 147, "parse_eventuality_list": 148, "parse_repetit": 149, "remove_typ": 150, "set_union": 151, "memori": [152, 153, 154], "memorystorag": 154, "plannod": 156, "planstep": 157, "expand_plan_nod": 158, "get_first_plan_nod": 159, "get_last_plan_nod": 160, "init_plan_from_eventu": 161, "insert_before_plan_nod": 162, "merge_plan_nod": 163, "visualize_plan": 164, "schema": [165, 166, 167, 168, 169, 170], "section": [165, 166, 167, 168], "dialschema": 166, "epischema": 167, "objschema": 168, "schemalibrari": 170, "transduc": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "base": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "affecttransduc": 173, "answertransduc": 174, "asktransduc": 175, "gisttransduc": 176, "paraphrasetransduc": 177, "pragmatictransduc": 178, "reactiontransduc": 179, "reasonbottomuptransduc": 180, "reasontopdowntransduc": 181, "responsetransduc": 182, "semantictransduc": 183, "subplantransduc": 184, "tt": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "ttaffecttransduc": 187, "ttanswertransduc": 188, "ttasktransduc": 189, "ttgisttransduc": 190, "ttparaphrasetransduc": 191, "ttpragmatictransduc": 192, "ttreactiontransduc": 193, "ttreasonbottomuptransduc": 194, "ttreasontopdowntransduc": 195, "ttresponsetransduc": 196, "ttsemantictransduc": 197, "ttsubplantransduc": 198, "tttransduc": 199, "util": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "buffer": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "clear": [202, 213], "enqueu": 203, "enqueue_ord": 204, "get_item": 205, "is_empti": 206, "iter": 207, "max_import": 208, "pop_al": 209, "pop_item": 210, "file": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "append_fil": 212, "ensure_dir_exist": 214, "ensure_file_exist": 215, "exist": 216, "get_path": 217, "load_json": 218, "read_fil": 219, "read_lin": 220, "remov": 221, "write_fil": 222, "write_json": 223, "gener": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "append": 225, "argmax": 226, "atom": 227, "certainty_to_period": 228, "clear_symtab": 229, "con": 230, "cons_dict": 231, "dict_get": 232, "dict_rem": 233, "dict_rem_v": 234, "dict_substall_kei": 235, "dual_var": 236, "duplicate_var": 237, "episode_nam": 238, "episode_var": 239, "escaped_symbol_p": 240, "extract_categori": 241, "flatten": 242, "gentemp": 243, "get_keyword_cont": 244, "has_elapsed_certainty_period": 245, "indent": 246, "isquot": 247, "linsum": 248, "listp": 249, "normal": 250, "push": 251, "random_el": 252, "rec_find": 253, "rec_find_if": 254, "rec_remov": 255, "rec_replac": 256, "remove_dupl": 257, "remove_nil": 258, "replaceal": 259, "split_by_cond": 260, "squash": 261, "standard": 262, "subst": 263, "substal": 264, "symbolp": 265, "to_kei": 266, "variablep": 267, "sexpr": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279], "balanced_substr": 269, "clean_lisp": 270, "clean_s_expr": 271, "compress_quot": 272, "convert_quot": 273, "list_to_s_expr": 274, "list_to_str": 275, "parse_s_expr": 276, "read_lisp": 277, "standardize_symbol": 278, "write_lisp": 279, "time": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "timepoint": 281, "get_elaps": 282, "record_from_time_pair": 284, "time_pair_from_record": 285, "time_pair_from_tupl": 286, "time_pair_p": 287, "time_record_p": 288, "time_tuple_p": 289, "tuple_from_time_pair": 290, "choic": [292, 293, 294, 295, 296], "pattern": [292, 293], "node": [292, 293], "templat": [292, 293], "choose_result_for": 293, "is_tree_root": 294, "is_tree_root_claus": 295, "is_tree_root_list": 296, "pars": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "attachfeat": 298, "init_nod": 301, "merge_feat": 302, "merge_pr": 303, "merge_tre": 304, "read_preds_fil": 305, "readrul": 306, "pred": [307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "affirm_adv": 308, "comma": 309, "lex_ulf": 310, "modal": 311, "non_neg": 312, "non_neg_mod": 313, "prefix_each": 314, "quote_to_list": 315, "split_sent": 316, "zero": 317, "lex": [319, 320, 321], "stem_superl": 320, "to_ulf": 321, "dialogu": 323, "manag": 323, "document": 323}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"eta": [[0, "module-eta"]], "eta.config": [[1, "module-eta.config"]], "eta.config.sophie_offline": [[2, "module-eta.config.sophie_offline"]], "eta.config.sophie_offline.config": [[3, "eta-config-sophie-offline-config"]], "eta.constants": [[4, "module-eta.constants"]], "eta.constants.ANSWER": [[5, "eta-constants-answer"]], "eta.constants.ARTICULATE_TO": [[6, "eta-constants-articulate-to"]], "eta.constants.ASK": [[7, "eta-constants-ask"]], "eta.constants.CERTAINTY_THRESHOLD": [[8, "eta-constants-certainty-threshold"]], "eta.constants.CLOG_FILES": [[9, "eta-constants-clog-files"]], "eta.constants.COREFERENCE_MODE": [[10, "eta-constants-coreference-mode"]], "eta.constants.DEFAULT_IMPORTANCE": [[11, "eta-constants-default-importance"]], "eta.constants.DEFAULT_IMPORTANCE_THRESHOLD": [[12, "eta-constants-default-importance-threshold"]], "eta.constants.DEFAULT_START": [[13, "eta-constants-default-start"]], "eta.constants.EMBEDDING_DEFAULT_API": [[14, "eta-constants-embedding-default-api"]], "eta.constants.EMBEDDING_DEFAULT_MODEL": [[15, "eta-constants-embedding-default-model"]], "eta.constants.EMOTIONS_LIST": [[16, "eta-constants-emotions-list"]], "eta.constants.EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT": [[17, "eta-constants-expected-step-failure-period-coefficient"]], "eta.constants.FORGET_FROM_STM": [[18, "eta-constants-forget-from-stm"]], "eta.constants.GPT_DEBUG_FILE": [[19, "eta-constants-gpt-debug-file"]], "eta.constants.HERE": [[20, "eta-constants-here"]], "eta.constants.IO_CLOG_DIR": [[21, "eta-constants-io-clog-dir"]], "eta.constants.IO_IN_DIR": [[22, "eta-constants-io-in-dir"]], "eta.constants.IO_OUT_DIR": [[23, "eta-constants-io-out-dir"]], "eta.constants.IO_PATH": [[24, "eta-constants-io-path"]], "eta.constants.KEY_PATH": [[25, "eta-constants-key-path"]], "eta.constants.LOG_PATH": [[26, "eta-constants-log-path"]], "eta.constants.ME": [[27, "eta-constants-me"]], "eta.constants.NOOP": [[28, "eta-constants-noop"]], "eta.constants.NOOP_GEN": [[29, "eta-constants-noop-gen"]], "eta.constants.NOOP_YOU": [[30, "eta-constants-noop-you"]], "eta.constants.NOW": [[31, "eta-constants-now"]], "eta.constants.PARAPHRASE_TO": [[32, "eta-constants-paraphrase-to"]], "eta.constants.REACT_TO": [[33, "eta-constants-react-to"]], "eta.constants.REASONING_DEPTH_LIMIT": [[34, "eta-constants-reasoning-depth-limit"]], "eta.constants.RECENCY_CUTOFF": [[35, "eta-constants-recency-cutoff"]], "eta.constants.REPLY_TO": [[36, "eta-constants-reply-to"]], "eta.constants.RESPOND_TO": [[37, "eta-constants-respond-to"]], "eta.constants.SAY_BYE": [[38, "eta-constants-say-bye"]], "eta.constants.SAY_TO": [[39, "eta-constants-say-to"]], "eta.constants.SLEEPTIME": [[40, "eta-constants-sleeptime"]], "eta.constants.SPEECH_ACTS": [[41, "eta-constants-speech-acts"]], "eta.constants.STORE_IN_STM": [[42, "eta-constants-store-in-stm"]], "eta.constants.SYMTAB_PATH": [[43, "eta-constants-symtab-path"]], "eta.constants.TELIC_VERBS": [[44, "eta-constants-telic-verbs"]], "eta.constants.YOU": [[45, "eta-constants-you"]], "eta.core": [[46, "module-eta.core"]], "eta.core.eta": [[47, "module-eta.core.eta"]], "eta.core.eta.DialogueState": [[48, "eta-core-eta-dialoguestate"]], "eta.core.eta.ProcessManager": [[49, "eta-core-eta-processmanager"]], "eta.core.eta.eta": [[50, "eta-core-eta-eta"]], "eta.core.eta.main": [[51, "eta-core-eta-main"]], "eta.core.execution": [[52, "module-eta.core.execution"]], "eta.core.execution.execute_forget_from_STM": [[53, "eta-core-execution-execute-forget-from-stm"]], "eta.core.execution.execute_say_bye": [[54, "eta-core-execution-execute-say-bye"]], "eta.core.execution.execute_say_to": [[55, "eta-core-execution-execute-say-to"]], "eta.core.execution.execute_store_in_STM": [[56, "eta-core-execution-execute-store-in-stm"]], "eta.core.execution.execution_loop": [[57, "eta-core-execution-execution-loop"]], "eta.core.execution.fail_curr_step": [[58, "eta-core-execution-fail-curr-step"]], "eta.core.execution.forget_from_stm_step": [[59, "eta-core-execution-forget-from-stm-step"]], "eta.core.execution.get_action": [[60, "eta-core-execution-get-action"]], "eta.core.execution.inquire_truth_of_curr_step": [[61, "eta-core-execution-inquire-truth-of-curr-step"]], "eta.core.execution.me_pred": [[62, "eta-core-execution-me-pred"]], "eta.core.execution.process_condition_step": [[63, "eta-core-execution-process-condition-step"]], "eta.core.execution.process_expected_step": [[64, "eta-core-execution-process-expected-step"]], "eta.core.execution.process_intended_step": [[65, "eta-core-execution-process-intended-step"]], "eta.core.execution.process_repetition_step": [[66, "eta-core-execution-process-repetition-step"]], "eta.core.execution.say_bye_step": [[67, "eta-core-execution-say-bye-step"]], "eta.core.execution.say_to_step": [[68, "eta-core-execution-say-to-step"]], "eta.core.execution.store_in_stm_step": [[69, "eta-core-execution-store-in-stm-step"]], "eta.core.execution.you_pred": [[70, "eta-core-execution-you-pred"]], "eta.core.perception": [[71, "module-eta.core.perception"]], "eta.core.perception.observe": [[72, "eta-core-perception-observe"]], "eta.core.perception.perception_loop": [[73, "eta-core-perception-perception-loop"]], "eta.core.perception.process_observations": [[74, "eta-core-perception-process-observations"]], "eta.core.perception.process_utterances": [[75, "eta-core-perception-process-utterances"]], "eta.core.planning": [[76, "module-eta.core.planning"]], "eta.core.planning.add_possible_actions_to_plan": [[77, "eta-core-planning-add-possible-actions-to-plan"]], "eta.core.planning.answer_step": [[78, "eta-core-planning-answer-step"]], "eta.core.planning.ask_step": [[79, "eta-core-planning-ask-step"]], "eta.core.planning.equivalent_speech_acts": [[80, "eta-core-planning-equivalent-speech-acts"]], "eta.core.planning.expand_condition_step": [[81, "eta-core-planning-expand-condition-step"]], "eta.core.planning.expand_plan_steps": [[82, "eta-core-planning-expand-plan-steps"]], "eta.core.planning.expand_primitive_step": [[83, "eta-core-planning-expand-primitive-step"]], "eta.core.planning.expand_repetition_step": [[84, "eta-core-planning-expand-repetition-step"]], "eta.core.planning.merge_plan_steps": [[85, "eta-core-planning-merge-plan-steps"]], "eta.core.planning.paraphrase_step": [[86, "eta-core-planning-paraphrase-step"]], "eta.core.planning.plan_answer": [[87, "eta-core-planning-plan-answer"]], "eta.core.planning.plan_ask": [[88, "eta-core-planning-plan-ask"]], "eta.core.planning.plan_paraphrase": [[89, "eta-core-planning-plan-paraphrase"]], "eta.core.planning.plan_react": [[90, "eta-core-planning-plan-react"]], "eta.core.planning.plan_respond": [[91, "eta-core-planning-plan-respond"]], "eta.core.planning.planning_loop": [[92, "eta-core-planning-planning-loop"]], "eta.core.planning.react_step": [[93, "eta-core-planning-react-step"]], "eta.core.planning.relative_speech_act_step": [[94, "eta-core-planning-relative-speech-act-step"]], "eta.core.planning.reorder_plan_steps": [[95, "eta-core-planning-reorder-plan-steps"]], "eta.core.planning.reply_step": [[96, "eta-core-planning-reply-step"]], "eta.core.planning.respond_step": [[97, "eta-core-planning-respond-step"]], "eta.core.planning.say_to_step_from_utt": [[98, "eta-core-planning-say-to-step-from-utt"]], "eta.core.planning.say_to_step_from_utts": [[99, "eta-core-planning-say-to-step-from-utts"]], "eta.core.planning.schema_step": [[100, "eta-core-planning-schema-step"]], "eta.core.planning.split_schema_step": [[101, "eta-core-planning-split-schema-step"]], "eta.core.reasoning": [[102, "module-eta.core.reasoning"]], "eta.core.reasoning.infer_bottom_up": [[103, "eta-core-reasoning-infer-bottom-up"]], "eta.core.reasoning.infer_top_down": [[104, "eta-core-reasoning-infer-top-down"]], "eta.core.reasoning.reasoning_loop": [[105, "eta-core-reasoning-reasoning-loop"]], "eta.core.reasoning.suggest_possible_actions": [[106, "eta-core-reasoning-suggest-possible-actions"]], "eta.discourse": [[107, "module-eta.discourse"]], "eta.discourse.DialogueTurn": [[108, "eta-discourse-dialogueturn"]], "eta.discourse.Utterance": [[109, "eta-discourse-utterance"]], "eta.discourse.compress": [[110, "eta-discourse-compress"]], "eta.discourse.decompress": [[111, "eta-discourse-decompress"]], "eta.discourse.get_prior_turn": [[112, "eta-discourse-get-prior-turn"]], "eta.discourse.get_prior_words": [[113, "eta-discourse-get-prior-words"]], "eta.discourse.parse_utt_str": [[114, "eta-discourse-parse-utt-str"]], "eta.discourse.presubst": [[115, "eta-discourse-presubst"]], "eta.discourse.swap_duals": [[116, "eta-discourse-swap-duals"]], "eta.embedding": [[117, "module-eta.embedding"]], "eta.embedding.DummyEmbedder": [[118, "eta-embedding-dummyembedder"]], "eta.embedding.Embedder": [[119, "eta-embedding-embedder"]], "eta.embedding.HFEmbedder": [[120, "eta-embedding-hfembedder"]], "eta.embedding.STEmbedder": [[121, "eta-embedding-stembedder"]], "eta.embedding.sim": [[122, "eta-embedding-sim"]], "eta.lf": [[123, "module-eta.lf"]], "eta.lf.Condition": [[124, "eta-lf-condition"]], "eta.lf.Domain": [[125, "eta-lf-domain"]], "eta.lf.ELF": [[126, "eta-lf-elf"]], "eta.lf.Eventuality": [[127, "eta-lf-eventuality"]], "eta.lf.Individual": [[128, "eta-lf-individual"]], "eta.lf.KEYWORDS": [[129, "eta-lf-keywords"]], "eta.lf.KEYWORDS_R": [[130, "eta-lf-keywords-r"]], "eta.lf.LF": [[131, "eta-lf-lf"]], "eta.lf.Repetition": [[132, "eta-lf-repetition"]], "eta.lf.ULF": [[133, "eta-lf-ulf"]], "eta.lf.Var": [[134, "eta-lf-var"]], "eta.lf.and_prop_p": [[135, "eta-lf-and-prop-p"]], "eta.lf.characterizes_prop_p": [[136, "eta-lf-characterizes-prop-p"]], "eta.lf.equal_prop_p": [[137, "eta-lf-equal-prop-p"]], "eta.lf.expectation_p": [[138, "eta-lf-expectation-p"]], "eta.lf.extract_set": [[139, "eta-lf-extract-set"]], "eta.lf.from_lisp_dirs": [[140, "eta-lf-from-lisp-dirs"]], "eta.lf.from_lisp_file": [[141, "eta-lf-from-lisp-file"]], "eta.lf.is_set": [[142, "eta-lf-is-set"]], "eta.lf.make_set": [[143, "eta-lf-make-set"]], "eta.lf.not_prop_p": [[144, "eta-lf-not-prop-p"]], "eta.lf.or_prop_p": [[145, "eta-lf-or-prop-p"]], "eta.lf.parse_condition": [[146, "eta-lf-parse-condition"]], "eta.lf.parse_eventuality": [[147, "eta-lf-parse-eventuality"]], "eta.lf.parse_eventuality_list": [[148, "eta-lf-parse-eventuality-list"]], "eta.lf.parse_repetition": [[149, "eta-lf-parse-repetition"]], "eta.lf.remove_type": [[150, "eta-lf-remove-type"]], "eta.lf.set_union": [[151, "eta-lf-set-union"]], "eta.memory": [[152, "module-eta.memory"]], "eta.memory.Memory": [[153, "eta-memory-memory"]], "eta.memory.MemoryStorage": [[154, "eta-memory-memorystorage"]], "eta.plan": [[155, "module-eta.plan"]], "eta.plan.PlanNode": [[156, "eta-plan-plannode"]], "eta.plan.PlanStep": [[157, "eta-plan-planstep"]], "eta.plan.expand_plan_node": [[158, "eta-plan-expand-plan-node"]], "eta.plan.get_first_plan_node": [[159, "eta-plan-get-first-plan-node"]], "eta.plan.get_last_plan_node": [[160, "eta-plan-get-last-plan-node"]], "eta.plan.init_plan_from_eventualities": [[161, "eta-plan-init-plan-from-eventualities"]], "eta.plan.insert_before_plan_node": [[162, "eta-plan-insert-before-plan-node"]], "eta.plan.merge_plan_nodes": [[163, "eta-plan-merge-plan-nodes"]], "eta.plan.visualize_plan": [[164, "eta-plan-visualize-plan"]], "eta.schema": [[165, "module-eta.schema"]], "Sections": [[165, "sections"], [165, "id1"], [165, "id2"], [166, "sections"], [167, "sections"], [168, "sections"]], "eta.schema.DialSchema": [[166, "eta-schema-dialschema"]], "eta.schema.EpiSchema": [[167, "eta-schema-epischema"]], "eta.schema.ObjSchema": [[168, "eta-schema-objschema"]], "eta.schema.Schema": [[169, "eta-schema-schema"]], "eta.schema.SchemaLibrary": [[170, "eta-schema-schemalibrary"]], "eta.transducers": [[171, "module-eta.transducers"]], "eta.transducers.base": [[172, "module-eta.transducers.base"]], "eta.transducers.base.AffectTransducer": [[173, "eta-transducers-base-affecttransducer"]], "eta.transducers.base.AnswerTransducer": [[174, "eta-transducers-base-answertransducer"]], "eta.transducers.base.AskTransducer": [[175, "eta-transducers-base-asktransducer"]], "eta.transducers.base.GistTransducer": [[176, "eta-transducers-base-gisttransducer"]], "eta.transducers.base.ParaphraseTransducer": [[177, "eta-transducers-base-paraphrasetransducer"]], "eta.transducers.base.PragmaticTransducer": [[178, "eta-transducers-base-pragmatictransducer"]], "eta.transducers.base.ReactionTransducer": [[179, "eta-transducers-base-reactiontransducer"]], "eta.transducers.base.ReasonBottomUpTransducer": [[180, "eta-transducers-base-reasonbottomuptransducer"]], "eta.transducers.base.ReasonTopDownTransducer": [[181, "eta-transducers-base-reasontopdowntransducer"]], "eta.transducers.base.ResponseTransducer": [[182, "eta-transducers-base-responsetransducer"]], "eta.transducers.base.SemanticTransducer": [[183, "eta-transducers-base-semantictransducer"]], "eta.transducers.base.SubplanTransducer": [[184, "eta-transducers-base-subplantransducer"]], "eta.transducers.base.Transducer": [[185, "eta-transducers-base-transducer"]], "eta.transducers.tt": [[186, "module-eta.transducers.tt"]], "eta.transducers.tt.TTAffectTransducer": [[187, "eta-transducers-tt-ttaffecttransducer"]], "eta.transducers.tt.TTAnswerTransducer": [[188, "eta-transducers-tt-ttanswertransducer"]], "eta.transducers.tt.TTAskTransducer": [[189, "eta-transducers-tt-ttasktransducer"]], "eta.transducers.tt.TTGistTransducer": [[190, "eta-transducers-tt-ttgisttransducer"]], "eta.transducers.tt.TTParaphraseTransducer": [[191, "eta-transducers-tt-ttparaphrasetransducer"]], "eta.transducers.tt.TTPragmaticTransducer": [[192, "eta-transducers-tt-ttpragmatictransducer"]], "eta.transducers.tt.TTReactionTransducer": [[193, "eta-transducers-tt-ttreactiontransducer"]], "eta.transducers.tt.TTReasonBottomUpTransducer": [[194, "eta-transducers-tt-ttreasonbottomuptransducer"]], "eta.transducers.tt.TTReasonTopDownTransducer": [[195, "eta-transducers-tt-ttreasontopdowntransducer"]], "eta.transducers.tt.TTResponseTransducer": [[196, "eta-transducers-tt-ttresponsetransducer"]], "eta.transducers.tt.TTSemanticTransducer": [[197, "eta-transducers-tt-ttsemantictransducer"]], "eta.transducers.tt.TTSubplanTransducer": [[198, "eta-transducers-tt-ttsubplantransducer"]], "eta.transducers.tt.TTTransducer": [[199, "eta-transducers-tt-tttransducer"]], "eta.util": [[200, "module-eta.util"]], "eta.util.buffer": [[201, "module-eta.util.buffer"]], "eta.util.buffer.clear": [[202, "eta-util-buffer-clear"]], "eta.util.buffer.enqueue": [[203, "eta-util-buffer-enqueue"]], "eta.util.buffer.enqueue_ordered": [[204, "eta-util-buffer-enqueue-ordered"]], "eta.util.buffer.get_item": [[205, "eta-util-buffer-get-item"]], "eta.util.buffer.is_empty": [[206, "eta-util-buffer-is-empty"]], "eta.util.buffer.iterate": [[207, "eta-util-buffer-iterate"]], "eta.util.buffer.max_importance": [[208, "eta-util-buffer-max-importance"]], "eta.util.buffer.pop_all": [[209, "eta-util-buffer-pop-all"]], "eta.util.buffer.pop_item": [[210, "eta-util-buffer-pop-item"]], "eta.util.file": [[211, "module-eta.util.file"]], "eta.util.file.append_file": [[212, "eta-util-file-append-file"]], "eta.util.file.clear": [[213, "eta-util-file-clear"]], "eta.util.file.ensure_dir_exists": [[214, "eta-util-file-ensure-dir-exists"]], "eta.util.file.ensure_file_exists": [[215, "eta-util-file-ensure-file-exists"]], "eta.util.file.exists": [[216, "eta-util-file-exists"]], "eta.util.file.get_path": [[217, "eta-util-file-get-path"]], "eta.util.file.load_json": [[218, "eta-util-file-load-json"]], "eta.util.file.read_file": [[219, "eta-util-file-read-file"]], "eta.util.file.read_lines": [[220, "eta-util-file-read-lines"]], "eta.util.file.remove": [[221, "eta-util-file-remove"]], "eta.util.file.write_file": [[222, "eta-util-file-write-file"]], "eta.util.file.write_json": [[223, "eta-util-file-write-json"]], "eta.util.general": [[224, "module-eta.util.general"]], "eta.util.general.append": [[225, "eta-util-general-append"]], "eta.util.general.argmax": [[226, "eta-util-general-argmax"]], "eta.util.general.atom": [[227, "eta-util-general-atom"]], "eta.util.general.certainty_to_period": [[228, "eta-util-general-certainty-to-period"]], "eta.util.general.clear_symtab": [[229, "eta-util-general-clear-symtab"]], "eta.util.general.cons": [[230, "eta-util-general-cons"]], "eta.util.general.cons_dict": [[231, "eta-util-general-cons-dict"]], "eta.util.general.dict_get": [[232, "eta-util-general-dict-get"]], "eta.util.general.dict_rem": [[233, "eta-util-general-dict-rem"]], "eta.util.general.dict_rem_val": [[234, "eta-util-general-dict-rem-val"]], "eta.util.general.dict_substall_keys": [[235, "eta-util-general-dict-substall-keys"]], "eta.util.general.dual_var": [[236, "eta-util-general-dual-var"]], "eta.util.general.duplicate_var": [[237, "eta-util-general-duplicate-var"]], "eta.util.general.episode_name": [[238, "eta-util-general-episode-name"]], "eta.util.general.episode_var": [[239, "eta-util-general-episode-var"]], "eta.util.general.escaped_symbol_p": [[240, "eta-util-general-escaped-symbol-p"]], "eta.util.general.extract_category": [[241, "eta-util-general-extract-category"]], "eta.util.general.flatten": [[242, "eta-util-general-flatten"]], "eta.util.general.gentemp": [[243, "eta-util-general-gentemp"]], "eta.util.general.get_keyword_contents": [[244, "eta-util-general-get-keyword-contents"]], "eta.util.general.has_elapsed_certainty_period": [[245, "eta-util-general-has-elapsed-certainty-period"]], "eta.util.general.indent": [[246, "eta-util-general-indent"]], "eta.util.general.isquote": [[247, "eta-util-general-isquote"]], "eta.util.general.linsum": [[248, "eta-util-general-linsum"]], "eta.util.general.listp": [[249, "eta-util-general-listp"]], "eta.util.general.normalize": [[250, "eta-util-general-normalize"]], "eta.util.general.push": [[251, "eta-util-general-push"]], "eta.util.general.random_element": [[252, "eta-util-general-random-element"]], "eta.util.general.rec_find": [[253, "eta-util-general-rec-find"]], "eta.util.general.rec_find_if": [[254, "eta-util-general-rec-find-if"]], "eta.util.general.rec_remove": [[255, "eta-util-general-rec-remove"]], "eta.util.general.rec_replace": [[256, "eta-util-general-rec-replace"]], "eta.util.general.remove_duplicates": [[257, "eta-util-general-remove-duplicates"]], "eta.util.general.remove_nil": [[258, "eta-util-general-remove-nil"]], "eta.util.general.replaceall": [[259, "eta-util-general-replaceall"]], "eta.util.general.split_by_cond": [[260, "eta-util-general-split-by-cond"]], "eta.util.general.squash": [[261, "eta-util-general-squash"]], "eta.util.general.standardize": [[262, "eta-util-general-standardize"]], "eta.util.general.subst": [[263, "eta-util-general-subst"]], "eta.util.general.substall": [[264, "eta-util-general-substall"]], "eta.util.general.symbolp": [[265, "eta-util-general-symbolp"]], "eta.util.general.to_key": [[266, "eta-util-general-to-key"]], "eta.util.general.variablep": [[267, "eta-util-general-variablep"]], "eta.util.sexpr": [[268, "module-eta.util.sexpr"]], "eta.util.sexpr.balanced_substr": [[269, "eta-util-sexpr-balanced-substr"]], "eta.util.sexpr.clean_lisp": [[270, "eta-util-sexpr-clean-lisp"]], "eta.util.sexpr.clean_s_expr": [[271, "eta-util-sexpr-clean-s-expr"]], "eta.util.sexpr.compress_quotes": [[272, "eta-util-sexpr-compress-quotes"]], "eta.util.sexpr.convert_quotes": [[273, "eta-util-sexpr-convert-quotes"]], "eta.util.sexpr.list_to_s_expr": [[274, "eta-util-sexpr-list-to-s-expr"]], "eta.util.sexpr.list_to_str": [[275, "eta-util-sexpr-list-to-str"]], "eta.util.sexpr.parse_s_expr": [[276, "eta-util-sexpr-parse-s-expr"]], "eta.util.sexpr.read_lisp": [[277, "eta-util-sexpr-read-lisp"]], "eta.util.sexpr.standardize_symbols": [[278, "eta-util-sexpr-standardize-symbols"]], "eta.util.sexpr.write_lisp": [[279, "eta-util-sexpr-write-lisp"]], "eta.util.time": [[280, "module-eta.util.time"]], "eta.util.time.TimePoint": [[281, "eta-util-time-timepoint"]], "eta.util.time.get_elapsed": [[282, "eta-util-time-get-elapsed"]], "eta.util.time.now": [[283, "eta-util-time-now"]], "eta.util.time.record_from_time_pair": [[284, "eta-util-time-record-from-time-pair"]], "eta.util.time.time_pair_from_record": [[285, "eta-util-time-time-pair-from-record"]], "eta.util.time.time_pair_from_tuple": [[286, "eta-util-time-time-pair-from-tuple"]], "eta.util.time.time_pair_p": [[287, "eta-util-time-time-pair-p"]], "eta.util.time.time_record_p": [[288, "eta-util-time-time-record-p"]], "eta.util.time.time_tuple_p": [[289, "eta-util-time-time-tuple-p"]], "eta.util.time.tuple_from_time_pair": [[290, "eta-util-time-tuple-from-time-pair"]], "eta.util.tt": [[291, "module-eta.util.tt"]], "eta.util.tt.choice": [[292, "module-eta.util.tt.choice"]], "Pattern nodes": [[292, "pattern-nodes"], [293, "pattern-nodes"]], "Template nodes": [[292, "template-nodes"], [293, "template-nodes"]], "eta.util.tt.choice.choose_result_for": [[293, "eta-util-tt-choice-choose-result-for"]], "eta.util.tt.choice.is_tree_root": [[294, "eta-util-tt-choice-is-tree-root"]], "eta.util.tt.choice.is_tree_root_clause": [[295, "eta-util-tt-choice-is-tree-root-clause"]], "eta.util.tt.choice.is_tree_root_list": [[296, "eta-util-tt-choice-is-tree-root-list"]], "eta.util.tt.parse": [[297, "module-eta.util.tt.parse"]], "eta.util.tt.parse.attachfeat": [[298, "eta-util-tt-parse-attachfeat"]], "eta.util.tt.parse.from_lisp_dirs": [[299, "eta-util-tt-parse-from-lisp-dirs"]], "eta.util.tt.parse.from_lisp_file": [[300, "eta-util-tt-parse-from-lisp-file"]], "eta.util.tt.parse.init_node": [[301, "eta-util-tt-parse-init-node"]], "eta.util.tt.parse.merge_feats": [[302, "eta-util-tt-parse-merge-feats"]], "eta.util.tt.parse.merge_preds": [[303, "eta-util-tt-parse-merge-preds"]], "eta.util.tt.parse.merge_trees": [[304, "eta-util-tt-parse-merge-trees"]], "eta.util.tt.parse.read_preds_file": [[305, "eta-util-tt-parse-read-preds-file"]], "eta.util.tt.parse.readrules": [[306, "eta-util-tt-parse-readrules"]], "eta.util.tt.preds": [[307, "module-eta.util.tt.preds"]], "eta.util.tt.preds.affirm_adv": [[308, "eta-util-tt-preds-affirm-adv"]], "eta.util.tt.preds.comma": [[309, "eta-util-tt-preds-comma"]], "eta.util.tt.preds.lex_ulf": [[310, "eta-util-tt-preds-lex-ulf"]], "eta.util.tt.preds.modal": [[311, "eta-util-tt-preds-modal"]], "eta.util.tt.preds.non_neg": [[312, "eta-util-tt-preds-non-neg"]], "eta.util.tt.preds.non_neg_mod": [[313, "eta-util-tt-preds-non-neg-mod"]], "eta.util.tt.preds.prefix_each": [[314, "eta-util-tt-preds-prefix-each"]], "eta.util.tt.preds.quote_to_list": [[315, "eta-util-tt-preds-quote-to-list"]], "eta.util.tt.preds.split_sentences": [[316, "eta-util-tt-preds-split-sentences"]], "eta.util.tt.preds.zero": [[317, "eta-util-tt-preds-zero"]], "eta.util.ulf": [[318, "module-eta.util.ulf"]], "eta.util.ulf.lex": [[319, "module-eta.util.ulf.lex"]], "eta.util.ulf.lex.stem_superlative": [[320, "eta-util-ulf-lex-stem-superlative"]], "eta.util.ulf.lex.to_ulf": [[321, "eta-util-ulf-lex-to-ulf"]], "Eta Dialogue Manager Documentation": [[323, "eta-dialogue-manager-documentation"]]}, "indexentries": {"eta": [[0, "module-eta"]], "module": [[0, "module-eta"], [1, "module-eta.config"], [2, "module-eta.config.sophie_offline"], [4, "module-eta.constants"], [46, "module-eta.core"], [47, "module-eta.core.eta"], [52, "module-eta.core.execution"], [71, "module-eta.core.perception"], [76, "module-eta.core.planning"], [102, "module-eta.core.reasoning"], [107, "module-eta.discourse"], [117, "module-eta.embedding"], [123, "module-eta.lf"], [152, "module-eta.memory"], [155, "module-eta.plan"], [165, "module-eta.schema"], [171, "module-eta.transducers"], [172, "module-eta.transducers.base"], [186, "module-eta.transducers.tt"], [200, "module-eta.util"], [201, "module-eta.util.buffer"], [211, "module-eta.util.file"], [224, "module-eta.util.general"], [268, "module-eta.util.sexpr"], [280, "module-eta.util.time"], [291, "module-eta.util.tt"], [292, "module-eta.util.tt.choice"], [297, "module-eta.util.tt.parse"], [307, "module-eta.util.tt.preds"], [318, "module-eta.util.ulf"], [319, "module-eta.util.ulf.lex"]], "eta.config": [[1, "module-eta.config"]], "eta.config.sophie_offline": [[2, "module-eta.config.sophie_offline"]], "config() (in module eta.config.sophie_offline)": [[3, "eta.config.sophie_offline.config"]], "answer (in module eta.constants)": [[4, "eta.constants.ANSWER"], [5, "eta.constants.ANSWER"]], "articulate_to (in module eta.constants)": [[4, "eta.constants.ARTICULATE_TO"], [6, "eta.constants.ARTICULATE_TO"]], "ask (in module eta.constants)": [[4, "eta.constants.ASK"], [7, "eta.constants.ASK"]], "certainty_threshold (in module eta.constants)": [[4, "eta.constants.CERTAINTY_THRESHOLD"], [8, "eta.constants.CERTAINTY_THRESHOLD"]], "clog_files (in module eta.constants)": [[4, "eta.constants.CLOG_FILES"], [9, "eta.constants.CLOG_FILES"]], "coreference_mode (in module eta.constants)": [[4, "eta.constants.COREFERENCE_MODE"], [10, "eta.constants.COREFERENCE_MODE"]], "default_importance (in module eta.constants)": [[4, "eta.constants.DEFAULT_IMPORTANCE"], [11, "eta.constants.DEFAULT_IMPORTANCE"]], "default_importance_threshold (in module eta.constants)": [[4, "eta.constants.DEFAULT_IMPORTANCE_THRESHOLD"], [12, "eta.constants.DEFAULT_IMPORTANCE_THRESHOLD"]], "default_start (in module eta.constants)": [[4, "eta.constants.DEFAULT_START"], [13, "eta.constants.DEFAULT_START"]], "embedding_default_api (in module eta.constants)": [[4, "eta.constants.EMBEDDING_DEFAULT_API"], [14, "eta.constants.EMBEDDING_DEFAULT_API"]], "embedding_default_model (in module eta.constants)": [[4, "eta.constants.EMBEDDING_DEFAULT_MODEL"], [15, "eta.constants.EMBEDDING_DEFAULT_MODEL"]], "emotions_list (in module eta.constants)": [[4, "eta.constants.EMOTIONS_LIST"], [16, "eta.constants.EMOTIONS_LIST"]], "expected_step_failure_period_coefficient (in module eta.constants)": [[4, "eta.constants.EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT"], [17, "eta.constants.EXPECTED_STEP_FAILURE_PERIOD_COEFFICIENT"]], "forget_from_stm (in module eta.constants)": [[4, "eta.constants.FORGET_FROM_STM"], [18, "eta.constants.FORGET_FROM_STM"]], "gpt_debug_file (in module eta.constants)": [[4, "eta.constants.GPT_DEBUG_FILE"], [19, "eta.constants.GPT_DEBUG_FILE"]], "here (in module eta.constants)": [[4, "eta.constants.HERE"], [20, "eta.constants.HERE"]], "io_clog_dir (in module eta.constants)": [[4, "eta.constants.IO_CLOG_DIR"], [21, "eta.constants.IO_CLOG_DIR"]], "io_in_dir (in module eta.constants)": [[4, "eta.constants.IO_IN_DIR"], [22, "eta.constants.IO_IN_DIR"]], "io_out_dir (in module eta.constants)": [[4, "eta.constants.IO_OUT_DIR"], [23, "eta.constants.IO_OUT_DIR"]], "io_path (in module eta.constants)": [[4, "eta.constants.IO_PATH"], [24, "eta.constants.IO_PATH"]], "key_path (in module eta.constants)": [[4, "eta.constants.KEY_PATH"], [25, "eta.constants.KEY_PATH"]], "log_path (in module eta.constants)": [[4, "eta.constants.LOG_PATH"], [26, "eta.constants.LOG_PATH"]], "me (in module eta.constants)": [[4, "eta.constants.ME"], [27, "eta.constants.ME"]], "noop (in module eta.constants)": [[4, "eta.constants.NOOP"], [28, "eta.constants.NOOP"]], "noop_gen (in module eta.constants)": [[4, "eta.constants.NOOP_GEN"], [29, "eta.constants.NOOP_GEN"]], "noop_you (in module eta.constants)": [[4, "eta.constants.NOOP_YOU"], [30, "eta.constants.NOOP_YOU"]], "now (in module eta.constants)": [[4, "eta.constants.NOW"], [31, "eta.constants.NOW"]], "paraphrase_to (in module eta.constants)": [[4, "eta.constants.PARAPHRASE_TO"], [32, "eta.constants.PARAPHRASE_TO"]], "react_to (in module eta.constants)": [[4, "eta.constants.REACT_TO"], [33, "eta.constants.REACT_TO"]], "reasoning_depth_limit (in module eta.constants)": [[4, "eta.constants.REASONING_DEPTH_LIMIT"], [34, "eta.constants.REASONING_DEPTH_LIMIT"]], "recency_cutoff (in module eta.constants)": [[4, "eta.constants.RECENCY_CUTOFF"], [35, "eta.constants.RECENCY_CUTOFF"]], "reply_to (in module eta.constants)": [[4, "eta.constants.REPLY_TO"], [36, "eta.constants.REPLY_TO"]], "respond_to (in module eta.constants)": [[4, "eta.constants.RESPOND_TO"], [37, "eta.constants.RESPOND_TO"]], "say_bye (in module eta.constants)": [[4, "eta.constants.SAY_BYE"], [38, "eta.constants.SAY_BYE"]], "say_to (in module eta.constants)": [[4, "eta.constants.SAY_TO"], [39, "eta.constants.SAY_TO"]], "sleeptime (in module eta.constants)": [[4, "eta.constants.SLEEPTIME"], [40, "eta.constants.SLEEPTIME"]], "speech_acts (in module eta.constants)": [[4, "eta.constants.SPEECH_ACTS"], [41, "eta.constants.SPEECH_ACTS"]], "store_in_stm (in module eta.constants)": [[4, "eta.constants.STORE_IN_STM"], [42, "eta.constants.STORE_IN_STM"]], "symtab_path (in module eta.constants)": [[4, "eta.constants.SYMTAB_PATH"], [43, "eta.constants.SYMTAB_PATH"]], "telic_verbs (in module eta.constants)": [[4, "eta.constants.TELIC_VERBS"], [44, "eta.constants.TELIC_VERBS"]], "you (in module eta.constants)": [[4, "eta.constants.YOU"], [45, "eta.constants.YOU"]], "eta.constants": [[4, "module-eta.constants"]], "eta.core": [[46, "module-eta.core"]], "dialoguestate (class in eta.core.eta)": [[47, "eta.core.eta.DialogueState"], [48, "eta.core.eta.DialogueState"]], "processmanager (class in eta.core.eta)": [[47, "eta.core.eta.ProcessManager"], [49, "eta.core.eta.ProcessManager"]], "access_from_context() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.access_from_context"], [48, "eta.core.eta.DialogueState.access_from_context"]], "add_all_to_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.add_all_to_buffer"], [48, "eta.core.eta.DialogueState.add_all_to_buffer"]], "add_to_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.add_to_buffer"], [48, "eta.core.eta.DialogueState.add_to_buffer"]], "add_to_buffer_if_empty() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.add_to_buffer_if_empty"], [48, "eta.core.eta.DialogueState.add_to_buffer_if_empty"]], "add_to_context() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.add_to_context"], [48, "eta.core.eta.DialogueState.add_to_context"]], "add_to_memory() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.add_to_memory"], [48, "eta.core.eta.DialogueState.add_to_memory"]], "advance_plan() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.advance_plan"], [48, "eta.core.eta.DialogueState.advance_plan"]], "apply_transducer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.apply_transducer"], [48, "eta.core.eta.DialogueState.apply_transducer"]], "bind() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.bind"], [48, "eta.core.eta.DialogueState.bind"]], "buffer_empty() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.buffer_empty"], [48, "eta.core.eta.DialogueState.buffer_empty"]], "buffers (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.buffers"], [48, "eta.core.eta.DialogueState.buffers"]], "concept_aliases (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.concept_aliases"], [48, "eta.core.eta.DialogueState.concept_aliases"]], "concept_sets (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.concept_sets"], [48, "eta.core.eta.DialogueState.concept_sets"]], "config_agent (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.config_agent"], [48, "eta.core.eta.DialogueState.config_agent"]], "config_user (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.config_user"], [48, "eta.core.eta.DialogueState.config_user"]], "conversation_log (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.conversation_log"], [48, "eta.core.eta.DialogueState.conversation_log"]], "cost() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.cost"], [48, "eta.core.eta.DialogueState.cost"]], "do_continue() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.do_continue"], [48, "eta.core.eta.DialogueState.do_continue"]], "embedder (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.embedder"], [48, "eta.core.eta.DialogueState.embedder"]], "equality_sets (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.equality_sets"], [48, "eta.core.eta.DialogueState.equality_sets"]], "eta() (in module eta.core.eta)": [[47, "eta.core.eta.eta"], [50, "eta.core.eta.eta"]], "eta.core.eta": [[47, "module-eta.core.eta"]], "eval_truth_value() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.eval_truth_value"], [48, "eta.core.eta.DialogueState.eval_truth_value"]], "flush_context() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.flush_context"], [48, "eta.core.eta.DialogueState.flush_context"]], "get_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_buffer"], [48, "eta.core.eta.DialogueState.get_buffer"]], "get_conversation_log() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_conversation_log"], [48, "eta.core.eta.DialogueState.get_conversation_log"]], "get_io_path() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_io_path"], [48, "eta.core.eta.DialogueState.get_io_path"]], "get_log_path() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_log_path"], [48, "eta.core.eta.DialogueState.get_log_path"]], "get_memory() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_memory"], [48, "eta.core.eta.DialogueState.get_memory"]], "get_perception_servers() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_perception_servers"], [48, "eta.core.eta.DialogueState.get_perception_servers"]], "get_plan() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_plan"], [48, "eta.core.eta.DialogueState.get_plan"]], "get_quit_conversation() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_quit_conversation"], [48, "eta.core.eta.DialogueState.get_quit_conversation"]], "get_specialist_servers() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_specialist_servers"], [48, "eta.core.eta.DialogueState.get_specialist_servers"]], "get_step_failure_timer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_step_failure_timer"], [48, "eta.core.eta.DialogueState.get_step_failure_timer"]], "get_user_id() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.get_user_id"], [48, "eta.core.eta.DialogueState.get_user_id"]], "has_plan() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.has_plan"], [48, "eta.core.eta.DialogueState.has_plan"]], "id (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.id"], [48, "eta.core.eta.DialogueState.id"]], "init_knowledge (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.init_knowledge"], [48, "eta.core.eta.DialogueState.init_knowledge"]], "init_plan_from_schema() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.init_plan_from_schema"], [48, "eta.core.eta.DialogueState.init_plan_from_schema"]], "instantiate_curr_step() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.instantiate_curr_step"], [48, "eta.core.eta.DialogueState.instantiate_curr_step"]], "io_path (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.io_path"], [48, "eta.core.eta.DialogueState.io_path"]], "is_schema() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.is_schema"], [48, "eta.core.eta.DialogueState.is_schema"]], "log_turn() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.log_turn"], [48, "eta.core.eta.DialogueState.log_turn"]], "main() (in module eta.core.eta)": [[47, "eta.core.eta.main"], [51, "eta.core.eta.main"]], "me (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.me"], [48, "eta.core.eta.DialogueState.me"]], "memory (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.memory"], [48, "eta.core.eta.DialogueState.memory"]], "output_buffer (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.output_buffer"], [48, "eta.core.eta.DialogueState.output_buffer"]], "plan (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.plan"], [48, "eta.core.eta.DialogueState.plan"]], "pop_all_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.pop_all_buffer"], [48, "eta.core.eta.DialogueState.pop_all_buffer"]], "pop_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.pop_buffer"], [48, "eta.core.eta.DialogueState.pop_buffer"]], "print_schema_instances() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.print_schema_instances"], [48, "eta.core.eta.DialogueState.print_schema_instances"]], "push_output_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.push_output_buffer"], [48, "eta.core.eta.DialogueState.push_output_buffer"]], "quit_conversation (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.quit_conversation"], [48, "eta.core.eta.DialogueState.quit_conversation"]], "reference_list (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.reference_list"], [48, "eta.core.eta.DialogueState.reference_list"]], "remove_from_context() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.remove_from_context"], [48, "eta.core.eta.DialogueState.remove_from_context"]], "replace_all_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.replace_all_buffer"], [48, "eta.core.eta.DialogueState.replace_all_buffer"]], "replace_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.replace_buffer"], [48, "eta.core.eta.DialogueState.replace_buffer"]], "reset_step_failure_timer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.reset_step_failure_timer"], [48, "eta.core.eta.DialogueState.reset_step_failure_timer"]], "retrieve_facts() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.retrieve_facts"], [48, "eta.core.eta.DialogueState.retrieve_facts"]], "schema_instances (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.schema_instances"], [48, "eta.core.eta.DialogueState.schema_instances"]], "schemas (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.schemas"], [48, "eta.core.eta.DialogueState.schemas"]], "set_plan() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.set_plan"], [48, "eta.core.eta.DialogueState.set_plan"]], "set_quit_conversation() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.set_quit_conversation"], [48, "eta.core.eta.DialogueState.set_quit_conversation"]], "start_schema (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.start_schema"], [48, "eta.core.eta.DialogueState.start_schema"]], "start_time (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.start_time"], [48, "eta.core.eta.DialogueState.start_time"]], "step_failure_timer (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.step_failure_timer"], [48, "eta.core.eta.DialogueState.step_failure_timer"]], "timegraph (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.timegraph"], [48, "eta.core.eta.DialogueState.timegraph"]], "transducers (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.transducers"], [48, "eta.core.eta.DialogueState.transducers"]], "unbind() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.unbind"], [48, "eta.core.eta.DialogueState.unbind"]], "write_output_buffer() (dialoguestate method)": [[47, "eta.core.eta.DialogueState.write_output_buffer"], [48, "eta.core.eta.DialogueState.write_output_buffer"]], "you (dialoguestate attribute)": [[47, "eta.core.eta.DialogueState.you"], [48, "eta.core.eta.DialogueState.you"]], "connect() (processmanager method)": [[49, "eta.core.eta.ProcessManager.connect"]], "get_server() (processmanager method)": [[49, "eta.core.eta.ProcessManager.get_server"]], "join() (processmanager method)": [[49, "eta.core.eta.ProcessManager.join"]], "register() (processmanager class method)": [[49, "eta.core.eta.ProcessManager.register"]], "start() (processmanager method)": [[49, "eta.core.eta.ProcessManager.start"]], "eta.core.execution": [[52, "module-eta.core.execution"]], "execute_forget_from_stm() (in module eta.core.execution)": [[52, "eta.core.execution.execute_forget_from_STM"], [53, "eta.core.execution.execute_forget_from_STM"]], "execute_say_bye() (in module eta.core.execution)": [[52, "eta.core.execution.execute_say_bye"], [54, "eta.core.execution.execute_say_bye"]], "execute_say_to() (in module eta.core.execution)": [[52, "eta.core.execution.execute_say_to"], [55, "eta.core.execution.execute_say_to"]], "execute_store_in_stm() (in module eta.core.execution)": [[52, "eta.core.execution.execute_store_in_STM"], [56, "eta.core.execution.execute_store_in_STM"]], "execution_loop() (in module eta.core.execution)": [[52, "eta.core.execution.execution_loop"], [57, "eta.core.execution.execution_loop"]], "fail_curr_step() (in module eta.core.execution)": [[52, "eta.core.execution.fail_curr_step"], [58, "eta.core.execution.fail_curr_step"]], "inquire_truth_of_curr_step() (in module eta.core.execution)": [[52, "eta.core.execution.inquire_truth_of_curr_step"], [61, "eta.core.execution.inquire_truth_of_curr_step"]], "process_condition_step() (in module eta.core.execution)": [[52, "eta.core.execution.process_condition_step"], [63, "eta.core.execution.process_condition_step"]], "process_expected_step() (in module eta.core.execution)": [[52, "eta.core.execution.process_expected_step"], [64, "eta.core.execution.process_expected_step"]], "process_intended_step() (in module eta.core.execution)": [[52, "eta.core.execution.process_intended_step"], [65, "eta.core.execution.process_intended_step"]], "process_repetition_step() (in module eta.core.execution)": [[52, "eta.core.execution.process_repetition_step"], [66, "eta.core.execution.process_repetition_step"]], "forget_from_stm_step() (in module eta.core.execution)": [[59, "eta.core.execution.forget_from_stm_step"]], "get_action() (in module eta.core.execution)": [[60, "eta.core.execution.get_action"]], "me_pred() (in module eta.core.execution)": [[62, "eta.core.execution.me_pred"]], "say_bye_step() (in module eta.core.execution)": [[67, "eta.core.execution.say_bye_step"]], "say_to_step() (in module eta.core.execution)": [[68, "eta.core.execution.say_to_step"]], "store_in_stm_step() (in module eta.core.execution)": [[69, "eta.core.execution.store_in_stm_step"]], "you_pred() (in module eta.core.execution)": [[70, "eta.core.execution.you_pred"]], "eta.core.perception": [[71, "module-eta.core.perception"]], "observe() (in module eta.core.perception)": [[71, "eta.core.perception.observe"], [72, "eta.core.perception.observe"]], "perception_loop() (in module eta.core.perception)": [[71, "eta.core.perception.perception_loop"], [73, "eta.core.perception.perception_loop"]], "process_observations() (in module eta.core.perception)": [[71, "eta.core.perception.process_observations"], [74, "eta.core.perception.process_observations"]], "process_utterances() (in module eta.core.perception)": [[71, "eta.core.perception.process_utterances"], [75, "eta.core.perception.process_utterances"]], "add_possible_actions_to_plan() (in module eta.core.planning)": [[76, "eta.core.planning.add_possible_actions_to_plan"], [77, "eta.core.planning.add_possible_actions_to_plan"]], "eta.core.planning": [[76, "module-eta.core.planning"]], "expand_condition_step() (in module eta.core.planning)": [[76, "eta.core.planning.expand_condition_step"], [81, "eta.core.planning.expand_condition_step"]], "expand_plan_steps() (in module eta.core.planning)": [[76, "eta.core.planning.expand_plan_steps"], [82, "eta.core.planning.expand_plan_steps"]], "expand_primitive_step() (in module eta.core.planning)": [[76, "eta.core.planning.expand_primitive_step"], [83, "eta.core.planning.expand_primitive_step"]], "expand_repetition_step() (in module eta.core.planning)": [[76, "eta.core.planning.expand_repetition_step"], [84, "eta.core.planning.expand_repetition_step"]], "merge_plan_steps() (in module eta.core.planning)": [[76, "eta.core.planning.merge_plan_steps"], [85, "eta.core.planning.merge_plan_steps"]], "plan_answer() (in module eta.core.planning)": [[76, "eta.core.planning.plan_answer"], [87, "eta.core.planning.plan_answer"]], "plan_ask() (in module eta.core.planning)": [[76, "eta.core.planning.plan_ask"], [88, "eta.core.planning.plan_ask"]], "plan_paraphrase() (in module eta.core.planning)": [[76, "eta.core.planning.plan_paraphrase"], [89, "eta.core.planning.plan_paraphrase"]], "plan_react() (in module eta.core.planning)": [[76, "eta.core.planning.plan_react"], [90, "eta.core.planning.plan_react"]], "plan_respond() (in module eta.core.planning)": [[76, "eta.core.planning.plan_respond"], [91, "eta.core.planning.plan_respond"]], "planning_loop() (in module eta.core.planning)": [[76, "eta.core.planning.planning_loop"], [92, "eta.core.planning.planning_loop"]], "reorder_plan_steps() (in module eta.core.planning)": [[76, "eta.core.planning.reorder_plan_steps"], [95, "eta.core.planning.reorder_plan_steps"]], "say_to_step_from_utt() (in module eta.core.planning)": [[76, "eta.core.planning.say_to_step_from_utt"], [98, "eta.core.planning.say_to_step_from_utt"]], "say_to_step_from_utts() (in module eta.core.planning)": [[76, "eta.core.planning.say_to_step_from_utts"], [99, "eta.core.planning.say_to_step_from_utts"]], "schema_step() (in module eta.core.planning)": [[76, "eta.core.planning.schema_step"], [100, "eta.core.planning.schema_step"]], "split_schema_step() (in module eta.core.planning)": [[76, "eta.core.planning.split_schema_step"], [101, "eta.core.planning.split_schema_step"]], "answer_step() (in module eta.core.planning)": [[78, "eta.core.planning.answer_step"]], "ask_step() (in module eta.core.planning)": [[79, "eta.core.planning.ask_step"]], "equivalent_speech_acts() (in module eta.core.planning)": [[80, "eta.core.planning.equivalent_speech_acts"]], "paraphrase_step() (in module eta.core.planning)": [[86, "eta.core.planning.paraphrase_step"]], "react_step() (in module eta.core.planning)": [[93, "eta.core.planning.react_step"]], "relative_speech_act_step() (in module eta.core.planning)": [[94, "eta.core.planning.relative_speech_act_step"]], "reply_step() (in module eta.core.planning)": [[96, "eta.core.planning.reply_step"]], "respond_step() (in module eta.core.planning)": [[97, "eta.core.planning.respond_step"]], "eta.core.reasoning": [[102, "module-eta.core.reasoning"]], "infer_bottom_up() (in module eta.core.reasoning)": [[102, "eta.core.reasoning.infer_bottom_up"], [103, "eta.core.reasoning.infer_bottom_up"]], "infer_top_down() (in module eta.core.reasoning)": [[102, "eta.core.reasoning.infer_top_down"], [104, "eta.core.reasoning.infer_top_down"]], "reasoning_loop() (in module eta.core.reasoning)": [[102, "eta.core.reasoning.reasoning_loop"], [105, "eta.core.reasoning.reasoning_loop"]], "suggest_possible_actions() (in module eta.core.reasoning)": [[102, "eta.core.reasoning.suggest_possible_actions"], [106, "eta.core.reasoning.suggest_possible_actions"]], "dialogueturn (class in eta.discourse)": [[107, "eta.discourse.DialogueTurn"], [108, "eta.discourse.DialogueTurn"]], "utterance (class in eta.discourse)": [[107, "eta.discourse.Utterance"], [109, "eta.discourse.Utterance"]], "affect (utterance attribute)": [[107, "eta.discourse.Utterance.affect"], [109, "eta.discourse.Utterance.affect"]], "agent (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.agent"], [108, "eta.discourse.DialogueTurn.agent"]], "agent (utterance attribute)": [[107, "eta.discourse.Utterance.agent"], [109, "eta.discourse.Utterance.agent"]], "compress() (in module eta.discourse)": [[107, "eta.discourse.compress"], [110, "eta.discourse.compress"]], "decompress() (in module eta.discourse)": [[107, "eta.discourse.decompress"], [111, "eta.discourse.decompress"]], "ep (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.ep"], [108, "eta.discourse.DialogueTurn.ep"]], "eta.discourse": [[107, "module-eta.discourse"]], "get_prior_turn() (in module eta.discourse)": [[107, "eta.discourse.get_prior_turn"], [112, "eta.discourse.get_prior_turn"]], "get_prior_words() (in module eta.discourse)": [[107, "eta.discourse.get_prior_words"], [113, "eta.discourse.get_prior_words"]], "gists (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.gists"], [108, "eta.discourse.DialogueTurn.gists"]], "obligations (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.obligations"], [108, "eta.discourse.DialogueTurn.obligations"]], "parse_utt_str() (in module eta.discourse)": [[107, "eta.discourse.parse_utt_str"], [114, "eta.discourse.parse_utt_str"]], "pragmatics (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.pragmatics"], [108, "eta.discourse.DialogueTurn.pragmatics"]], "presubst() (in module eta.discourse)": [[107, "eta.discourse.presubst"], [115, "eta.discourse.presubst"]], "semantics (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.semantics"], [108, "eta.discourse.DialogueTurn.semantics"]], "swap_duals() (in module eta.discourse)": [[107, "eta.discourse.swap_duals"], [116, "eta.discourse.swap_duals"]], "utterance (dialogueturn attribute)": [[107, "eta.discourse.DialogueTurn.utterance"], [108, "eta.discourse.DialogueTurn.utterance"]], "words (utterance attribute)": [[107, "eta.discourse.Utterance.words"], [109, "eta.discourse.Utterance.words"]], "dummyembedder (class in eta.embedding)": [[117, "eta.embedding.DummyEmbedder"], [118, "eta.embedding.DummyEmbedder"]], "embedder (class in eta.embedding)": [[117, "eta.embedding.Embedder"], [119, "eta.embedding.Embedder"]], "hfembedder (class in eta.embedding)": [[117, "eta.embedding.HFEmbedder"], [120, "eta.embedding.HFEmbedder"]], "stembedder (class in eta.embedding)": [[117, "eta.embedding.STEmbedder"], [121, "eta.embedding.STEmbedder"]], "embed() (embedder method)": [[117, "eta.embedding.Embedder.embed"], [119, "eta.embedding.Embedder.embed"]], "embed() (hfembedder method)": [[117, "eta.embedding.HFEmbedder.embed"], [120, "eta.embedding.HFEmbedder.embed"]], "embed() (stembedder method)": [[117, "eta.embedding.STEmbedder.embed"], [121, "eta.embedding.STEmbedder.embed"]], "eta.embedding": [[117, "module-eta.embedding"]], "header (hfembedder attribute)": [[117, "eta.embedding.HFEmbedder.header"], [120, "eta.embedding.HFEmbedder.header"]], "host (hfembedder attribute)": [[117, "eta.embedding.HFEmbedder.host"], [120, "eta.embedding.HFEmbedder.host"]], "model (hfembedder attribute)": [[117, "eta.embedding.HFEmbedder.model"], [120, "eta.embedding.HFEmbedder.model"]], "model (stembedder attribute)": [[117, "eta.embedding.STEmbedder.model"], [121, "eta.embedding.STEmbedder.model"]], "score() (embedder method)": [[117, "eta.embedding.Embedder.score"], [119, "eta.embedding.Embedder.score"]], "sim() (in module eta.embedding)": [[117, "eta.embedding.sim"], [122, "eta.embedding.sim"]], "url (hfembedder attribute)": [[117, "eta.embedding.HFEmbedder.url"], [120, "eta.embedding.HFEmbedder.url"]], "embed() (dummyembedder method)": [[118, "eta.embedding.DummyEmbedder.embed"]], "score() (dummyembedder method)": [[118, "eta.embedding.DummyEmbedder.score"]], "score() (hfembedder method)": [[120, "eta.embedding.HFEmbedder.score"]], "score() (stembedder method)": [[121, "eta.embedding.STEmbedder.score"]], "condition (class in eta.lf)": [[123, "eta.lf.Condition"], [124, "eta.lf.Condition"]], "domain (class in eta.lf)": [[123, "eta.lf.Domain"], [125, "eta.lf.Domain"]], "elf (class in eta.lf)": [[123, "eta.lf.ELF"], [126, "eta.lf.ELF"]], "eventuality (class in eta.lf)": [[123, "eta.lf.Eventuality"], [127, "eta.lf.Eventuality"]], "individual (class in eta.lf)": [[123, "eta.lf.Individual"], [128, "eta.lf.Individual"]], "keywords (in module eta.lf)": [[123, "eta.lf.KEYWORDS"], [129, "eta.lf.KEYWORDS"]], "keywords_r (in module eta.lf)": [[123, "eta.lf.KEYWORDS_R"], [130, "eta.lf.KEYWORDS_R"]], "lf (class in eta.lf)": [[123, "eta.lf.LF"], [131, "eta.lf.LF"]], "repetition (class in eta.lf)": [[123, "eta.lf.Repetition"], [132, "eta.lf.Repetition"]], "ulf (class in eta.lf)": [[123, "eta.lf.ULF"], [133, "eta.lf.ULF"]], "var (class in eta.lf)": [[123, "eta.lf.Var"], [134, "eta.lf.Var"]], "add() (domain method)": [[123, "eta.lf.Domain.add"], [125, "eta.lf.Domain.add"]], "add_aliases() (domain method)": [[123, "eta.lf.Domain.add_aliases"], [125, "eta.lf.Domain.add_aliases"]], "add_aliases() (individual method)": [[123, "eta.lf.Individual.add_aliases"], [128, "eta.lf.Individual.add_aliases"]], "aliases (individual attribute)": [[123, "eta.lf.Individual.aliases"], [128, "eta.lf.Individual.aliases"]], "and_prop_p() (in module eta.lf)": [[123, "eta.lf.and_prop_p"], [135, "eta.lf.and_prop_p"]], "bind() (condition method)": [[123, "eta.lf.Condition.bind"], [124, "eta.lf.Condition.bind"]], "bind() (eventuality method)": [[123, "eta.lf.Eventuality.bind"], [127, "eta.lf.Eventuality.bind"]], "bind() (lf method)": [[123, "eta.lf.LF.bind"], [131, "eta.lf.LF.bind"]], "bind() (repetition method)": [[123, "eta.lf.Repetition.bind"], [132, "eta.lf.Repetition.bind"]], "bind() (var method)": [[123, "eta.lf.Var.bind"], [134, "eta.lf.Var.bind"]], "bindings (condition attribute)": [[123, "eta.lf.Condition.bindings"], [124, "eta.lf.Condition.bindings"]], "bindings (eventuality attribute)": [[123, "eta.lf.Eventuality.bindings"], [127, "eta.lf.Eventuality.bindings"]], "bindings (lf attribute)": [[123, "eta.lf.LF.bindings"], [131, "eta.lf.LF.bindings"]], "bindings (repetition attribute)": [[123, "eta.lf.Repetition.bindings"], [132, "eta.lf.Repetition.bindings"]], "characterizes_prop_p() (in module eta.lf)": [[123, "eta.lf.characterizes_prop_p"], [136, "eta.lf.characterizes_prop_p"]], "condition (repetition attribute)": [[123, "eta.lf.Repetition.condition"], [132, "eta.lf.Repetition.condition"]], "conditions (condition attribute)": [[123, "eta.lf.Condition.conditions"], [124, "eta.lf.Condition.conditions"]], "domain (domain attribute)": [[123, "eta.lf.Domain.domain"], [125, "eta.lf.Domain.domain"]], "elf (condition attribute)": [[123, "eta.lf.Condition.elf"], [124, "eta.lf.Condition.elf"]], "elf (eventuality attribute)": [[123, "eta.lf.Eventuality.elf"], [127, "eta.lf.Eventuality.elf"]], "elf (repetition attribute)": [[123, "eta.lf.Repetition.elf"], [132, "eta.lf.Repetition.elf"]], "embed() (eventuality method)": [[123, "eta.lf.Eventuality.embed"], [127, "eta.lf.Eventuality.embed"]], "embedding (condition attribute)": [[123, "eta.lf.Condition.embedding"], [124, "eta.lf.Condition.embedding"]], "embedding (eventuality attribute)": [[123, "eta.lf.Eventuality.embedding"], [127, "eta.lf.Eventuality.embedding"]], "embedding (repetition attribute)": [[123, "eta.lf.Repetition.embedding"], [132, "eta.lf.Repetition.embedding"]], "ep (condition attribute)": [[123, "eta.lf.Condition.ep"], [124, "eta.lf.Condition.ep"]], "ep (eventuality attribute)": [[123, "eta.lf.Eventuality.ep"], [127, "eta.lf.Eventuality.ep"]], "ep (repetition attribute)": [[123, "eta.lf.Repetition.ep"], [132, "eta.lf.Repetition.ep"]], "equal_prop_p() (in module eta.lf)": [[123, "eta.lf.equal_prop_p"], [137, "eta.lf.equal_prop_p"]], "eta.lf": [[123, "module-eta.lf"]], "eventualities (repetition attribute)": [[123, "eta.lf.Repetition.eventualities"], [132, "eta.lf.Repetition.eventualities"]], "expectation_p() (in module eta.lf)": [[123, "eta.lf.expectation_p"], [138, "eta.lf.expectation_p"]], "extract_set() (in module eta.lf)": [[123, "eta.lf.extract_set"], [139, "eta.lf.extract_set"]], "format() (eventuality method)": [[123, "eta.lf.Eventuality.format"], [127, "eta.lf.Eventuality.format"]], "formula (lf attribute)": [[123, "eta.lf.LF.formula"], [131, "eta.lf.LF.formula"]], "from_lisp_dirs() (in module eta.lf)": [[123, "eta.lf.from_lisp_dirs"], [140, "eta.lf.from_lisp_dirs"]], "from_lisp_file() (in module eta.lf)": [[123, "eta.lf.from_lisp_file"], [141, "eta.lf.from_lisp_file"]], "get_elf() (eventuality method)": [[123, "eta.lf.Eventuality.get_elf"], [127, "eta.lf.Eventuality.get_elf"]], "get_ep() (eventuality method)": [[123, "eta.lf.Eventuality.get_ep"], [127, "eta.lf.Eventuality.get_ep"]], "get_formula() (lf method)": [[123, "eta.lf.LF.get_formula"], [131, "eta.lf.LF.get_formula"]], "get_nl() (eventuality method)": [[123, "eta.lf.Eventuality.get_nl"], [127, "eta.lf.Eventuality.get_nl"]], "get_ulf() (eventuality method)": [[123, "eta.lf.Eventuality.get_ulf"], [127, "eta.lf.Eventuality.get_ulf"]], "get_wff() (eventuality method)": [[123, "eta.lf.Eventuality.get_wff"], [127, "eta.lf.Eventuality.get_wff"]], "is_set() (in module eta.lf)": [[123, "eta.lf.is_set"], [142, "eta.lf.is_set"]], "make_set() (in module eta.lf)": [[123, "eta.lf.make_set"], [143, "eta.lf.make_set"]], "name (individual attribute)": [[123, "eta.lf.Individual.name"], [128, "eta.lf.Individual.name"]], "nl (condition attribute)": [[123, "eta.lf.Condition.nl"], [124, "eta.lf.Condition.nl"]], "nl (eventuality attribute)": [[123, "eta.lf.Eventuality.nl"], [127, "eta.lf.Eventuality.nl"]], "nl (repetition attribute)": [[123, "eta.lf.Repetition.nl"], [132, "eta.lf.Repetition.nl"]], "not_prop_p() (in module eta.lf)": [[123, "eta.lf.not_prop_p"], [144, "eta.lf.not_prop_p"]], "or_prop_p() (in module eta.lf)": [[123, "eta.lf.or_prop_p"], [145, "eta.lf.or_prop_p"]], "parse_condition() (in module eta.lf)": [[123, "eta.lf.parse_condition"], [146, "eta.lf.parse_condition"]], "parse_eventuality() (in module eta.lf)": [[123, "eta.lf.parse_eventuality"], [147, "eta.lf.parse_eventuality"]], "parse_eventuality_list() (in module eta.lf)": [[123, "eta.lf.parse_eventuality_list"], [148, "eta.lf.parse_eventuality_list"]], "parse_repetition() (in module eta.lf)": [[123, "eta.lf.parse_repetition"], [149, "eta.lf.parse_repetition"]], "prob (condition attribute)": [[123, "eta.lf.Condition.prob"], [124, "eta.lf.Condition.prob"]], "prob (eventuality attribute)": [[123, "eta.lf.Eventuality.prob"], [127, "eta.lf.Eventuality.prob"]], "prob (repetition attribute)": [[123, "eta.lf.Repetition.prob"], [132, "eta.lf.Repetition.prob"]], "remove_type() (in module eta.lf)": [[123, "eta.lf.remove_type"], [150, "eta.lf.remove_type"]], "replacevar() (condition method)": [[123, "eta.lf.Condition.replacevar"], [124, "eta.lf.Condition.replacevar"]], "replacevar() (eventuality method)": [[123, "eta.lf.Eventuality.replacevar"], [127, "eta.lf.Eventuality.replacevar"]], "replacevar() (lf method)": [[123, "eta.lf.LF.replacevar"], [131, "eta.lf.LF.replacevar"]], "replacevar() (repetition method)": [[123, "eta.lf.Repetition.replacevar"], [132, "eta.lf.Repetition.replacevar"]], "set_elf() (eventuality method)": [[123, "eta.lf.Eventuality.set_elf"], [127, "eta.lf.Eventuality.set_elf"]], "set_ep() (eventuality method)": [[123, "eta.lf.Eventuality.set_ep"], [127, "eta.lf.Eventuality.set_ep"]], "set_prob() (eventuality method)": [[123, "eta.lf.Eventuality.set_prob"], [127, "eta.lf.Eventuality.set_prob"]], "set_ulf() (eventuality method)": [[123, "eta.lf.Eventuality.set_ulf"], [127, "eta.lf.Eventuality.set_ulf"]], "set_union() (in module eta.lf)": [[123, "eta.lf.set_union"], [151, "eta.lf.set_union"]], "to_nl() (lf method)": [[123, "eta.lf.LF.to_nl"], [131, "eta.lf.LF.to_nl"]], "ulf (condition attribute)": [[123, "eta.lf.Condition.ulf"], [124, "eta.lf.Condition.ulf"]], "ulf (eventuality attribute)": [[123, "eta.lf.Eventuality.ulf"], [127, "eta.lf.Eventuality.ulf"]], "ulf (repetition attribute)": [[123, "eta.lf.Repetition.ulf"], [132, "eta.lf.Repetition.ulf"]], "unbind() (condition method)": [[123, "eta.lf.Condition.unbind"], [124, "eta.lf.Condition.unbind"]], "unbind() (eventuality method)": [[123, "eta.lf.Eventuality.unbind"], [127, "eta.lf.Eventuality.unbind"]], "unbind() (lf method)": [[123, "eta.lf.LF.unbind"], [131, "eta.lf.LF.unbind"]], "unbind() (repetition method)": [[123, "eta.lf.Repetition.unbind"], [132, "eta.lf.Repetition.unbind"]], "unbind() (var method)": [[123, "eta.lf.Var.unbind"], [134, "eta.lf.Var.unbind"]], "val (var attribute)": [[123, "eta.lf.Var.val"], [134, "eta.lf.Var.val"]], "var (var attribute)": [[123, "eta.lf.Var.var"], [134, "eta.lf.Var.var"]], "__eq__() (condition method)": [[124, "eta.lf.Condition.__eq__"]], "__hash__() (condition method)": [[124, "eta.lf.Condition.__hash__"]], "__str__() (condition method)": [[124, "eta.lf.Condition.__str__"]], "embed() (condition method)": [[124, "eta.lf.Condition.embed"]], "format() (condition method)": [[124, "eta.lf.Condition.format"]], "get_elf() (condition method)": [[124, "eta.lf.Condition.get_elf"]], "get_ep() (condition method)": [[124, "eta.lf.Condition.get_ep"]], "get_nl() (condition method)": [[124, "eta.lf.Condition.get_nl"]], "get_ulf() (condition method)": [[124, "eta.lf.Condition.get_ulf"]], "get_wff() (condition method)": [[124, "eta.lf.Condition.get_wff"]], "set_elf() (condition method)": [[124, "eta.lf.Condition.set_elf"]], "set_ep() (condition method)": [[124, "eta.lf.Condition.set_ep"]], "set_prob() (condition method)": [[124, "eta.lf.Condition.set_prob"]], "set_ulf() (condition method)": [[124, "eta.lf.Condition.set_ulf"]], "__str__() (elf method)": [[126, "eta.lf.ELF.__str__"]], "bind() (elf method)": [[126, "eta.lf.ELF.bind"]], "get_formula() (elf method)": [[126, "eta.lf.ELF.get_formula"]], "replacevar() (elf method)": [[126, "eta.lf.ELF.replacevar"]], "to_nl() (elf method)": [[126, "eta.lf.ELF.to_nl"]], "unbind() (elf method)": [[126, "eta.lf.ELF.unbind"]], "__eq__() (eventuality method)": [[127, "eta.lf.Eventuality.__eq__"]], "__hash__() (eventuality method)": [[127, "eta.lf.Eventuality.__hash__"]], "__str__() (eventuality method)": [[127, "eta.lf.Eventuality.__str__"]], "__str__() (individual method)": [[128, "eta.lf.Individual.__str__"]], "__str__() (lf method)": [[131, "eta.lf.LF.__str__"]], "__eq__() (repetition method)": [[132, "eta.lf.Repetition.__eq__"]], "__hash__() (repetition method)": [[132, "eta.lf.Repetition.__hash__"]], "__str__() (repetition method)": [[132, "eta.lf.Repetition.__str__"]], "embed() (repetition method)": [[132, "eta.lf.Repetition.embed"]], "format() (repetition method)": [[132, "eta.lf.Repetition.format"]], "get_elf() (repetition method)": [[132, "eta.lf.Repetition.get_elf"]], "get_ep() (repetition method)": [[132, "eta.lf.Repetition.get_ep"]], "get_nl() (repetition method)": [[132, "eta.lf.Repetition.get_nl"]], "get_ulf() (repetition method)": [[132, "eta.lf.Repetition.get_ulf"]], "get_wff() (repetition method)": [[132, "eta.lf.Repetition.get_wff"]], "set_elf() (repetition method)": [[132, "eta.lf.Repetition.set_elf"]], "set_ep() (repetition method)": [[132, "eta.lf.Repetition.set_ep"]], "set_prob() (repetition method)": [[132, "eta.lf.Repetition.set_prob"]], "set_ulf() (repetition method)": [[132, "eta.lf.Repetition.set_ulf"]], "__str__() (ulf method)": [[133, "eta.lf.ULF.__str__"]], "bind() (ulf method)": [[133, "eta.lf.ULF.bind"]], "get_formula() (ulf method)": [[133, "eta.lf.ULF.get_formula"]], "replacevar() (ulf method)": [[133, "eta.lf.ULF.replacevar"]], "to_nl() (ulf method)": [[133, "eta.lf.ULF.to_nl"]], "unbind() (ulf method)": [[133, "eta.lf.ULF.unbind"]], "__str__() (var method)": [[134, "eta.lf.Var.__str__"]], "memory (class in eta.memory)": [[152, "eta.memory.Memory"], [153, "eta.memory.Memory"]], "memorystorage (class in eta.memory)": [[152, "eta.memory.MemoryStorage"], [154, "eta.memory.MemoryStorage"]], "access() (memorystorage method)": [[152, "eta.memory.MemoryStorage.access"], [154, "eta.memory.MemoryStorage.access"]], "context (memorystorage attribute)": [[152, "eta.memory.MemoryStorage.context"], [154, "eta.memory.MemoryStorage.context"]], "does_characterize_episode() (memorystorage method)": [[152, "eta.memory.MemoryStorage.does_characterize_episode"], [154, "eta.memory.MemoryStorage.does_characterize_episode"]], "embedder (memorystorage attribute)": [[152, "eta.memory.MemoryStorage.embedder"], [154, "eta.memory.MemoryStorage.embedder"]], "end() (memory method)": [[152, "eta.memory.Memory.end"], [153, "eta.memory.Memory.end"]], "end_time (memory attribute)": [[152, "eta.memory.Memory.end_time"], [153, "eta.memory.Memory.end_time"]], "ep_ht (memorystorage attribute)": [[152, "eta.memory.MemoryStorage.ep_ht"], [154, "eta.memory.MemoryStorage.ep_ht"]], "eta.memory": [[152, "module-eta.memory"]], "event (memory attribute)": [[152, "eta.memory.Memory.event"], [153, "eta.memory.Memory.event"]], "flush_context() (memorystorage method)": [[152, "eta.memory.MemoryStorage.flush_context"], [154, "eta.memory.MemoryStorage.flush_context"]], "forget() (memorystorage method)": [[152, "eta.memory.MemoryStorage.forget"], [154, "eta.memory.MemoryStorage.forget"]], "get_characterizing_episode() (memorystorage method)": [[152, "eta.memory.MemoryStorage.get_characterizing_episode"], [154, "eta.memory.MemoryStorage.get_characterizing_episode"]], "get_ep() (memory method)": [[152, "eta.memory.Memory.get_ep"], [153, "eta.memory.Memory.get_ep"]], "get_episode() (memorystorage method)": [[152, "eta.memory.MemoryStorage.get_episode"], [154, "eta.memory.MemoryStorage.get_episode"]], "get_from_context() (memorystorage method)": [[152, "eta.memory.MemoryStorage.get_from_context"], [154, "eta.memory.MemoryStorage.get_from_context"]], "get_matching() (memorystorage method)": [[152, "eta.memory.MemoryStorage.get_matching"], [154, "eta.memory.MemoryStorage.get_matching"]], "get_time_wffs() (memory method)": [[152, "eta.memory.Memory.get_time_wffs"], [153, "eta.memory.Memory.get_time_wffs"]], "get_wff() (memory method)": [[152, "eta.memory.Memory.get_wff"], [153, "eta.memory.Memory.get_wff"]], "importance (memory attribute)": [[152, "eta.memory.Memory.importance"], [153, "eta.memory.Memory.importance"]], "importance_threshold (memorystorage attribute)": [[152, "eta.memory.MemoryStorage.importance_threshold"], [154, "eta.memory.MemoryStorage.importance_threshold"]], "instantiate() (memorystorage method)": [[152, "eta.memory.MemoryStorage.instantiate"], [154, "eta.memory.MemoryStorage.instantiate"]], "is_telic() (memory method)": [[152, "eta.memory.Memory.is_telic"], [153, "eta.memory.Memory.is_telic"]], "last_access (memory attribute)": [[152, "eta.memory.Memory.last_access"], [153, "eta.memory.Memory.last_access"]], "memories (memorystorage attribute)": [[152, "eta.memory.MemoryStorage.memories"], [154, "eta.memory.MemoryStorage.memories"]], "remove() (memorystorage method)": [[152, "eta.memory.MemoryStorage.remove"], [154, "eta.memory.MemoryStorage.remove"]], "remove_episode() (memorystorage method)": [[152, "eta.memory.MemoryStorage.remove_episode"], [154, "eta.memory.MemoryStorage.remove_episode"]], "remove_episode_from_context() (memorystorage method)": [[152, "eta.memory.MemoryStorage.remove_episode_from_context"], [154, "eta.memory.MemoryStorage.remove_episode_from_context"]], "remove_from_context() (memorystorage method)": [[152, "eta.memory.MemoryStorage.remove_from_context"], [154, "eta.memory.MemoryStorage.remove_from_context"]], "remove_matching() (memorystorage method)": [[152, "eta.memory.MemoryStorage.remove_matching"], [154, "eta.memory.MemoryStorage.remove_matching"]], "remove_matching_from_context() (memorystorage method)": [[152, "eta.memory.MemoryStorage.remove_matching_from_context"], [154, "eta.memory.MemoryStorage.remove_matching_from_context"]], "retrieve() (memorystorage method)": [[152, "eta.memory.MemoryStorage.retrieve"], [154, "eta.memory.MemoryStorage.retrieve"]], "start_time (memory attribute)": [[152, "eta.memory.Memory.start_time"], [153, "eta.memory.Memory.start_time"]], "store() (memorystorage method)": [[152, "eta.memory.MemoryStorage.store"], [154, "eta.memory.MemoryStorage.store"]], "update_last_access() (memory method)": [[152, "eta.memory.Memory.update_last_access"], [153, "eta.memory.Memory.update_last_access"]], "wff_ht (memorystorage attribute)": [[152, "eta.memory.MemoryStorage.wff_ht"], [154, "eta.memory.MemoryStorage.wff_ht"]], "__eq__() (memory method)": [[153, "eta.memory.Memory.__eq__"]], "__hash__() (memory method)": [[153, "eta.memory.Memory.__hash__"]], "__str__() (memory method)": [[153, "eta.memory.Memory.__str__"]], "__str__() (memorystorage method)": [[154, "eta.memory.MemoryStorage.__str__"]], "plannode (class in eta.plan)": [[155, "eta.plan.PlanNode"], [156, "eta.plan.PlanNode"]], "planstep (class in eta.plan)": [[155, "eta.plan.PlanStep"], [157, "eta.plan.PlanStep"]], "add_schema_to_subplan() (plannode method)": [[155, "eta.plan.PlanNode.add_schema_to_subplan"], [156, "eta.plan.PlanNode.add_schema_to_subplan"]], "add_superstep() (planstep method)": [[155, "eta.plan.PlanStep.add_superstep"], [157, "eta.plan.PlanStep.add_superstep"]], "add_superstep_to_subplan() (plannode method)": [[155, "eta.plan.PlanNode.add_superstep_to_subplan"], [156, "eta.plan.PlanNode.add_superstep_to_subplan"]], "add_supersteps() (plannode method)": [[155, "eta.plan.PlanNode.add_supersteps"], [156, "eta.plan.PlanNode.add_supersteps"]], "bind() (plannode method)": [[155, "eta.plan.PlanNode.bind"], [156, "eta.plan.PlanNode.bind"]], "bind() (planstep method)": [[155, "eta.plan.PlanStep.bind"], [157, "eta.plan.PlanStep.bind"]], "eta.plan": [[155, "module-eta.plan"]], "event (planstep attribute)": [[155, "eta.plan.PlanStep.event"], [157, "eta.plan.PlanStep.event"]], "expand_plan_node() (in module eta.plan)": [[155, "eta.plan.expand_plan_node"], [158, "eta.plan.expand_plan_node"]], "format() (planstep method)": [[155, "eta.plan.PlanStep.format"], [157, "eta.plan.PlanStep.format"]], "get_all_roots() (plannode method)": [[155, "eta.plan.PlanNode.get_all_roots"], [156, "eta.plan.PlanNode.get_all_roots"]], "get_first_plan_node() (in module eta.plan)": [[155, "eta.plan.get_first_plan_node"], [159, "eta.plan.get_first_plan_node"]], "get_last_plan_node() (in module eta.plan)": [[155, "eta.plan.get_last_plan_node"], [160, "eta.plan.get_last_plan_node"]], "get_obligations() (planstep method)": [[155, "eta.plan.PlanStep.get_obligations"], [157, "eta.plan.PlanStep.get_obligations"]], "get_schemas() (plannode method)": [[155, "eta.plan.PlanNode.get_schemas"], [156, "eta.plan.PlanNode.get_schemas"]], "id (planstep attribute)": [[155, "eta.plan.PlanStep.id"], [157, "eta.plan.PlanStep.id"]], "init_plan_from_eventualities() (in module eta.plan)": [[155, "eta.plan.init_plan_from_eventualities"], [161, "eta.plan.init_plan_from_eventualities"]], "insert_before_plan_node() (in module eta.plan)": [[155, "eta.plan.insert_before_plan_node"], [162, "eta.plan.insert_before_plan_node"]], "merge_plan_nodes() (in module eta.plan)": [[155, "eta.plan.merge_plan_nodes"], [163, "eta.plan.merge_plan_nodes"]], "next (plannode attribute)": [[155, "eta.plan.PlanNode.next"], [156, "eta.plan.PlanNode.next"]], "obligations (planstep attribute)": [[155, "eta.plan.PlanStep.obligations"], [157, "eta.plan.PlanStep.obligations"]], "prev (plannode attribute)": [[155, "eta.plan.PlanNode.prev"], [156, "eta.plan.PlanNode.prev"]], "schemas (planstep attribute)": [[155, "eta.plan.PlanStep.schemas"], [157, "eta.plan.PlanStep.schemas"]], "serialize() (planstep method)": [[155, "eta.plan.PlanStep.serialize"], [157, "eta.plan.PlanStep.serialize"]], "serialize_from_roots() (plannode method)": [[155, "eta.plan.PlanNode.serialize_from_roots"], [156, "eta.plan.PlanNode.serialize_from_roots"]], "serialize_subtree() (plannode method)": [[155, "eta.plan.PlanNode.serialize_subtree"], [156, "eta.plan.PlanNode.serialize_subtree"]], "status() (plannode method)": [[155, "eta.plan.PlanNode.status"], [156, "eta.plan.PlanNode.status"]], "step (plannode attribute)": [[155, "eta.plan.PlanNode.step"], [156, "eta.plan.PlanNode.step"]], "substeps (planstep attribute)": [[155, "eta.plan.PlanStep.substeps"], [157, "eta.plan.PlanStep.substeps"]], "supersteps (planstep attribute)": [[155, "eta.plan.PlanStep.supersteps"], [157, "eta.plan.PlanStep.supersteps"]], "to_graph() (plannode method)": [[155, "eta.plan.PlanNode.to_graph"], [156, "eta.plan.PlanNode.to_graph"]], "unbind() (plannode method)": [[155, "eta.plan.PlanNode.unbind"], [156, "eta.plan.PlanNode.unbind"]], "unbind() (planstep method)": [[155, "eta.plan.PlanStep.unbind"], [157, "eta.plan.PlanStep.unbind"]], "visualize_plan() (in module eta.plan)": [[155, "eta.plan.visualize_plan"], [164, "eta.plan.visualize_plan"]], "__str__() (plannode method)": [[156, "eta.plan.PlanNode.__str__"]], "__str__() (planstep method)": [[157, "eta.plan.PlanStep.__str__"]], "dialschema (class in eta.schema)": [[165, "eta.schema.DialSchema"], [166, "eta.schema.DialSchema"]], "epischema (class in eta.schema)": [[165, "eta.schema.EpiSchema"], [167, "eta.schema.EpiSchema"]], "objschema (class in eta.schema)": [[165, "eta.schema.ObjSchema"], [168, "eta.schema.ObjSchema"]], "schema (class in eta.schema)": [[165, "eta.schema.Schema"], [169, "eta.schema.Schema"]], "schemalibrary (class in eta.schema)": [[165, "eta.schema.SchemaLibrary"], [170, "eta.schema.SchemaLibrary"]], "add() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.add"], [170, "eta.schema.SchemaLibrary.add"]], "bind() (schema method)": [[165, "eta.schema.Schema.bind"], [169, "eta.schema.Schema.bind"]], "bind_args() (schema method)": [[165, "eta.schema.Schema.bind_args"], [169, "eta.schema.Schema.bind_args"]], "bindings (schema attribute)": [[165, "eta.schema.Schema.bindings"], [169, "eta.schema.Schema.bindings"]], "contents (schema attribute)": [[165, "eta.schema.Schema.contents"], [169, "eta.schema.Schema.contents"]], "create() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.create"], [170, "eta.schema.SchemaLibrary.create"]], "dial (schemalibrary attribute)": [[165, "eta.schema.SchemaLibrary.dial"], [170, "eta.schema.SchemaLibrary.dial"]], "duplicate_variables() (schema method)": [[165, "eta.schema.Schema.duplicate_variables"], [169, "eta.schema.Schema.duplicate_variables"]], "embed() (schema method)": [[165, "eta.schema.Schema.embed"], [169, "eta.schema.Schema.embed"]], "embedder (schemalibrary attribute)": [[165, "eta.schema.SchemaLibrary.embedder"], [170, "eta.schema.SchemaLibrary.embedder"]], "embedding (schema attribute)": [[165, "eta.schema.Schema.embedding"], [169, "eta.schema.Schema.embedding"]], "epi (schemalibrary attribute)": [[165, "eta.schema.SchemaLibrary.epi"], [170, "eta.schema.SchemaLibrary.epi"]], "eta.schema": [[165, "module-eta.schema"]], "format() (schema method)": [[165, "eta.schema.Schema.format"], [169, "eta.schema.Schema.format"]], "from_lisp_dirs() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.from_lisp_dirs"], [170, "eta.schema.SchemaLibrary.from_lisp_dirs"]], "from_lisp_file() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.from_lisp_file"], [170, "eta.schema.SchemaLibrary.from_lisp_file"]], "get_contents() (schema method)": [[165, "eta.schema.Schema.get_contents"], [169, "eta.schema.Schema.get_contents"]], "get_obligations_of_ep() (dialschema method)": [[165, "eta.schema.DialSchema.get_obligations_of_ep"], [166, "eta.schema.DialSchema.get_obligations_of_ep"]], "get_participants() (schema method)": [[165, "eta.schema.Schema.get_participants"], [169, "eta.schema.Schema.get_participants"]], "get_schemas() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.get_schemas"], [170, "eta.schema.SchemaLibrary.get_schemas"]], "get_section() (schema method)": [[165, "eta.schema.Schema.get_section"], [169, "eta.schema.Schema.get_section"]], "get_section_eps() (schema method)": [[165, "eta.schema.Schema.get_section_eps"], [169, "eta.schema.Schema.get_section_eps"]], "get_section_wffs() (schema method)": [[165, "eta.schema.Schema.get_section_wffs"], [169, "eta.schema.Schema.get_section_wffs"]], "header (schema attribute)": [[165, "eta.schema.Schema.header"], [169, "eta.schema.Schema.header"]], "id (schema attribute)": [[165, "eta.schema.Schema.id"], [169, "eta.schema.Schema.id"]], "instantiate() (schema method)": [[165, "eta.schema.Schema.instantiate"], [169, "eta.schema.Schema.instantiate"]], "is_schema() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.is_schema"], [170, "eta.schema.SchemaLibrary.is_schema"]], "obj (schemalibrary attribute)": [[165, "eta.schema.SchemaLibrary.obj"], [170, "eta.schema.SchemaLibrary.obj"]], "participants (schema attribute)": [[165, "eta.schema.Schema.participants"], [169, "eta.schema.Schema.participants"]], "predicate (schema attribute)": [[165, "eta.schema.Schema.predicate"], [169, "eta.schema.Schema.predicate"]], "read_param_dict() (dialschema method)": [[165, "eta.schema.DialSchema.read_param_dict"], [166, "eta.schema.DialSchema.read_param_dict"]], "read_param_dict() (epischema method)": [[165, "eta.schema.EpiSchema.read_param_dict"], [167, "eta.schema.EpiSchema.read_param_dict"]], "read_param_dict() (objschema method)": [[165, "eta.schema.ObjSchema.read_param_dict"], [168, "eta.schema.ObjSchema.read_param_dict"]], "read_param_dict() (schema method)": [[165, "eta.schema.Schema.read_param_dict"], [169, "eta.schema.Schema.read_param_dict"]], "retrieve() (schema method)": [[165, "eta.schema.Schema.retrieve"], [169, "eta.schema.Schema.retrieve"]], "retrieve() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.retrieve"], [170, "eta.schema.SchemaLibrary.retrieve"]], "retrieve_knowledge() (schemalibrary method)": [[165, "eta.schema.SchemaLibrary.retrieve_knowledge"], [170, "eta.schema.SchemaLibrary.retrieve_knowledge"]], "sections (schema attribute)": [[165, "eta.schema.Schema.sections"], [169, "eta.schema.Schema.sections"]], "subst_mappings() (schema method)": [[165, "eta.schema.Schema.subst_mappings"], [169, "eta.schema.Schema.subst_mappings"]], "to_probability_dict() (schema method)": [[165, "eta.schema.Schema.to_probability_dict"], [169, "eta.schema.Schema.to_probability_dict"]], "unbind() (schema method)": [[165, "eta.schema.Schema.unbind"], [169, "eta.schema.Schema.unbind"]], "vars (schema attribute)": [[165, "eta.schema.Schema.vars"], [169, "eta.schema.Schema.vars"]], "__str__() (dialschema method)": [[166, "eta.schema.DialSchema.__str__"]], "bind() (dialschema method)": [[166, "eta.schema.DialSchema.bind"]], "bind_args() (dialschema method)": [[166, "eta.schema.DialSchema.bind_args"]], "duplicate_variables() (dialschema method)": [[166, "eta.schema.DialSchema.duplicate_variables"]], "embed() (dialschema method)": [[166, "eta.schema.DialSchema.embed"]], "format() (dialschema method)": [[166, "eta.schema.DialSchema.format"]], "get_contents() (dialschema method)": [[166, "eta.schema.DialSchema.get_contents"]], "get_participants() (dialschema method)": [[166, "eta.schema.DialSchema.get_participants"]], "get_section() (dialschema method)": [[166, "eta.schema.DialSchema.get_section"]], "get_section_eps() (dialschema method)": [[166, "eta.schema.DialSchema.get_section_eps"]], "get_section_wffs() (dialschema method)": [[166, "eta.schema.DialSchema.get_section_wffs"]], "instantiate() (dialschema method)": [[166, "eta.schema.DialSchema.instantiate"]], "retrieve() (dialschema method)": [[166, "eta.schema.DialSchema.retrieve"]], "subst_mappings() (dialschema method)": [[166, "eta.schema.DialSchema.subst_mappings"]], "to_probability_dict() (dialschema method)": [[166, "eta.schema.DialSchema.to_probability_dict"]], "unbind() (dialschema method)": [[166, "eta.schema.DialSchema.unbind"]], "__str__() (epischema method)": [[167, "eta.schema.EpiSchema.__str__"]], "bind() (epischema method)": [[167, "eta.schema.EpiSchema.bind"]], "bind_args() (epischema method)": [[167, "eta.schema.EpiSchema.bind_args"]], "duplicate_variables() (epischema method)": [[167, "eta.schema.EpiSchema.duplicate_variables"]], "embed() (epischema method)": [[167, "eta.schema.EpiSchema.embed"]], "format() (epischema method)": [[167, "eta.schema.EpiSchema.format"]], "get_contents() (epischema method)": [[167, "eta.schema.EpiSchema.get_contents"]], "get_participants() (epischema method)": [[167, "eta.schema.EpiSchema.get_participants"]], "get_section() (epischema method)": [[167, "eta.schema.EpiSchema.get_section"]], "get_section_eps() (epischema method)": [[167, "eta.schema.EpiSchema.get_section_eps"]], "get_section_wffs() (epischema method)": [[167, "eta.schema.EpiSchema.get_section_wffs"]], "instantiate() (epischema method)": [[167, "eta.schema.EpiSchema.instantiate"]], "retrieve() (epischema method)": [[167, "eta.schema.EpiSchema.retrieve"]], "subst_mappings() (epischema method)": [[167, "eta.schema.EpiSchema.subst_mappings"]], "to_probability_dict() (epischema method)": [[167, "eta.schema.EpiSchema.to_probability_dict"]], "unbind() (epischema method)": [[167, "eta.schema.EpiSchema.unbind"]], "__str__() (objschema method)": [[168, "eta.schema.ObjSchema.__str__"]], "bind() (objschema method)": [[168, "eta.schema.ObjSchema.bind"]], "bind_args() (objschema method)": [[168, "eta.schema.ObjSchema.bind_args"]], "duplicate_variables() (objschema method)": [[168, "eta.schema.ObjSchema.duplicate_variables"]], "embed() (objschema method)": [[168, "eta.schema.ObjSchema.embed"]], "format() (objschema method)": [[168, "eta.schema.ObjSchema.format"]], "get_contents() (objschema method)": [[168, "eta.schema.ObjSchema.get_contents"]], "get_participants() (objschema method)": [[168, "eta.schema.ObjSchema.get_participants"]], "get_section() (objschema method)": [[168, "eta.schema.ObjSchema.get_section"]], "get_section_eps() (objschema method)": [[168, "eta.schema.ObjSchema.get_section_eps"]], "get_section_wffs() (objschema method)": [[168, "eta.schema.ObjSchema.get_section_wffs"]], "instantiate() (objschema method)": [[168, "eta.schema.ObjSchema.instantiate"]], "retrieve() (objschema method)": [[168, "eta.schema.ObjSchema.retrieve"]], "subst_mappings() (objschema method)": [[168, "eta.schema.ObjSchema.subst_mappings"]], "to_probability_dict() (objschema method)": [[168, "eta.schema.ObjSchema.to_probability_dict"]], "unbind() (objschema method)": [[168, "eta.schema.ObjSchema.unbind"]], "__str__() (schema method)": [[169, "eta.schema.Schema.__str__"]], "__str__() (schemalibrary method)": [[170, "eta.schema.SchemaLibrary.__str__"]], "eta.transducers": [[171, "module-eta.transducers"]], "affecttransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.AffectTransducer"], [173, "eta.transducers.base.AffectTransducer"]], "answertransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.AnswerTransducer"], [174, "eta.transducers.base.AnswerTransducer"]], "asktransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.AskTransducer"], [175, "eta.transducers.base.AskTransducer"]], "gisttransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.GistTransducer"], [176, "eta.transducers.base.GistTransducer"]], "paraphrasetransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.ParaphraseTransducer"], [177, "eta.transducers.base.ParaphraseTransducer"]], "pragmatictransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.PragmaticTransducer"], [178, "eta.transducers.base.PragmaticTransducer"]], "reactiontransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.ReactionTransducer"], [179, "eta.transducers.base.ReactionTransducer"]], "reasonbottomuptransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.ReasonBottomUpTransducer"], [180, "eta.transducers.base.ReasonBottomUpTransducer"]], "reasontopdowntransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.ReasonTopDownTransducer"], [181, "eta.transducers.base.ReasonTopDownTransducer"]], "responsetransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.ResponseTransducer"], [182, "eta.transducers.base.ResponseTransducer"]], "semantictransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.SemanticTransducer"], [183, "eta.transducers.base.SemanticTransducer"]], "subplantransducer (class in eta.transducers.base)": [[172, "eta.transducers.base.SubplanTransducer"], [184, "eta.transducers.base.SubplanTransducer"]], "transducer (class in eta.transducers.base)": [[172, "eta.transducers.base.Transducer"], [185, "eta.transducers.base.Transducer"]], "cost() (transducer method)": [[172, "eta.transducers.base.Transducer.cost"], [185, "eta.transducers.base.Transducer.cost"]], "eta.transducers.base": [[172, "module-eta.transducers.base"]], "__call__() (affecttransducer method)": [[173, "eta.transducers.base.AffectTransducer.__call__"]], "cost() (affecttransducer method)": [[173, "eta.transducers.base.AffectTransducer.cost"]], "__call__() (answertransducer method)": [[174, "eta.transducers.base.AnswerTransducer.__call__"]], "cost() (answertransducer method)": [[174, "eta.transducers.base.AnswerTransducer.cost"]], "__call__() (asktransducer method)": [[175, "eta.transducers.base.AskTransducer.__call__"]], "cost() (asktransducer method)": [[175, "eta.transducers.base.AskTransducer.cost"]], "__call__() (gisttransducer method)": [[176, "eta.transducers.base.GistTransducer.__call__"]], "cost() (gisttransducer method)": [[176, "eta.transducers.base.GistTransducer.cost"]], "__call__() (paraphrasetransducer method)": [[177, "eta.transducers.base.ParaphraseTransducer.__call__"]], "cost() (paraphrasetransducer method)": [[177, "eta.transducers.base.ParaphraseTransducer.cost"]], "__call__() (pragmatictransducer method)": [[178, "eta.transducers.base.PragmaticTransducer.__call__"]], "cost() (pragmatictransducer method)": [[178, "eta.transducers.base.PragmaticTransducer.cost"]], "__call__() (reactiontransducer method)": [[179, "eta.transducers.base.ReactionTransducer.__call__"]], "cost() (reactiontransducer method)": [[179, "eta.transducers.base.ReactionTransducer.cost"]], "__call__() (reasonbottomuptransducer method)": [[180, "eta.transducers.base.ReasonBottomUpTransducer.__call__"]], "cost() (reasonbottomuptransducer method)": [[180, "eta.transducers.base.ReasonBottomUpTransducer.cost"]], "__call__() (reasontopdowntransducer method)": [[181, "eta.transducers.base.ReasonTopDownTransducer.__call__"]], "cost() (reasontopdowntransducer method)": [[181, "eta.transducers.base.ReasonTopDownTransducer.cost"]], "__call__() (responsetransducer method)": [[182, "eta.transducers.base.ResponseTransducer.__call__"]], "cost() (responsetransducer method)": [[182, "eta.transducers.base.ResponseTransducer.cost"]], "__call__() (semantictransducer method)": [[183, "eta.transducers.base.SemanticTransducer.__call__"]], "cost() (semantictransducer method)": [[183, "eta.transducers.base.SemanticTransducer.cost"]], "__call__() (subplantransducer method)": [[184, "eta.transducers.base.SubplanTransducer.__call__"]], "cost() (subplantransducer method)": [[184, "eta.transducers.base.SubplanTransducer.cost"]], "__call__() (transducer method)": [[185, "eta.transducers.base.Transducer.__call__"]], "ttaffecttransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTAffectTransducer"], [187, "eta.transducers.tt.TTAffectTransducer"]], "ttanswertransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTAnswerTransducer"], [188, "eta.transducers.tt.TTAnswerTransducer"]], "ttasktransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTAskTransducer"], [189, "eta.transducers.tt.TTAskTransducer"]], "ttgisttransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTGistTransducer"], [190, "eta.transducers.tt.TTGistTransducer"]], "ttparaphrasetransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTParaphraseTransducer"], [191, "eta.transducers.tt.TTParaphraseTransducer"]], "ttpragmatictransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTPragmaticTransducer"], [192, "eta.transducers.tt.TTPragmaticTransducer"]], "ttreactiontransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTReactionTransducer"], [193, "eta.transducers.tt.TTReactionTransducer"]], "ttreasonbottomuptransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTReasonBottomUpTransducer"], [194, "eta.transducers.tt.TTReasonBottomUpTransducer"]], "ttreasontopdowntransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTReasonTopDownTransducer"], [195, "eta.transducers.tt.TTReasonTopDownTransducer"]], "ttresponsetransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTResponseTransducer"], [196, "eta.transducers.tt.TTResponseTransducer"]], "ttsemantictransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTSemanticTransducer"], [197, "eta.transducers.tt.TTSemanticTransducer"]], "ttsubplantransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTSubplanTransducer"], [198, "eta.transducers.tt.TTSubplanTransducer"]], "tttransducer (class in eta.transducers.tt)": [[186, "eta.transducers.tt.TTTransducer"], [199, "eta.transducers.tt.TTTransducer"]], "cost() (tttransducer method)": [[186, "eta.transducers.tt.TTTransducer.cost"], [199, "eta.transducers.tt.TTTransducer.cost"]], "eta.transducers.tt": [[186, "module-eta.transducers.tt"]], "feats (tttransducer attribute)": [[186, "eta.transducers.tt.TTTransducer.feats"], [199, "eta.transducers.tt.TTTransducer.feats"]], "roots (tttransducer attribute)": [[186, "eta.transducers.tt.TTTransducer.roots"], [199, "eta.transducers.tt.TTTransducer.roots"]], "trees (tttransducer attribute)": [[186, "eta.transducers.tt.TTTransducer.trees"], [199, "eta.transducers.tt.TTTransducer.trees"]], "__call__() (ttaffecttransducer method)": [[187, "eta.transducers.tt.TTAffectTransducer.__call__"]], "cost() (ttaffecttransducer method)": [[187, "eta.transducers.tt.TTAffectTransducer.cost"]], "__call__() (ttanswertransducer method)": [[188, "eta.transducers.tt.TTAnswerTransducer.__call__"]], "cost() (ttanswertransducer method)": [[188, "eta.transducers.tt.TTAnswerTransducer.cost"]], "__call__() (ttasktransducer method)": [[189, "eta.transducers.tt.TTAskTransducer.__call__"]], "cost() (ttasktransducer method)": [[189, "eta.transducers.tt.TTAskTransducer.cost"]], "__call__() (ttgisttransducer method)": [[190, "eta.transducers.tt.TTGistTransducer.__call__"]], "cost() (ttgisttransducer method)": [[190, "eta.transducers.tt.TTGistTransducer.cost"]], "__call__() (ttparaphrasetransducer method)": [[191, "eta.transducers.tt.TTParaphraseTransducer.__call__"]], "cost() (ttparaphrasetransducer method)": [[191, "eta.transducers.tt.TTParaphraseTransducer.cost"]], "__call__() (ttpragmatictransducer method)": [[192, "eta.transducers.tt.TTPragmaticTransducer.__call__"]], "cost() (ttpragmatictransducer method)": [[192, "eta.transducers.tt.TTPragmaticTransducer.cost"]], "__call__() (ttreactiontransducer method)": [[193, "eta.transducers.tt.TTReactionTransducer.__call__"]], "cost() (ttreactiontransducer method)": [[193, "eta.transducers.tt.TTReactionTransducer.cost"]], "__call__() (ttreasonbottomuptransducer method)": [[194, "eta.transducers.tt.TTReasonBottomUpTransducer.__call__"]], "cost() (ttreasonbottomuptransducer method)": [[194, "eta.transducers.tt.TTReasonBottomUpTransducer.cost"]], "__call__() (ttreasontopdowntransducer method)": [[195, "eta.transducers.tt.TTReasonTopDownTransducer.__call__"]], "cost() (ttreasontopdowntransducer method)": [[195, "eta.transducers.tt.TTReasonTopDownTransducer.cost"]], "__call__() (ttresponsetransducer method)": [[196, "eta.transducers.tt.TTResponseTransducer.__call__"]], "cost() (ttresponsetransducer method)": [[196, "eta.transducers.tt.TTResponseTransducer.cost"]], "__call__() (ttsemantictransducer method)": [[197, "eta.transducers.tt.TTSemanticTransducer.__call__"]], "cost() (ttsemantictransducer method)": [[197, "eta.transducers.tt.TTSemanticTransducer.cost"]], "__call__() (ttsubplantransducer method)": [[198, "eta.transducers.tt.TTSubplanTransducer.__call__"]], "cost() (ttsubplantransducer method)": [[198, "eta.transducers.tt.TTSubplanTransducer.cost"]], "__call__() (tttransducer method)": [[199, "eta.transducers.tt.TTTransducer.__call__"]], "eta.util": [[200, "module-eta.util"]], "clear() (in module eta.util.buffer)": [[201, "eta.util.buffer.clear"], [202, "eta.util.buffer.clear"]], "enqueue() (in module eta.util.buffer)": [[201, "eta.util.buffer.enqueue"], [203, "eta.util.buffer.enqueue"]], "enqueue_ordered() (in module eta.util.buffer)": [[201, "eta.util.buffer.enqueue_ordered"], [204, "eta.util.buffer.enqueue_ordered"]], "eta.util.buffer": [[201, "module-eta.util.buffer"]], "get_item() (in module eta.util.buffer)": [[201, "eta.util.buffer.get_item"], [205, "eta.util.buffer.get_item"]], "is_empty() (in module eta.util.buffer)": [[201, "eta.util.buffer.is_empty"], [206, "eta.util.buffer.is_empty"]], "iterate() (in module eta.util.buffer)": [[201, "eta.util.buffer.iterate"], [207, "eta.util.buffer.iterate"]], "max_importance() (in module eta.util.buffer)": [[201, "eta.util.buffer.max_importance"], [208, "eta.util.buffer.max_importance"]], "pop_all() (in module eta.util.buffer)": [[201, "eta.util.buffer.pop_all"], [209, "eta.util.buffer.pop_all"]], "pop_item() (in module eta.util.buffer)": [[201, "eta.util.buffer.pop_item"], [210, "eta.util.buffer.pop_item"]], "append_file() (in module eta.util.file)": [[211, "eta.util.file.append_file"], [212, "eta.util.file.append_file"]], "clear() (in module eta.util.file)": [[211, "eta.util.file.clear"], [213, "eta.util.file.clear"]], "ensure_dir_exists() (in module eta.util.file)": [[211, "eta.util.file.ensure_dir_exists"], [214, "eta.util.file.ensure_dir_exists"]], "ensure_file_exists() (in module eta.util.file)": [[211, "eta.util.file.ensure_file_exists"], [215, "eta.util.file.ensure_file_exists"]], "eta.util.file": [[211, "module-eta.util.file"]], "exists() (in module eta.util.file)": [[211, "eta.util.file.exists"], [216, "eta.util.file.exists"]], "get_path() (in module eta.util.file)": [[211, "eta.util.file.get_path"], [217, "eta.util.file.get_path"]], "load_json() (in module eta.util.file)": [[211, "eta.util.file.load_json"], [218, "eta.util.file.load_json"]], "read_file() (in module eta.util.file)": [[211, "eta.util.file.read_file"], [219, "eta.util.file.read_file"]], "read_lines() (in module eta.util.file)": [[211, "eta.util.file.read_lines"], [220, "eta.util.file.read_lines"]], "remove() (in module eta.util.file)": [[211, "eta.util.file.remove"], [221, "eta.util.file.remove"]], "write_file() (in module eta.util.file)": [[211, "eta.util.file.write_file"], [222, "eta.util.file.write_file"]], "write_json() (in module eta.util.file)": [[211, "eta.util.file.write_json"], [223, "eta.util.file.write_json"]], "append() (in module eta.util.general)": [[224, "eta.util.general.append"], [225, "eta.util.general.append"]], "argmax() (in module eta.util.general)": [[224, "eta.util.general.argmax"], [226, "eta.util.general.argmax"]], "atom() (in module eta.util.general)": [[224, "eta.util.general.atom"], [227, "eta.util.general.atom"]], "certainty_to_period() (in module eta.util.general)": [[224, "eta.util.general.certainty_to_period"], [228, "eta.util.general.certainty_to_period"]], "clear_symtab() (in module eta.util.general)": [[224, "eta.util.general.clear_symtab"], [229, "eta.util.general.clear_symtab"]], "cons() (in module eta.util.general)": [[224, "eta.util.general.cons"], [230, "eta.util.general.cons"]], "cons_dict() (in module eta.util.general)": [[224, "eta.util.general.cons_dict"], [231, "eta.util.general.cons_dict"]], "dict_get() (in module eta.util.general)": [[224, "eta.util.general.dict_get"], [232, "eta.util.general.dict_get"]], "dict_rem() (in module eta.util.general)": [[224, "eta.util.general.dict_rem"], [233, "eta.util.general.dict_rem"]], "dict_rem_val() (in module eta.util.general)": [[224, "eta.util.general.dict_rem_val"], [234, "eta.util.general.dict_rem_val"]], "dict_substall_keys() (in module eta.util.general)": [[224, "eta.util.general.dict_substall_keys"], [235, "eta.util.general.dict_substall_keys"]], "dual_var() (in module eta.util.general)": [[224, "eta.util.general.dual_var"], [236, "eta.util.general.dual_var"]], "duplicate_var() (in module eta.util.general)": [[224, "eta.util.general.duplicate_var"], [237, "eta.util.general.duplicate_var"]], "episode_name() (in module eta.util.general)": [[224, "eta.util.general.episode_name"], [238, "eta.util.general.episode_name"]], "episode_var() (in module eta.util.general)": [[224, "eta.util.general.episode_var"], [239, "eta.util.general.episode_var"]], "escaped_symbol_p() (in module eta.util.general)": [[224, "eta.util.general.escaped_symbol_p"], [240, "eta.util.general.escaped_symbol_p"]], "eta.util.general": [[224, "module-eta.util.general"]], "extract_category() (in module eta.util.general)": [[224, "eta.util.general.extract_category"], [241, "eta.util.general.extract_category"]], "flatten() (in module eta.util.general)": [[224, "eta.util.general.flatten"], [242, "eta.util.general.flatten"]], "gentemp() (in module eta.util.general)": [[224, "eta.util.general.gentemp"], [243, "eta.util.general.gentemp"]], "get_keyword_contents() (in module eta.util.general)": [[224, "eta.util.general.get_keyword_contents"], [244, "eta.util.general.get_keyword_contents"]], "has_elapsed_certainty_period() (in module eta.util.general)": [[224, "eta.util.general.has_elapsed_certainty_period"], [245, "eta.util.general.has_elapsed_certainty_period"]], "indent() (in module eta.util.general)": [[224, "eta.util.general.indent"], [246, "eta.util.general.indent"]], "isquote() (in module eta.util.general)": [[224, "eta.util.general.isquote"], [247, "eta.util.general.isquote"]], "linsum() (in module eta.util.general)": [[224, "eta.util.general.linsum"], [248, "eta.util.general.linsum"]], "listp() (in module eta.util.general)": [[224, "eta.util.general.listp"], [249, "eta.util.general.listp"]], "normalize() (in module eta.util.general)": [[224, "eta.util.general.normalize"], [250, "eta.util.general.normalize"]], "push() (in module eta.util.general)": [[224, "eta.util.general.push"], [251, "eta.util.general.push"]], "random_element() (in module eta.util.general)": [[224, "eta.util.general.random_element"], [252, "eta.util.general.random_element"]], "rec_find() (in module eta.util.general)": [[224, "eta.util.general.rec_find"], [253, "eta.util.general.rec_find"]], "rec_find_if() (in module eta.util.general)": [[224, "eta.util.general.rec_find_if"], [254, "eta.util.general.rec_find_if"]], "rec_remove() (in module eta.util.general)": [[224, "eta.util.general.rec_remove"], [255, "eta.util.general.rec_remove"]], "rec_replace() (in module eta.util.general)": [[224, "eta.util.general.rec_replace"], [256, "eta.util.general.rec_replace"]], "remove_duplicates() (in module eta.util.general)": [[224, "eta.util.general.remove_duplicates"], [257, "eta.util.general.remove_duplicates"]], "remove_nil() (in module eta.util.general)": [[224, "eta.util.general.remove_nil"], [258, "eta.util.general.remove_nil"]], "replaceall() (in module eta.util.general)": [[224, "eta.util.general.replaceall"], [259, "eta.util.general.replaceall"]], "split_by_cond() (in module eta.util.general)": [[224, "eta.util.general.split_by_cond"], [260, "eta.util.general.split_by_cond"]], "squash() (in module eta.util.general)": [[224, "eta.util.general.squash"], [261, "eta.util.general.squash"]], "standardize() (in module eta.util.general)": [[224, "eta.util.general.standardize"], [262, "eta.util.general.standardize"]], "subst() (in module eta.util.general)": [[224, "eta.util.general.subst"], [263, "eta.util.general.subst"]], "substall() (in module eta.util.general)": [[224, "eta.util.general.substall"], [264, "eta.util.general.substall"]], "symbolp() (in module eta.util.general)": [[224, "eta.util.general.symbolp"], [265, "eta.util.general.symbolp"]], "to_key() (in module eta.util.general)": [[224, "eta.util.general.to_key"], [266, "eta.util.general.to_key"]], "variablep() (in module eta.util.general)": [[224, "eta.util.general.variablep"], [267, "eta.util.general.variablep"]], "balanced_substr() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.balanced_substr"], [269, "eta.util.sexpr.balanced_substr"]], "clean_lisp() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.clean_lisp"], [270, "eta.util.sexpr.clean_lisp"]], "clean_s_expr() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.clean_s_expr"], [271, "eta.util.sexpr.clean_s_expr"]], "compress_quotes() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.compress_quotes"], [272, "eta.util.sexpr.compress_quotes"]], "convert_quotes() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.convert_quotes"], [273, "eta.util.sexpr.convert_quotes"]], "eta.util.sexpr": [[268, "module-eta.util.sexpr"]], "list_to_s_expr() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.list_to_s_expr"], [274, "eta.util.sexpr.list_to_s_expr"]], "list_to_str() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.list_to_str"], [275, "eta.util.sexpr.list_to_str"]], "parse_s_expr() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.parse_s_expr"], [276, "eta.util.sexpr.parse_s_expr"]], "read_lisp() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.read_lisp"], [277, "eta.util.sexpr.read_lisp"]], "standardize_symbols() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.standardize_symbols"], [278, "eta.util.sexpr.standardize_symbols"]], "write_lisp() (in module eta.util.sexpr)": [[268, "eta.util.sexpr.write_lisp"], [279, "eta.util.sexpr.write_lisp"]], "timepoint (class in eta.util.time)": [[280, "eta.util.time.TimePoint"], [281, "eta.util.time.TimePoint"]], "eta.util.time": [[280, "module-eta.util.time"]], "format() (timepoint method)": [[280, "eta.util.time.TimePoint.format"], [281, "eta.util.time.TimePoint.format"]], "format_date() (timepoint method)": [[280, "eta.util.time.TimePoint.format_date"], [281, "eta.util.time.TimePoint.format_date"]], "get_elapsed() (in module eta.util.time)": [[280, "eta.util.time.get_elapsed"], [282, "eta.util.time.get_elapsed"]], "lower (timepoint attribute)": [[280, "eta.util.time.TimePoint.lower"], [281, "eta.util.time.TimePoint.lower"]], "now() (in module eta.util.time)": [[280, "eta.util.time.now"], [283, "eta.util.time.now"]], "record_from_time_pair() (in module eta.util.time)": [[280, "eta.util.time.record_from_time_pair"], [284, "eta.util.time.record_from_time_pair"]], "time_pair_from_record() (in module eta.util.time)": [[280, "eta.util.time.time_pair_from_record"], [285, "eta.util.time.time_pair_from_record"]], "time_pair_from_tuple() (in module eta.util.time)": [[280, "eta.util.time.time_pair_from_tuple"], [286, "eta.util.time.time_pair_from_tuple"]], "to_num() (timepoint method)": [[280, "eta.util.time.TimePoint.to_num"], [281, "eta.util.time.TimePoint.to_num"]], "to_ulf() (timepoint method)": [[280, "eta.util.time.TimePoint.to_ulf"], [281, "eta.util.time.TimePoint.to_ulf"]], "tuple_from_time_pair() (in module eta.util.time)": [[280, "eta.util.time.tuple_from_time_pair"], [290, "eta.util.time.tuple_from_time_pair"]], "update() (timepoint method)": [[280, "eta.util.time.TimePoint.update"], [281, "eta.util.time.TimePoint.update"]], "upper (timepoint attribute)": [[280, "eta.util.time.TimePoint.upper"], [281, "eta.util.time.TimePoint.upper"]], "__str__() (timepoint method)": [[281, "eta.util.time.TimePoint.__str__"]], "time_pair_p() (in module eta.util.time)": [[287, "eta.util.time.time_pair_p"]], "time_record_p() (in module eta.util.time)": [[288, "eta.util.time.time_record_p"]], "time_tuple_p() (in module eta.util.time)": [[289, "eta.util.time.time_tuple_p"]], "eta.util.tt": [[291, "module-eta.util.tt"]], "choose_result_for() (in module eta.util.tt.choice)": [[292, "eta.util.tt.choice.choose_result_for"], [293, "eta.util.tt.choice.choose_result_for"]], "eta.util.tt.choice": [[292, "module-eta.util.tt.choice"]], "is_tree_root() (in module eta.util.tt.choice)": [[294, "eta.util.tt.choice.is_tree_root"]], "is_tree_root_clause() (in module eta.util.tt.choice)": [[295, "eta.util.tt.choice.is_tree_root_clause"]], "is_tree_root_list() (in module eta.util.tt.choice)": [[296, "eta.util.tt.choice.is_tree_root_list"]], "attachfeat() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.attachfeat"], [298, "eta.util.tt.parse.attachfeat"]], "eta.util.tt.parse": [[297, "module-eta.util.tt.parse"]], "from_lisp_dirs() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.from_lisp_dirs"], [299, "eta.util.tt.parse.from_lisp_dirs"]], "from_lisp_file() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.from_lisp_file"], [300, "eta.util.tt.parse.from_lisp_file"]], "init_node() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.init_node"], [301, "eta.util.tt.parse.init_node"]], "merge_feats() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.merge_feats"], [302, "eta.util.tt.parse.merge_feats"]], "merge_preds() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.merge_preds"], [303, "eta.util.tt.parse.merge_preds"]], "merge_trees() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.merge_trees"], [304, "eta.util.tt.parse.merge_trees"]], "read_preds_file() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.read_preds_file"], [305, "eta.util.tt.parse.read_preds_file"]], "readrules() (in module eta.util.tt.parse)": [[297, "eta.util.tt.parse.readrules"], [306, "eta.util.tt.parse.readrules"]], "affirm_adv() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.affirm_adv"], [308, "eta.util.tt.preds.affirm_adv"]], "comma() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.comma"], [309, "eta.util.tt.preds.comma"]], "eta.util.tt.preds": [[307, "module-eta.util.tt.preds"]], "lex_ulf() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.lex_ulf"], [310, "eta.util.tt.preds.lex_ulf"]], "modal() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.modal"], [311, "eta.util.tt.preds.modal"]], "non_neg() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.non_neg"], [312, "eta.util.tt.preds.non_neg"]], "non_neg_mod() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.non_neg_mod"], [313, "eta.util.tt.preds.non_neg_mod"]], "prefix_each() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.prefix_each"], [314, "eta.util.tt.preds.prefix_each"]], "quote_to_list() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.quote_to_list"], [315, "eta.util.tt.preds.quote_to_list"]], "split_sentences() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.split_sentences"], [316, "eta.util.tt.preds.split_sentences"]], "zero() (in module eta.util.tt.preds)": [[307, "eta.util.tt.preds.zero"], [317, "eta.util.tt.preds.zero"]], "eta.util.ulf": [[318, "module-eta.util.ulf"]], "eta.util.ulf.lex": [[319, "module-eta.util.ulf.lex"]], "stem_superlative() (in module eta.util.ulf.lex)": [[319, "eta.util.ulf.lex.stem_superlative"], [320, "eta.util.ulf.lex.stem_superlative"]], "to_ulf() (in module eta.util.ulf.lex)": [[319, "eta.util.ulf.lex.to_ulf"], [321, "eta.util.ulf.lex.to_ulf"]]}})